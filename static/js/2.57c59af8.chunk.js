/*! For license information please see 2.57c59af8.chunk.js.LICENSE.txt */
(this.webpackJsonpposenet=this.webpackJsonpposenet||[]).push([[2],[function(t,e,n){"use strict";n.d(e,"cc",(function(){return qt})),n.d(e,"Tc",(function(){return K.a})),n.d(e,"Uc",(function(){return K.b})),n.d(e,"Xe",(function(){return Kt.a})),n.d(e,"jf",(function(){return Kt.b})),n.d(e,"dd",(function(){return Xt.a})),n.d(e,"ed",(function(){return Xt.b})),n.d(e,"fd",(function(){return Xt.c})),n.d(e,"gd",(function(){return Xt.d})),n.d(e,"hd",(function(){return Xt.e})),n.d(e,"id",(function(){return Xt.f})),n.d(e,"jd",(function(){return Xt.g})),n.d(e,"md",(function(){return Xt.h})),n.d(e,"nd",(function(){return Xt.i})),n.d(e,"od",(function(){return Xt.j})),n.d(e,"qd",(function(){return Xt.k})),n.d(e,"rd",(function(){return Xt.l})),n.d(e,"sd",(function(){return Xt.m})),n.d(e,"td",(function(){return Xt.n})),n.d(e,"ud",(function(){return Xt.o})),n.d(e,"vd",(function(){return Xt.p})),n.d(e,"wd",(function(){return Xt.q})),n.d(e,"xd",(function(){return Xt.r})),n.d(e,"yd",(function(){return Xt.s})),n.d(e,"zd",(function(){return Xt.t})),n.d(e,"Ad",(function(){return Xt.u})),n.d(e,"Bd",(function(){return Xt.v})),n.d(e,"Cd",(function(){return Xt.w})),n.d(e,"Dd",(function(){return Xt.x})),n.d(e,"Gd",(function(){return Xt.y})),n.d(e,"Id",(function(){return Xt.A})),n.d(e,"Ld",(function(){return Xt.B})),n.d(e,"Md",(function(){return Xt.C})),n.d(e,"Nd",(function(){return Xt.D})),n.d(e,"Od",(function(){return Xt.E})),n.d(e,"Pd",(function(){return Xt.F})),n.d(e,"Rd",(function(){return Xt.H})),n.d(e,"Sd",(function(){return Xt.I})),n.d(e,"Td",(function(){return Xt.J})),n.d(e,"Yd",(function(){return Xt.L})),n.d(e,"ae",(function(){return Xt.N})),n.d(e,"be",(function(){return Xt.O})),n.d(e,"ce",(function(){return Xt.P})),n.d(e,"de",(function(){return Xt.Q})),n.d(e,"ee",(function(){return Xt.R})),n.d(e,"fe",(function(){return Xt.S})),n.d(e,"ge",(function(){return Xt.T})),n.d(e,"he",(function(){return Xt.U})),n.d(e,"je",(function(){return Xt.V})),n.d(e,"ke",(function(){return Xt.W})),n.d(e,"le",(function(){return Xt.X})),n.d(e,"me",(function(){return Xt.Y})),n.d(e,"ne",(function(){return Xt.Z})),n.d(e,"pe",(function(){return Xt.ab})),n.d(e,"qe",(function(){return Xt.bb})),n.d(e,"re",(function(){return Xt.cb})),n.d(e,"se",(function(){return Xt.db})),n.d(e,"te",(function(){return Xt.eb})),n.d(e,"ue",(function(){return Xt.fb})),n.d(e,"ve",(function(){return Xt.gb})),n.d(e,"we",(function(){return Xt.hb})),n.d(e,"xe",(function(){return Xt.ib})),n.d(e,"Ae",(function(){return Xt.jb})),n.d(e,"Be",(function(){return Xt.kb})),n.d(e,"Ce",(function(){return Xt.lb})),n.d(e,"De",(function(){return Xt.mb})),n.d(e,"Ee",(function(){return Xt.nb})),n.d(e,"Fe",(function(){return Xt.ob})),n.d(e,"Ie",(function(){return Xt.pb})),n.d(e,"Je",(function(){return Xt.qb})),n.d(e,"Ke",(function(){return Xt.rb})),n.d(e,"Le",(function(){return Xt.sb})),n.d(e,"Me",(function(){return Xt.tb})),n.d(e,"Ne",(function(){return Xt.ub})),n.d(e,"Pe",(function(){return Xt.vb})),n.d(e,"Qe",(function(){return Xt.wb})),n.d(e,"Re",(function(){return Xt.xb})),n.d(e,"Se",(function(){return Xt.yb})),n.d(e,"Te",(function(){return Xt.zb})),n.d(e,"Ue",(function(){return Xt.Ab})),n.d(e,"Ve",(function(){return Xt.Bb})),n.d(e,"We",(function(){return Xt.Cb})),n.d(e,"Ye",(function(){return Xt.Db})),n.d(e,"Ze",(function(){return Xt.Eb})),n.d(e,"af",(function(){return Xt.Fb})),n.d(e,"bf",(function(){return Xt.Gb})),n.d(e,"ef",(function(){return Xt.Hb})),n.d(e,"hf",(function(){return Xt.Jb})),n.d(e,"if",(function(){return Xt.Kb})),n.d(e,"lf",(function(){return Xt.Lb})),n.d(e,"of",(function(){return Xt.Mb})),n.d(e,"pf",(function(){return Xt.Nb})),n.d(e,"qf",(function(){return Xt.Ob})),n.d(e,"gf",(function(){return Xt.Ib})),n.d(e,"Hd",(function(){return Xt.z})),n.d(e,"Ud",(function(){return Xt.K})),n.d(e,"Zd",(function(){return Xt.M})),n.d(e,"Qd",(function(){return Xt.G})),n.d(e,"ff",(function(){return fe})),n.d(e,"Jd",(function(){return Ut.d})),n.d(e,"ie",(function(){return Ut.f})),n.d(e,"df",(function(){return Ut.i})),n.d(e,"Fd",(function(){return Ut.c})),n.d(e,"Wd",(function(){return Ut.e})),n.d(e,"He",(function(){return Ut.h})),n.d(e,"ye",(function(){return Ut.g})),n.d(e,"kd",(function(){return Ut.a})),n.d(e,"ze",(function(){return ft.e})),n.d(e,"mf",(function(){return Gt.b})),n.d(e,"Kd",(function(){return d.b})),n.d(e,"nf",(function(){return Wt})),n.d(e,"oe",(function(){return me.a})),n.d(e,"pd",(function(){return a})),n.d(e,"Vd",(function(){return r})),n.d(e,"Ge",(function(){return s})),n.d(e,"kf",(function(){return Vt})),n.d(e,"ld",(function(){return c})),n.d(e,"cf",(function(){return Bt})),n.d(e,"Oe",(function(){return o})),n.d(e,"Ed",(function(){return on})),n.d(e,"Xd",(function(){return u})),n.d(e,"vb",(function(){return un.b})),n.d(e,"L",(function(){return un.a})),n.d(e,"a",(function(){return ht.a})),n.d(e,"b",(function(){return ht.b})),n.d(e,"c",(function(){return ht.c})),n.d(e,"d",(function(){return ht.d})),n.d(e,"e",(function(){return ht.e})),n.d(e,"f",(function(){return ht.f})),n.d(e,"g",(function(){return ht.g})),n.d(e,"h",(function(){return ht.h})),n.d(e,"i",(function(){return ht.i})),n.d(e,"j",(function(){return ht.j})),n.d(e,"k",(function(){return ht.k})),n.d(e,"l",(function(){return ht.l})),n.d(e,"n",(function(){return ht.n})),n.d(e,"m",(function(){return ht.m})),n.d(e,"o",(function(){return ht.o})),n.d(e,"r",(function(){return ht.r})),n.d(e,"p",(function(){return ht.p})),n.d(e,"q",(function(){return ht.q})),n.d(e,"s",(function(){return ht.s})),n.d(e,"t",(function(){return ht.t})),n.d(e,"u",(function(){return ht.u})),n.d(e,"v",(function(){return ht.w})),n.d(e,"w",(function(){return ht.x})),n.d(e,"x",(function(){return ht.y})),n.d(e,"y",(function(){return ht.z})),n.d(e,"z",(function(){return ht.A})),n.d(e,"A",(function(){return ht.B})),n.d(e,"B",(function(){return ht.C})),n.d(e,"C",(function(){return ht.D})),n.d(e,"D",(function(){return ht.E})),n.d(e,"E",(function(){return ht.F})),n.d(e,"F",(function(){return ht.G})),n.d(e,"G",(function(){return ht.H})),n.d(e,"H",(function(){return ht.I})),n.d(e,"I",(function(){return ht.J})),n.d(e,"K",(function(){return ht.L})),n.d(e,"J",(function(){return ht.K})),n.d(e,"M",(function(){return ht.M})),n.d(e,"N",(function(){return ht.N})),n.d(e,"O",(function(){return ht.O})),n.d(e,"P",(function(){return ht.P})),n.d(e,"Q",(function(){return ht.Q})),n.d(e,"R",(function(){return ht.R})),n.d(e,"S",(function(){return ht.S})),n.d(e,"U",(function(){return ht.U})),n.d(e,"T",(function(){return ht.T})),n.d(e,"kc",(function(){return ht.jc})),n.d(e,"V",(function(){return ht.V})),n.d(e,"W",(function(){return ht.W})),n.d(e,"Y",(function(){return ht.Y})),n.d(e,"X",(function(){return ht.X})),n.d(e,"Z",(function(){return ht.Z})),n.d(e,"ab",(function(){return ht.ab})),n.d(e,"bb",(function(){return ht.bb})),n.d(e,"cb",(function(){return ht.cb})),n.d(e,"db",(function(){return ht.db})),n.d(e,"eb",(function(){return ht.eb})),n.d(e,"fb",(function(){return ht.fb})),n.d(e,"gb",(function(){return ht.gb})),n.d(e,"ib",(function(){return ht.ib})),n.d(e,"mb",(function(){return ht.mb})),n.d(e,"lb",(function(){return ht.lb})),n.d(e,"nb",(function(){return ht.nb})),n.d(e,"ob",(function(){return ht.ob})),n.d(e,"qb",(function(){return ht.qb})),n.d(e,"pb",(function(){return ht.pb})),n.d(e,"rb",(function(){return ht.rb})),n.d(e,"sb",(function(){return ht.sb})),n.d(e,"tb",(function(){return ht.tb})),n.d(e,"ub",(function(){return ht.ub})),n.d(e,"yb",(function(){return ht.xb})),n.d(e,"zb",(function(){return ht.yb})),n.d(e,"Ab",(function(){return ht.zb})),n.d(e,"Bb",(function(){return ht.Ab})),n.d(e,"Cb",(function(){return ht.Bb})),n.d(e,"Db",(function(){return ht.Cb})),n.d(e,"Eb",(function(){return ht.Eb})),n.d(e,"Fb",(function(){return ht.Fb})),n.d(e,"Gb",(function(){return ht.Gb})),n.d(e,"wb",(function(){return ht.vb})),n.d(e,"xb",(function(){return ht.wb})),n.d(e,"Hb",(function(){return ht.Hb})),n.d(e,"Nb",(function(){return ht.Nb})),n.d(e,"Ib",(function(){return ht.Ib})),n.d(e,"Lb",(function(){return ht.Lb})),n.d(e,"Jb",(function(){return ht.Jb})),n.d(e,"Kb",(function(){return ht.Kb})),n.d(e,"Mb",(function(){return ht.Mb})),n.d(e,"Ob",(function(){return ht.Ob})),n.d(e,"Pb",(function(){return ht.Pb})),n.d(e,"Qb",(function(){return ht.Qb})),n.d(e,"Rb",(function(){return ht.Rb})),n.d(e,"Sb",(function(){return ht.Sb})),n.d(e,"Tb",(function(){return ht.Tb})),n.d(e,"Ub",(function(){return ht.Ub})),n.d(e,"Vb",(function(){return ht.Vb})),n.d(e,"Zb",(function(){return ht.Zb})),n.d(e,"Wb",(function(){return ht.Wb})),n.d(e,"Xb",(function(){return ht.Xb})),n.d(e,"Yb",(function(){return ht.Yb})),n.d(e,"bc",(function(){return ht.bc})),n.d(e,"ac",(function(){return ht.ac})),n.d(e,"dc",(function(){return ht.cc})),n.d(e,"ec",(function(){return ht.dc})),n.d(e,"fc",(function(){return ht.ec})),n.d(e,"gc",(function(){return ht.fc})),n.d(e,"hc",(function(){return ht.gc})),n.d(e,"ic",(function(){return ht.hc})),n.d(e,"jc",(function(){return ht.ic})),n.d(e,"lc",(function(){return ht.kc})),n.d(e,"mc",(function(){return ht.lc})),n.d(e,"oc",(function(){return ht.nc})),n.d(e,"rc",(function(){return ht.qc})),n.d(e,"sc",(function(){return ht.rc})),n.d(e,"pc",(function(){return ht.oc})),n.d(e,"qc",(function(){return ht.pc})),n.d(e,"nc",(function(){return ht.mc})),n.d(e,"tc",(function(){return ht.sc})),n.d(e,"vc",(function(){return ht.uc})),n.d(e,"wc",(function(){return ht.vc})),n.d(e,"xc",(function(){return ht.wc})),n.d(e,"yc",(function(){return ht.xc})),n.d(e,"zc",(function(){return ht.yc})),n.d(e,"Ec",(function(){return ht.Dc})),n.d(e,"Cc",(function(){return ht.Bc})),n.d(e,"Dc",(function(){return ht.Cc})),n.d(e,"Bc",(function(){return ht.Ac})),n.d(e,"Ac",(function(){return ht.zc})),n.d(e,"Gc",(function(){return ht.Fc})),n.d(e,"Kc",(function(){return ht.Jc})),n.d(e,"Qc",(function(){return ht.Pc})),n.d(e,"Hc",(function(){return ht.Gc})),n.d(e,"Jc",(function(){return ht.Ic})),n.d(e,"Fc",(function(){return ht.Ec})),n.d(e,"Mc",(function(){return ht.Lc})),n.d(e,"Lc",(function(){return ht.Kc})),n.d(e,"Pc",(function(){return ht.Oc})),n.d(e,"Ic",(function(){return ht.Hc})),n.d(e,"Oc",(function(){return ht.Nc})),n.d(e,"Rc",(function(){return ht.Qc})),n.d(e,"Sc",(function(){return ht.Rc})),n.d(e,"Vc",(function(){return ht.Sc})),n.d(e,"Wc",(function(){return ht.Tc})),n.d(e,"Xc",(function(){return ht.Uc})),n.d(e,"Yc",(function(){return ht.Vc})),n.d(e,"Zc",(function(){return ht.Wc})),n.d(e,"ad",(function(){return ht.Xc})),n.d(e,"bd",(function(){return ht.Yc})),n.d(e,"Nc",(function(){return ht.Mc})),n.d(e,"hb",(function(){return ht.hb})),n.d(e,"uc",(function(){return ht.tc})),n.d(e,"cd",(function(){return ht.Zc})),n.d(e,"jb",(function(){return ht.jb})),n.d(e,"kb",(function(){return ht.kb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return B})),n.d(r,"listModels",(function(){return z})),n.d(r,"moveModel",(function(){return V})),n.d(r,"removeModel",(function(){return P})),n.d(r,"browserFiles",(function(){return Z})),n.d(r,"browserHTTPRequest",(function(){return ct})),n.d(r,"concatenateArrayBuffers",(function(){return p.d})),n.d(r,"decodeWeights",(function(){return p.e})),n.d(r,"encodeWeights",(function(){return p.f})),n.d(r,"fromMemory",(function(){return dt})),n.d(r,"getLoadHandlers",(function(){return g})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return p.g})),n.d(r,"getSaveHandlers",(function(){return b})),n.d(r,"http",(function(){return it})),n.d(r,"isHTTPScheme",(function(){return ot})),n.d(r,"loadWeights",(function(){return nt})),n.d(r,"registerLoadRouter",(function(){return m})),n.d(r,"registerSaveRouter",(function(){return f})),n.d(r,"weightsLoaderFactory",(function(){return rt})),n.d(r,"withSaveHandler",(function(){return pt}));var a={};n.r(a),n.d(a,"toPixels",(function(){return vt})),n.d(a,"fromPixels",(function(){return Ot}));var o={};n.r(o),n.d(o,"assertParamsValid",(function(){return xt})),n.d(o,"maskToAxes",(function(){return wt})),n.d(o,"computeOutShape",(function(){return kt})),n.d(o,"stridesWithElidedDims",(function(){return jt})),n.d(o,"getNormalizedAxes",(function(){return It})),n.d(o,"startIndicesWithElidedDims",(function(){return Tt})),n.d(o,"stopIndicesWithElidedDims",(function(){return Et})),n.d(o,"stridesForAxis",(function(){return Ct})),n.d(o,"startForAxis",(function(){return At})),n.d(o,"stopForAxis",(function(){return _t})),n.d(o,"isSliceContinous",(function(){return Rt})),n.d(o,"computeFlatOffset",(function(){return Dt})),n.d(o,"parseSliceParams",(function(){return Ft})),n.d(o,"sliceInfo",(function(){return Mt}));var s={};n.r(s),n.d(s,"Serializable",(function(){return Lt})),n.d(s,"SerializationMap",(function(){return zt})),n.d(s,"registerClass",(function(){return Pt}));var i={};n.r(i),n.d(i,"segOpComputeOptimalWindowSize",(function(){return Ze})),n.d(i,"computeOutShape",(function(){return $e})),n.d(i,"collectGatherOpShapeInfo",(function(){return tn}));var c={};n.r(c),n.d(c,"axesAreInnerMostDims",(function(){return ge.b})),n.d(c,"combineLocations",(function(){return ge.c})),n.d(c,"computeOutAndReduceShapes",(function(){return ge.d})),n.d(c,"expandShapeToKeepDim",(function(){return ge.e})),n.d(c,"assertAxesAreInnerMostDims",(function(){return ge.a})),n.d(c,"getAxesPermutation",(function(){return ge.f})),n.d(c,"getUndoAxesPermutation",(function(){return ge.h})),n.d(c,"getInnerMostAxes",(function(){return ge.g})),n.d(c,"getBroadcastDims",(function(){return ye.b})),n.d(c,"getReductionAxes",(function(){return ye.c})),n.d(c,"assertAndGetBroadcastShape",(function(){return ye.a})),n.d(c,"assertParamsConsistent",(function(){return ve})),n.d(c,"computeOutShape",(function(){return Oe})),n.d(c,"computeDilation2DInfo",(function(){return xe.d})),n.d(c,"computePool2DInfo",(function(){return xe.e})),n.d(c,"computePool3DInfo",(function(){return xe.f})),n.d(c,"computeConv2DInfo",(function(){return xe.a})),n.d(c,"computeConv3DInfo",(function(){return xe.b})),n.d(c,"computeDefaultPad",(function(){return xe.c})),n.d(c,"tupleValuesAreOne",(function(){return xe.i})),n.d(c,"eitherStridesOrDilationsAreOne",(function(){return xe.h})),n.d(c,"convertConv2DDataFormat",(function(){return xe.g})),n.d(c,"getFusedDyActivation",(function(){return we.c})),n.d(c,"getFusedBiasGradient",(function(){return we.b})),n.d(c,"applyActivation",(function(){return we.a})),n.d(c,"shouldFuse",(function(){return we.d})),n.d(c,"PARALLELIZE_THRESHOLD",(function(){return ke})),n.d(c,"computeOptimalWindowSize",(function(){return je})),n.d(c,"slice_util",(function(){return o})),n.d(c,"upcastType",(function(){return Kt.b})),n.d(c,"getImageCenter",(function(){return Ne})),n.d(c,"getReshaped",(function(){return Se})),n.d(c,"getPermuted",(function(){return Ie})),n.d(c,"getReshapedPermuted",(function(){return Te})),n.d(c,"getSliceBeginCoords",(function(){return Ee})),n.d(c,"getSliceSize",(function(){return Ce})),n.d(c,"prepareAndValidate",(function(){return Ae})),n.d(c,"validateUpdateShape",(function(){return _e.c})),n.d(c,"validateInput",(function(){return _e.b})),n.d(c,"calculateShapes",(function(){return _e.a})),n.d(c,"SELU_SCALEALPHA",(function(){return Re})),n.d(c,"SELU_SCALE",(function(){return De})),n.d(c,"ERF_P",(function(){return Fe})),n.d(c,"ERF_A1",(function(){return Me})),n.d(c,"ERF_A2",(function(){return Le})),n.d(c,"ERF_A3",(function(){return ze})),n.d(c,"ERF_A4",(function(){return Pe})),n.d(c,"ERF_A5",(function(){return Be})),n.d(c,"warn",(function(){return Ve})),n.d(c,"log",(function(){return We})),n.d(c,"mergeRealAndImagArrays",(function(){return Ue})),n.d(c,"splitRealAndImagArrays",(function(){return Ge})),n.d(c,"complexWithEvenIndex",(function(){return He})),n.d(c,"complexWithOddIndex",(function(){return qe})),n.d(c,"getComplexWithIndex",(function(){return Ke})),n.d(c,"assignToTypedArray",(function(){return Xe})),n.d(c,"exponents",(function(){return Ye})),n.d(c,"exponent",(function(){return Qe})),n.d(c,"prepareSplitSize",(function(){return Je})),n.d(c,"segment_util",(function(){return i})),n.d(c,"castTensor",(function(){return en})),n.d(c,"reshapeTensor",(function(){return nn})),n.d(c,"fromUint8ToStringArray",(function(){return rn})),n.d(c,"fromStringArrayToUint8",(function(){return an}));var u={};n.r(u),n.d(u,"nonMaxSuppressionV3Impl",(function(){return sn.a})),n.d(u,"nonMaxSuppressionV4Impl",(function(){return sn.b})),n.d(u,"nonMaxSuppressionV5Impl",(function(){return sn.c})),n.d(u,"whereImpl",(function(){return cn.a}));var l=n(9),d=(n(181),n(35)),p=n(61);class h{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==h.instance&&(h.instance=new h),h.instance}static registerSaveRouter(t){h.getInstance().saveRouters.push(t)}static registerLoadRouter(t){h.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return h.getHandlers(t,"save")}static getLoadHandlers(t,e){return h.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?h.getInstance().loadRouters:h.getInstance().saveRouters).forEach(e=>{const a=e(t,n);null!==a&&r.push(a)}),r}}const f=t=>h.registerSaveRouter(t),m=t=>h.registerLoadRouter(t),b=t=>h.getSaveHandlers(t),g=(t,e)=>h.getLoadHandlers(t,e);function y(){if(!Object(d.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function v(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class O{constructor(t){if(this.indexedDB=y(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>v(r),r.onsuccess=()=>{const a=r.result;if(null==e){const e=a.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));t(r.result.modelArtifacts)},r.onerror=t=>(a.close(),n(r.error)),e.oncomplete=()=>a.close()}else{const r=Object(p.g)(e),o=a.transaction("model_info_store","readwrite");let s=o.objectStore("model_info_store");const i=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let c;i.onsuccess=()=>{c=a.transaction("models_store","readwrite");const i=c.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});i.onsuccess=()=>t({modelArtifactsInfo:r}),i.onerror=t=>{s=o.objectStore("model_info_store");const e=s.delete(this.modelPath);e.onsuccess=()=>(a.close(),n(i.error)),e.onerror=t=>(a.close(),n(i.error))}},i.onerror=t=>(a.close(),n(i.error)),o.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}}},r.onerror=t=>n(r.error)})}}O.URL_SCHEME="indexeddb://";const x=t=>{return Object(d.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(O.URL_SCHEME)?(e=t.slice(O.URL_SCHEME.length),new O(e)):null;var e};h.registerSaveRouter(x),h.registerLoadRouter(x);class w{constructor(){this.indexedDB=y()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>v(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),o=a.objectStore("model_info_store").getAll();o.onsuccess=()=>{const e={};for(const t of o.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},o.onerror=t=>(r.close(),e(o.error)),a.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(O.URL_SCHEME)?e.slice(O.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>v(r),r.onsuccess=()=>{const a=r.result,o=a.transaction("model_info_store","readwrite"),s=o.objectStore("model_info_store"),i=s.get(t);let c;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error("Cannot find model with path '".concat(t,"' ")+"in IndexedDB."));{const r=s.delete(t),o=()=>{c=a.transaction("models_store","readwrite");const r=c.objectStore("models_store").delete(t);r.onsuccess=()=>e(i.result.modelArtifactsInfo),r.onerror=t=>n(i.error)};r.onsuccess=o,r.onerror=t=>(o(),a.close(),n(i.error))}},i.onerror=t=>(a.close(),n(i.error)),o.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}},r.onerror=t=>n(r.error)})}}var k=n(12);const j="tensorflowjs_models",N="info",S="model_topology",I="weight_specs",T="weight_data",E="model_metadata";function C(t){return{info:[j,t,N].join("/"),topology:[j,t,S].join("/"),weightSpecs:[j,t,I].join("/"),weightData:[j,t,T].join("/"),modelMetadata:[j,t,E].join("/")}}function A(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join("/")}class _{constructor(t){if(!Object(d.b)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=C(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),a=Object(p.g)(t);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(p.a)(t.weightData));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:a}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(a.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(a.weightSpecsBytes,", ")+"weightDataBytes=".concat(a.weightDataBytes,"."))}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");e.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const t=JSON.parse(a);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return e.weightData=Object(p.b)(o),e}}_.URL_SCHEME="localstorage://";const R=t=>{return Object(d.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(_.URL_SCHEME)?(e=t.slice(_.URL_SCHEME.length),new _(e)):null;var e};h.registerSaveRouter(R),h.registerLoadRouter(R);class D{constructor(){Object(k.b)(Object(d.b)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(k.b)("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=j+"/",n="/"+N;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(e)&&a.endsWith(n)){t[A(a)]=JSON.parse(this.LS.getItem(a))}}return t}async removeModel(t){var e;const n=C(t=(e=t).startsWith(_.URL_SCHEME)?e.slice(_.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(t,"'"));const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class F{constructor(){this.managers={}}static getInstance(){return null==F.instance&&(F.instance=new F),F.instance}static registerManager(t,e){Object(k.b)(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Object(k.b)(t.length>0,()=>"scheme must not be an empty string.");const n=F.getInstance();Object(k.b)(null==n.managers[t],()=>"A model store manager is already registered for scheme '".concat(t,"'.")),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function M(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(F.getSchemes().join(",")));return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function L(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];Object(k.b)(t!==e,()=>"Old path and new path are the same: '".concat(t,"'"));const r=h.getLoadHandlers(t);Object(k.b)(r.length>0,()=>"Copying failed because no load handler is found for source URL ".concat(t,".")),Object(k.b)(r.length<2,()=>"Copying failed because more than one (".concat(r.length,") ")+"load handlers for source URL ".concat(t,"."));const a=r[0],o=h.getSaveHandlers(e);Object(k.b)(o.length>0,()=>"Copying failed because no save handler is found for destination "+"URL ".concat(e,".")),Object(k.b)(o.length<2,()=>"Copying failed because more than one (".concat(r.length,") ")+"save handlers for destination URL ".concat(e,"."));const s=o[0],i=M(t).scheme,c=M(t).path,u=i===M(t).scheme,l=await a.load();n&&u&&await F.getManager(i).removeModel(c);const d=await s.save(l);return n&&!u&&await F.getManager(i).removeModel(c),d.modelArtifactsInfo}async function z(){const t=F.getSchemes(),e={};for(const n of t){const t=await F.getManager(n).listModels();for(const r in t){e[n+"://"+r]=t[r]}}return e}async function P(t){const e=M(t);return F.getManager(e.scheme).removeModel(e.path)}async function B(t,e){return L(t,e,!1)}async function V(t,e){return L(t,e,!0)}class W{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Object(d.b)().get("IS_BROWSER")){Object(d.b)().setPlatform("browser",new W);try{F.registerManager(_.URL_SCHEME,new D)}catch(ks){}try{F.registerManager(O.URL_SCHEME,new w)}catch(ks){}}n(369);var U=n(75),G=n(20),H=n(94),q=n(202),K=n(10);Object(l.b)();const X={buffer:U.a,cast:G.a,clone:H.a,print:q.a};Object(K.e)(X);function Y(t){return new Promise(t=>setTimeout(t)).then(t)}class Q{constructor(t){if(!Object(d.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Q.URL_SCHEME)&&(t=t.slice(Q.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(o.download=this.modelTopologyFileName,o.href=a,await Y(()=>o.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Y(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(p.g)(t)}}}}Q.URL_SCHEME="downloads://";class J{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(t));this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const o=JSON.parse(a.target.result),s=o.modelTopology;if(null==s)return void r(new Error("modelTopology field is missing from file ".concat(t.name)));0===e.length&&n({modelTopology:s});const i=o.weightsManifest;if(null==i)return void r(new Error("weightManifest field is missing from file ".concat(t.name)));let c;try{c=this.checkManifestAndWeightFiles(i,e)}catch(ks){return void r(ks)}const u=[],l=[],d=[];i.forEach(t=>{t.paths.forEach(t=>{l.push(t),d.push(null)}),u.push(...t.weights)}),i.forEach(t=>{t.paths.forEach(t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,a=l.indexOf(t);if(d[a]=r,-1===d.indexOf(null)){const t={modelTopology:s,weightSpecs:u,weightData:Object(p.d)(d),format:o.format,generatedBy:o.generatedBy,convertedBy:o.convertedBy};null!=o.signature&&(t.signature=o.signature),null!=o.userDefinedMetadata&&(t.userDefinedMetadata=o.userDefinedMetadata),null!=o.modelInitializer&&(t.modelInitializer=o.modelInitializer),n(t)}},e.onerror=e=>r("Failed to weights data from file of path '".concat(t,"'.")),e.readAsArrayBuffer(c[t])})})},a.onerror=e=>r("Failed to read model topology and weights manifest JSON "+"from file '".concat(t.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),a.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],r=e.map(t=>Object(p.c)(t.name)),a={};for(const o of t)o.paths.forEach(t=>{const o=Object(p.c)(t);if(-1!==n.indexOf(o))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(o,"'"));if(n.push(o),-1===r.indexOf(o))throw new Error("Weight file with basename '".concat(o,"' is not provided."));a[t]=e[r.indexOf(o)]});if(n.length!==e.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(n.length,") and the number of weight files provided ")+"(".concat(e.length,")."));return a}}function Z(t){return new J(t)}function $(t,e,n,r){!function(t){Object(k.b)(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Object(k.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(t)),Object(k.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(e)),Object(k.b)(e>=t,()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(t," and endFraction ")+"".concat(e))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(t.map(o=>(o.then(o=>{const s=n+ ++a/t.length*(r-n);return e(s),o}),o)))}h.registerSaveRouter(t=>Object(d.b)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Q.URL_SCHEME)?function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Q(t)}(t.slice(Q.URL_SCHEME.length)):null);var tt=n(188);async function et(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(d.b)().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),a=(null==e.onProgress?await Promise.all(r):await $(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(a):await $(a,e.onProgress,.5,1)}async function nt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;const a=t=>et(t,{requestInit:r}),o=rt(a);return o(t,e,n)}function rt(t){return async function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const a=e.map(()=>!1),o={},s=null!=r?r.map(()=>!1):[],i=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const c="quantization"in t?t.quantization.dtype:t.dtype,u=tt.a[c]*k.N(t.shape),l=()=>{a[e]=!0,null==o[e]&&(o[e]=[]),o[e].push({manifestEntry:t,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((e,n)=>{e===t.name&&(l(),s[n]=!0)}):l(),i.push(t.name),n+=u})}),!s.every(t=>t)){const t=r.filter((t,e)=>!s[e]);throw new Error("Could not find weights in manifest with names: "+"".concat(t.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=a.reduce((t,e,n)=>(e&&t.push(n),t),[]),u=[];c.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;u.push(e)})});const l=await t(u),d={};let h=0;return c.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[h+e].byteLength;const a=new ArrayBuffer(r),s=new Uint8Array(a);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[h+e]);s.set(t,i),i+=t.byteLength}o[t].forEach(t=>{const e=a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(p.e)(e,[t.manifestEntry]);for(const r in n)d[r]=n[r]}),h+=n}),d}}class at{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(k.b)("function"===typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(d.b)().platform.fetch,Object(k.b)(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(k.b)(2===t.length,()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(t.length,").")),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,e);if(a.ok)return{modelArtifactsInfo:Object(p.g)(t),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(t.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let e;try{e=await t.json()}catch(h){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,r=e.weightsManifest,a=e.generatedBy,o=e.convertedBy,s=e.format,i=e.signature,c=e.userDefinedMetadata;if(null==n&&null==r)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");let u,l;if(null!=r){const t=await this.loadWeights(r);[u,l]=t}const d={modelTopology:n,weightSpecs:u,weightData:l,generatedBy:a,convertedBy:o,format:s};null!=i&&(d.signature=i),null!=c&&(d.userDefinedMetadata=c);const p=e.modelInitializer;return p&&(d.modelInitializer=p),d}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),a=n>e?t.substring(n):"";return[r+"/",a]}(e),a=this.weightPathPrefix||n,o=[];for(const u of t)o.push(...u.weights);const s=[],i=[];for(const u of t)for(const t of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(t)):s.push(a+t+r);this.weightUrlConverter&&s.push(...await Promise.all(i));const c=await et(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,Object(p.d)(c)]}}function ot(t){return null!=t.match(at.URL_SCHEME_REGEX)}at.URL_SCHEME_REGEX=/^https?:\/\//;const st=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>ot(t)):ot(t),n)return it(t,e)}return null};function it(t,e){return new at(t,e)}function ct(t,e){return it(t,e)}h.registerSaveRouter(st),h.registerLoadRouter(st);class ut{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class lt{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function dt(t,e,n,r){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new ut(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ut({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ut({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function pt(t){return new lt(t)}var ht=n(4),ft=n(96),mt=n(5),bt=n(7),gt=n(215);let yt;async function vt(t,e){let n=Object(mt.a)(t,"img","toPixels");if(!(t instanceof K.a)){const t=n;n=Object(G.a)(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(n.rank,"."));const[r,a]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2];if(o>4||2===o)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(o));if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error("Unsupported type for toPixels: ".concat(n.dtype,".")+" Please use float32 or int32 tensors.");const s=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){const t=[0,0,0,255];for(let r=0;r<o;r++){const e=s[u*o+r];if("float32"===n.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===n.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===o?(t[0]=e*i,t[1]=e*i,t[2]=e*i):t[r]=e*i}const e=4*u;c[e+0]=Math.round(t[0]),c[e+1]=Math.round(t[1]),c[e+2]=Math.round(t[2]),c[e+3]=Math.round(t[3])}if(null!=e){e.width=a,e.height=r;const t=e.getContext("2d"),n=new ImageData(c,a,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),c}const Ot=Object(bt.a)({fromPixels_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,o=!1,s=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)o=!0;else if(null!=t.getContext)s=!0;else{if(!("undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(t.constructor.name));i=!0}if(a){const e=2;if(a&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}const c=Object(ft.b)(ht.hb,l.a.backendName);if(null!=c){const n={pixels:t},r={numChannels:e};return l.a.runKernel(ht.hb,n,r)}const[u,d]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let p,h;if(s?p=t.getContext("2d").getImageData(0,0,u,d).data:r||n?p=t.data:(o||a||i)&&(null==yt&&(yt=document.createElement("canvas").getContext("2d")),yt.canvas.width=u,yt.canvas.height=d,yt.drawImage(t,0,0,u,d),p=yt.getImageData(0,0,u,d).data),4===e)h=new Int32Array(p);else{const t=u*d;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=p[4*n+t]}const f=[d,u,e];return Object(gt.a)(h,f,"int32")}});function xt(t,e,n){const r=t.shape.length;k.b(r===e.length,()=>"Error in slice".concat(r,"D: Length of begin ").concat(e," must ")+"match the rank of the array (".concat(r,").")),k.b(r===n.length,()=>"Error in slice".concat(r,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(r,")."));for(let a=0;a<r;++a)k.b(e[a]+n[a]<=t.shape[a],()=>"Error in slice".concat(r,"D: begin[").concat(a,"] + size[").concat(a,"] ")+"(".concat(e[a]+n[a],") would overflow input.shape[").concat(a,"] (").concat(t.shape[a],")"))}function wt(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function kt(t,e,n){const r=[];for(let a=0;a<t.length;a++)r[a]=Math.ceil((e[a]-t[a])/n[a]);return r}function jt(t,e,n,r){const a=[...t];for(let o=a.length;o<r.length;o++)a.push(1);for(let o=0;o<n;o++)0===o?a[e]=1:(a.splice(e,0,1),a.pop());return a}function Nt(t,e,n){return n<=t?n:n-(e-1)}function St(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function It(t,e,n,r,a,o,s,i,c){const u=t.length;let l=new Array(u),d=new Array(u),p=new Array(u);if(e.length&&n>0){const c=e[0],u=n+1;l=Tt(s,c,u,r,t),d=Et(i,c,u,a,t),p=jt(o,c,u,t)}else for(let h=0;h<u;h++)l[h]=At(s,r,o,t,h,c),d[h]=_t(i,a,o,t,h,c),p[h]=Ct(o,h,c);return{begin:l,end:d,strides:p}}function Tt(t,e,n,r,a){const o=[...a],s=St(n,e);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=0;else{const a=Nt(e,n,i);let s=r[a];t&1<<a&&(s=0),o[i]=s}return o}function Et(t,e,n,r,a){const o=[...a],s=St(n,e);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const a=Nt(e,n,i);let s=r[a];t&1<<a&&(s=Number.MAX_SAFE_INTEGER),o[i]=s}for(let i=0;i<o.length;i++){const t=a[i];o[i]<0&&(o[i]+=t),o[i]=k.i(0,o[i],a[i])}return o}function Ct(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function At(t,e,n,r,a,o){let s=e[a];const i=n[a]||1;(t&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=r[a];return s<0&&(s+=c),s=k.i(0,s,c-1),s}function _t(t,e,n,r,a,o){let s=e[a];const i=n[a]||1;(t&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=r[a];return s<0&&(s+=c),s=i>0?k.i(0,s,c):k.i(-1,s,c-1),s}function Rt(t,e,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function Dt(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Ft(t,e,n){let r;const a=t.shape.length;let o;return r="number"===typeof e?[e,...new Array(a-1).fill(0)]:e.length<a?e.concat(new Array(a-e.length).fill(0)):e.slice(),r.forEach(t=>{k.b(-1!==t,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,o=o.map((e,n)=>e>=0?e:(k.b(-1===e,()=>"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(n,".")),t.shape[n]-r[n])),[r,o]}function Mt(t,e,n,r,a,o,s,i,c){let u=e.slice(),l=n.slice(),d=r;null==r&&(d=new Array(u.length));const p=wt(s);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==s&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==s&&0!==c)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=t.length-u.length,f=wt(i),m=t.slice();f.forEach(t=>{u[t]=0,l[t]=1,m.splice(t,0,1)});const{begin:b,end:g,strides:y}=It(m,p,h,u,l,d,a,o,s);u=b,l=g,d=y;const v=wt(c);v.forEach(t=>{l[t]=u[t]+1,d[t]=1});const O=kt(u,l,d),x=O.filter((t,e)=>-1===v.indexOf(e));return{nonStrided:d.every(t=>1===t),$begin:u,$end:l,$strides:d,size:O,newShape:m,outShape:x}}class Lt{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class zt{constructor(){this.classNameMap={}}static getMap(){return null==zt.instance&&(zt.instance=new zt),zt.instance}static register(t){zt.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Pt(t){Object(k.b)(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(k.b)("string"===typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(k.b)(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),zt.register(t)}var Bt=n(36),Vt=n(17);const Wt="2.8.6";var Ut=n(30),Gt=n(55),Ht=n(25);class qt extends Lt{minimize(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:a}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:a[t.name]}));this.applyGradients(t)}else this.applyGradients(a);return Object(Ut.c)(a),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Object(Gt.b)(t,e)}dispose(){null!=this.iterations_&&Object(Ut.c)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(Ht.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(qt,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});var Kt=n(127),Xt=n(27),Yt=n(23),Qt=n(24),Jt=n(14),Zt=n(59),$t=n(37),te=n(31);class ee extends qt{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=l.a.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=l.a.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(e,"/accum_grad"),variable:Object(Ut.i)(()=>Object(te.a)(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(e,"/accum_var"),variable:Object(Ut.i)(()=>Object(te.a)(r).variable(!1))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const o=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;Object(Ut.i)(()=>{const t=Object(Yt.a)(Object(Jt.a)(o,this.rho),Object(Jt.a)(Object($t.a)(a),1-this.rho)),e=Object(Jt.a)(Object(Qt.a)(Object(Zt.a)(Object(Yt.a)(s,this.epsilon)),Object(Zt.a)(Object(Yt.a)(o,this.epsilon))),a),n=Object(Yt.a)(Object(Jt.a)(s,this.rho),Object(Jt.a)(Object($t.a)(e),1-this.rho));o.assign(t),s.assign(n);const i=Object(Yt.a)(Object(Jt.a)(e,-this.learningRate),r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Ut.c)(this.accumulatedGrads.map(t=>t.variable)),Object(Ut.c)(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}ee.className="Adadelta",Pt(ee);var ne=n(152);class re extends qt{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=l.a.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:"".concat(e,"/accumulator"),variable:Object(Ut.i)(()=>Object(ne.a)(r.shape,this.initialAccumulatorValue).variable(t))}}const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const o=this.accumulatedGrads[n].variable;Object(Ut.i)(()=>{const t=Object(Yt.a)(o,Object($t.a)(a));o.assign(t);const e=Object(Yt.a)(Object(Jt.a)(Object(Qt.a)(a,Object(Zt.a)(Object(Yt.a)(t,l.a.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Ut.c)(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}re.className="Adagrad",Pt(re);var ae=n(76),oe=n(22);class se extends qt{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Ut.i)(()=>{this.accBeta1=Object(Ht.a)(e).variable(),this.accBeta2=Object(Ht.a)(n).variable()}),null==r&&(this.epsilon=l.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(Ut.i)(()=>{const n=Object(oe.a)(1,this.accBeta1),r=Object(oe.a)(1,this.accBeta2);e.forEach((e,a)=>{const o=l.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:"".concat(e,"/m"),variable:Object(Ut.i)(()=>Object(te.a)(o).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:"".concat(e,"/v"),variable:Object(Ut.i)(()=>Object(te.a)(o).variable(!1))});const s=Array.isArray(t)?t[a].tensor:t[e];if(null==s)return;const i=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,u=Object(Yt.a)(Object(Jt.a)(i,this.beta1),Object(Jt.a)(s,1-this.beta1)),d=Object(Yt.a)(Object(Jt.a)(c,this.beta2),Object(Jt.a)(Object($t.a)(s),1-this.beta2)),p=Object(Qt.a)(u,n),h=Object(Qt.a)(d,r);i.assign(u),c.assign(d);const f=Object(Yt.a)(Object(Jt.a)(Object(Qt.a)(p,Object(Yt.a)(Object(Zt.a)(h),this.epsilon)),-this.learningRate),o);o.assign(f)}),this.accBeta1.assign(Object(Jt.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(Jt.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Ut.c)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Object(Ut.c)(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Object(Ut.i)(()=>{this.accBeta1.assign(Object(ae.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(ae.a)(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}se.className="Adam",Pt(se);var ie=n(67),ce=n(110);class ue extends qt{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Ut.i)(()=>{this.iteration=Object(Ht.a)(0).variable(),this.accBeta1=Object(Ht.a)(e).variable()}),null==r&&(this.epsilon=l.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(Ut.i)(()=>{const n=Object(oe.a)(1,this.accBeta1),r=Object(Qt.a)(-this.learningRate,Object(Yt.a)(Object(Jt.a)(this.iteration,this.decay),1));e.forEach((e,a)=>{const o=l.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:"".concat(e,"/m"),variable:Object(te.a)(o).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:"".concat(e,"/v"),variable:Object(te.a)(o).variable(!1)});const s=Array.isArray(t)?t[a].tensor:t[e];if(null==s)return;const i=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,u=Object(Yt.a)(Object(Jt.a)(i,this.beta1),Object(Jt.a)(s,1-this.beta1)),d=Object(Jt.a)(c,this.beta2),p=Object(ie.a)(s),h=Object(ce.a)(d,p);i.assign(u),c.assign(h);const f=Object(Yt.a)(Object(Jt.a)(Object(Qt.a)(r,n),Object(Qt.a)(u,Object(Yt.a)(h,this.epsilon))),o);o.assign(f)}),this.iteration.assign(Object(Yt.a)(this.iteration,1)),this.accBeta1.assign(Object(Jt.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Ut.c)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Object(Ut.c)(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}ue.className="Adamax",Pt(ue);class le extends qt{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=l.a.registeredVariables[e];Object(Ut.i)(()=>{const t=Object(Yt.a)(Object(Jt.a)(this.c,r),a);a.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Object(Ut.e)(Object(Ht.a)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}le.className="SGD",Pt(le);class de extends le{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(Ht.a)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=l.a.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:"".concat(e,"/momentum"),variable:Object(Ut.i)(()=>Object(te.a)(r).variable(t))}}const a=this.accumulations[n].variable,o=Array.isArray(t)?t[n].tensor:t[e];null!=o&&Object(Ut.i)(()=>{let t;const e=Object(Yt.a)(Object(Jt.a)(this.m,a),o);t=this.useNesterov?Object(Yt.a)(Object(Jt.a)(this.c,Object(Yt.a)(o,Object(Jt.a)(e,this.m))),r):Object(Yt.a)(Object(Jt.a)(this.c,e),r),a.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Ut.c)(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}de.className="Momentum",Pt(de);class pe extends qt{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=l.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=l.a.registeredVariables[e];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(e,"/rms"),variable:Object(Ut.i)(()=>Object(te.a)(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(e,"/momentum"),variable:Object(Ut.i)(()=>Object(te.a)(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(e,"/mg"),variable:Object(Ut.i)(()=>Object(te.a)(r).variable(!1))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,s=this.accumulatedMoments[n].variable;Object(Ut.i)(()=>{const t=Object(Yt.a)(Object(Jt.a)(o,this.decay),Object(Jt.a)(Object($t.a)(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,i=Object(Yt.a)(Object(Jt.a)(e,this.decay),Object(Jt.a)(a,1-this.decay)),c=Object(Qt.a)(Object(Jt.a)(a,this.learningRate),Object(Zt.a)(Object(oe.a)(t,Object(Yt.a)(Object($t.a)(i),this.epsilon)))),u=Object(Yt.a)(Object(Jt.a)(s,this.momentum),c);o.assign(t),e.assign(i),s.assign(u);const l=Object(oe.a)(r,u);r.assign(l)}else{const t=Object(Yt.a)(Object(Jt.a)(o,this.decay),Object(Jt.a)(Object($t.a)(a),1-this.decay)),e=Object(Yt.a)(Object(Jt.a)(s,this.momentum),Object(Qt.a)(Object(Jt.a)(a,this.learningRate),Object(Zt.a)(Object(Yt.a)(t,this.epsilon))));o.assign(t),s.assign(e);const n=Object(oe.a)(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Ut.c)(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(Ut.c)(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Object(Ut.c)(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}pe.className="RMSProp",Pt(pe);class he{static sgd(t){return new le(t)}static momentum(t,e){return new de(t,e,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(t){return new pe(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new se(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new ee(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new ue(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(t){return new re(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}const fe={sgd:he.sgd,momentum:he.momentum,adadelta:he.adadelta,adagrad:he.adagrad,rmsprop:he.rmsprop,adamax:he.adamax,adam:he.adam};var me=n(252),be=n(91),ge=n(60),ye=n(26);function ve(t,e){const n=t[0].length;t.forEach((t,e)=>{k.b(t.length===n,()=>"Error in concat".concat(n,"D: rank of tensors[").concat(e,"] must be the same ")+"as the rank of the rest (".concat(n,")"))}),k.b(e>=0&&e<n,()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,"."));const r=t[0];t.forEach((t,a)=>{for(let o=0;o<n;o++)k.b(o===e||t[o]===r[o],()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(a,"] (").concat(t,") ")+"does not match the shape of the rest (".concat(r,") ")+"along the non-concatenated axis ".concat(a,"."))})}function Oe(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var xe=n(46),we=n(68);const ke=30;function je(t){return t<=ke?t:Object(k.G)(t,Math.floor(Math.sqrt(t)))}function Ne(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function Se(t,e,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function Ie(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<t;++r)r>=2*e+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Te(t,e,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(t[0]/n):a.push(t[0]*n);for(let o=1;o<t.length;++o)o<=e.length?r?a.push(e[o-1]*t[o]):a.push(t[o]/e[o-1]):a.push(t[o]);return a}function Ee(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Ce(t,e,n){const r=t.slice(0,1);for(let a=0;a<n;++a)r.push(t[a+1]-e[a][0]-e[a][1]);return r}function Ae(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(r<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(r,"."));if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.shape[r-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(e.shape[r-1]," vs. ").concat(n));if(0===Object(k.N)(t.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(t.shape,"."));const a=e.shape,o=a[a.length-1];let s=1;for(let d=0;d<a.length-1;++d)s*=a[d];const i=t.shape,c=a.slice();c.pop();let u=1;for(let d=o;d<n;++d)u*=i[d],c.push(i[d]);const l=[...Object(k.j)(t.shape).map(t=>t/u),1].slice(0,o);return[c,s,u,l]}var _e=n(148);const Re=1.7580993408473768,De=1.0507009873554805,Fe=.3275911,Me=.254829592,Le=-.284496736,ze=1.421413741,Pe=-1.453152027,Be=1.061405429;function Ve(){Object(d.b)().getBool("IS_TEST")||console.warn(...arguments)}function We(){Object(d.b)().getBool("IS_TEST")||console.log(...arguments)}function Ue(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(t.length,", imag: ").concat(e.length,"."));const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Ge(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function He(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=0;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function qe(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=2;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function Ke(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Xe(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Ye(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const o=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(o),r[a]=Math.sin(o)}return{real:n,imag:r}}function Qe(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function Je(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof e)Object(k.b)(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{const a=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Object(k.b)(a<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(-1!==o){const r=e.reduce((t,e)=>e>0?t+e:t);e[o]=t.shape[n]-r}Object(k.b)(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}function Ze(t,e){let n,r=!1;for(t<=ke?(n=t,r=!0):n=Object(k.G)(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Object(k.G)(t,n+1);return n}function $e(t,e,n){const r=[],a=t.length;for(let o=0;o<a;o++)o!==e?r.push(t[o]):r.push(n);return r}function tn(t,e,n,r){const a=e.shape.length,o=t.shape.length;if(0!==r&&(r<-a||r>a))throw new Error("Expect batchDims in the range of [-".concat(a,", ").concat(a,"], but got ").concat(r));if(r<0&&(r+=a),r>o)throw new Error("batchDims (".concat(r,") must be less than rank(x) (\n    ").concat(o,")."));if(n<r)throw new Error("batchDims (".concat(r,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<r;++d)if(t.shape[d]!==e.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(t.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(e.shape[d],"."));const s=t.shape[n],i=[];let c=1,u=1,l=1;for(let d=0;d<r;++d)i.push(t.shape[d]),c*=t.shape[d];for(let d=r;d<n;d++)i.push(t.shape[d]),u*=t.shape[d];for(let d=r;d<a;d++)i.push(e.shape[d]);for(let d=n+1;d<o;d++)i.push(t.shape[d]),l*=t.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:s,outputShape:i}}function en(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Object(be.a)(t.shape),r=Object(G.a)(t,"float32"),a=n.complex(r,e);return e.dispose(),r.dispose(),a}if(!Object(k.p)(t.dtype,e))return l.a.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),a=Object(G.a)(r,e);return r.dispose(),a}if("int32"===e)return n.int(t);if("bool"===e){const e=Object(Ht.a)(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error("Error in Cast: failed to cast ".concat(t.dtype," to ").concat(e))}function nn(t,e){return l.a.makeTensorFromDataId(t.dataId,e,t.dtype)}function rn(t){try{return t.map(t=>Object(Vt.decodeString)(t))}catch(ks){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(ks))}}function an(t){return t.map(t=>Object(Vt.encodeString)(t))}var on=n(201),sn=n(105),cn=n(216),un=n(183),ln=n(114);const dn={kernelName:ht.a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(t,Object(ln.a)(Object(G.a)(n,"float32"),-1))}}};var pn=n(49);const hn={kernelName:ht.b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object($t.a)(Object(G.a)(n,"float32")),r=Object(Zt.a)(Object(oe.a)(Object(Ht.a)(1),e));return Object(pn.a)(Object(Qt.a)(t,r))}}}},fn={kernelName:ht.c,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Zt.a)(Object(oe.a)(Object($t.a)(Object(G.a)(n,"float32")),1));return Object(Qt.a)(t,e)}}}};var mn=n(13),bn=n(28);const gn={kernelName:ht.d,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=ye.a(n.shape,r.shape);return{a:()=>{let e=t;const r=ye.c(n.shape,a);return r.length>0&&(e=Object(bn.a)(e,r)),Object(mn.a)(e,n.shape)},b:()=>{let e=t;const n=ye.c(r.shape,a);return n.length>0&&(e=Object(bn.a)(e,n)),Object(mn.a)(e,r.shape)}}}},yn={kernelName:ht.e,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}},vn={kernelName:ht.h,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(n)}}},On={kernelName:ht.i,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(n)}}},xn={kernelName:ht.j,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Qt.a)(t,Object(Zt.a)(Object(oe.a)(Object(Ht.a)(1),Object($t.a)(Object(G.a)(n,"float32")))))}}},wn={kernelName:ht.k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Zt.a)(Object(Yt.a)(Object(Ht.a)(1),Object($t.a)(Object(G.a)(n,"float32"))));return Object(Qt.a)(t,e)}}}},kn={kernelName:ht.m,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(ye.a)(n.shape,r.shape);return{a:()=>{const e=Object(Yt.a)(Object($t.a)(n),Object($t.a)(r));let o=Object(Jt.a)(t,Object(Qt.a)(r,e));const s=Object(ye.c)(n.shape,a);return s.length>0&&(o=Object(bn.a)(o,s)),Object(mn.a)(o,n.shape)},b:()=>{const e=Object(Yt.a)(Object($t.a)(n),Object($t.a)(r));let o=Object(pn.a)(Object(Jt.a)(t,Object(Qt.a)(n,e)));const s=Object(ye.c)(r.shape,a);return s.length>0&&(o=Object(bn.a)(o,s)),Object(mn.a)(o,r.shape)}}}},jn={kernelName:ht.l,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Qt.a)(t,Object(Yt.a)(Object($t.a)(Object(G.a)(n,"float32")),1))}}},Nn={kernelName:ht.n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Qt.a)(t,Object(oe.a)(Object(Ht.a)(1),Object($t.a)(Object(G.a)(n,"float32"))))}}};const Sn=Object(bt.a)({avgPool3dGrad_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1,1],o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0;const i=Object(mt.a)(t,"dy","avgPool3dGrad"),c=Object(mt.a)(e,"input","avgPool3dGrad");let u=i,d=c,p=!1;4===c.rank&&(p=!0,u=Object(mn.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=Object(mn.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),k.b(5===u.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,".")),k.b(5===d.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(d.rank,".")),k.b(xe.h(r,a),()=>"Error in avgPool3dGrad: Either strides or dilations "+"must be 1. Got strides ".concat(r," and dilations '").concat(a,"'")),null!=s&&k.b(k.v(o),()=>"Error in avgPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(s," but got pad ").concat(o,"."));const h={dy:u,input:d},f={filterSize:n,strides:r,dilations:a,pad:o,dimRoundingMode:s},m=l.a.runKernel(ht.q,h,f);return p?Object(mn.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),In={kernelName:ht.p,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:o,dilations:s,pad:i,dimRoundingMode:c}=n,u=null==s?[1,1,1]:s;return{x:()=>Sn(t,r,a,o,u,i,c)}}};const Tn=Object(bt.a)({avgPoolGrad_:function(t,e,n,r,a){const o=Object(mt.a)(t,"dy","avgPoolGrad"),s=Object(mt.a)(e,"input","avgPoolGrad");k.b(s.rank===o.rank,()=>"Rank of input (".concat(s.rank,") does not match rank of dy (").concat(o.rank,")"));let i=s,c=o,u=!1;3===s.rank&&(u=!0,i=Object(mn.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]]),c=Object(mn.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k.b(4===c.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,".")),k.b(4===i.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,"."));const d={dy:c,input:i},p={filterSize:n,strides:r,pad:a},h=l.a.runKernel(ht.r,d,p);return u?Object(mn.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),En={kernelName:ht.o,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:o,pad:s}=n;return{x:()=>Tn(t,r,a,o,s)}}};var Cn=n(48);const An={kernelName:ht.s,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,a]=e,{transposeA:o,transposeB:s}=n;return o||s?!o&&s?{a:()=>Object(Cn.a)(t,a,!1,!1),b:()=>Object(Cn.a)(t,r,!0,!1)}:o&&!s?{a:()=>Object(Cn.a)(a,t,!1,!0),b:()=>Object(Cn.a)(r,t,!1,!1)}:{a:()=>Object(Cn.a)(a,t,!0,!0),b:()=>Object(Cn.a)(t,r,!0,!0)}:{a:()=>Object(Cn.a)(t,a,!1,!0),b:()=>Object(Cn.a)(r,t,!0,!1)}}};var _n=n(133);const Rn={kernelName:ht.t,gradFunc:(t,e,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(_n.a)(t,r,a)}}},Dn={kernelName:ht.v,gradFunc:(t,e,n)=>{const r=n,a=r.inputShape,o=r.shape,s=Array.from(o);for(let c=a.length-1;c>=0;c--)if(a[c]===o[c])s[c]=1;else if(1!==a[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(o,"]."));const i=[];for(let c=0;c<s.length;c++)s[c]>1&&i.push(c);return{x:()=>Object(bn.a)(t,i,!0)}}},Fn={kernelName:ht.w,gradFunc:t=>({x:()=>t.clone()})},Mn={kernelName:ht.x,gradFunc:t=>({x:()=>Object(te.a)(t)})};var Ln=n(78),zn=n(79),Pn=n(84),Bn=n(58);const Vn={kernelName:ht.y,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:a,clipValueMax:o}=n;return{x:()=>Object(Bn.a)(Object(Pn.a)(Object(Ln.a)(r,a),Object(zn.a)(r,o)),t,Object(te.a)(t))}}},Wn={kernelName:ht.A,inputsToSave:["x"],gradFunc:dn.gradFunc};var Un=n(99);const Gn={kernelName:ht.B,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:a}=n,o=Object(k.I)(a,e[0].shape)[0],s=r.map(t=>t[o]);return Object(Un.a)(t,s,o).map(t=>()=>t)}};var Hn=n(177),qn=n(174);const Kn={kernelName:ht.C,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{dilations:o,strides:s,pad:i,dataFormat:c}=n;return k.b(xe.i(o),()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")),{x:()=>Object(qn.a)(r.shape,t,a,s,i,c),filter:()=>Object(Hn.a)(r,t,a.shape,s,i,c)}}};var Xn=n(90);const Yn={kernelName:ht.E,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{strides:o,pad:s,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>Object(Xn.a)(t,a,o,s,i,1,c),filter:()=>Object(Hn.a)(t,r,a.shape,o,s,i,c)}}};const Qn=Object(bt.a)({conv3DBackpropFilter_:function(t,e,n,r,a){let o=t;4===t.rank&&(o=Object(mn.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let s=e;4===s.rank&&(s=Object(mn.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),k.b(5===o.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(o.shape,".")),k.b(5===s.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(s.shape,".")),k.b(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,".")),k.b(o.shape[4]===n[3],()=>"Error in conv3dDerFilter: depth of input ".concat(o.shape[4],") must ")+"match input depth in filter (".concat(n[3],".")),k.b(s.shape[4]===n[4],()=>"Error in conv3dDerFilter: depth of dy (".concat(s.shape[4],") must ")+"match output depth for filter (".concat(n[4],")."));const i={x:o,dy:s},c={strides:r,pad:a,filterShape:n};return l.a.runKernel(ht.G,i,c)}});const Jn=Object(bt.a)({conv3DBackpropInput_:function(t,e,n,r,a){k.b(t.length===e.rank,()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match"));let o=t,s=e,i=!1;4===e.rank&&(i=!0,s=Object(mn.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const c=o[4],u=s.shape[4];k.b(5===o.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(o.length,".")),k.b(5===s.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(s.rank)),k.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank)),k.b(c===n.shape[3],()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],".")),k.b(u===n.shape[4],()=>"Error in conv3dDerInput: depth of output (".concat(u,") must ")+"match output depth for filter ".concat(n.shape[4],"."));const d={dy:s,filter:n},p={pad:a,strides:r,inputShape:o},h=l.a.runKernel(ht.H,d,p);return i?Object(mn.a)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Zn={kernelName:ht.F,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:o}=n;k.b(Object(xe.i)(r),()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(r,"'"));const[s,i]=e;return{x:()=>Jn(s.shape,t,i,a,o),filter:()=>Qn(s,t,i.shape,a,o)}}};var $n=n(217);const tr={kernelName:ht.I,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(Object(pn.a)(Object($n.a)(Object(G.a)(n,"float32"))),t)}}};var er=n(218);const nr={kernelName:ht.J,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(Object(er.a)(Object(G.a)(n,"float32")),t)}}};var rr=n(167),ar=n(80);const or={kernelName:ht.L,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a,exclusive:o,reverse:s}=n;return{x:()=>{const e=Object(ge.f)([a],r.rank);let n=Object(rr.a)(t,a,o,!s);return null!=e&&(n=Object(ar.a)(n,e)),n}}}};var sr=n(237),ir=n(236);const cr={kernelName:ht.O,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:o,dimRoundingMode:s}=n,i=null==r?[1,1]:r;k.b(xe.i(i),()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'"));const[c,u]=e;return k.b(4===c.rank,()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,".")),k.b(4===u.rank,()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(u.rank,".")),k.b(c.shape[3]===u.shape[2],()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(u.shape[2],".")),k.b(xe.h(a,i),()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(a," and dilations ")+"'".concat(i,"'.")),null!=s&&k.b(k.v(o),()=>"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(s," but got pad ").concat(o,".")),{x:()=>Object(ir.a)(c.shape,t,u,a,o,r,s),filter:()=>Object(sr.a)(c,t,u.shape,a,o,r,s)}}},ur={kernelName:ht.S,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,o={x:r,filter:a,dy:t},s={x:r,filter:a,dy:t};return{x:()=>l.a.runKernel(ht.U,o,n),filter:()=>l.a.runKernel(ht.T,s,n)}}},lr={kernelName:ht.V,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>l.a.runKernel(ht.W,r)}}};var dr=n(63);const pr={kernelName:ht.Y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(Jt.a)(Object(dr.a)(Object(pn.a)(Object($t.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(Jt.a)(t,r)}}},hr={kernelName:ht.Z,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(t,n)}}},fr={kernelName:ht.ab,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Object(mn.a)(t,n.shape)}}},mr={kernelName:ht.bb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(t,Object(dr.a)(n))}}},br={kernelName:ht.fb,gradFunc:t=>({x:()=>Object(te.a)(t)})},gr={kernelName:ht.gb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(ye.a)(n.shape,r.shape);return{a:()=>{const e=Object(Qt.a)(t,Object(G.a)(r,"float32")),o=Object(ye.c)(n.shape,a);return o.length>0?Object(mn.a)(Object(bn.a)(e,o),n.shape):e},b:()=>{let e=Object(Jt.a)(t,Object(G.a)(n,"float32"));const o=Object(ye.c)(r.shape,a);o.length>0&&(e=Object(mn.a)(Object(bn.a)(e,o),r.shape));const s=Object($t.a)(r);return Object(pn.a)(Object(Qt.a)(e,Object(G.a)(s,"float32")))}}}};var yr=n(219),vr=n(119);const Or={kernelName:ht.ib,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[a,o,s,i]=e,c=null==i?Object(Ht.a)(1):i,u=Object(ye.c)(o.shape,a.shape),l=[];if(1===o.rank){for(let t=0;t<a.shape.length-1;++t)l.push(a.shape[t]);l.push(1)}const d=Object(oe.a)(a,o),p=Object(Jt.a)(t,c),h=Object(yr.a)(Object(Yt.a)(s,Object(Ht.a)(r))),f=Object(Jt.a)(Object(Jt.a)(Object(Jt.a)(h,h),h),Object(Ht.a)(-.5));return{x:()=>1===o.rank?Object(mn.a)(Object(Jt.a)(Object(Jt.a)(t,Object(vr.a)(Object(mn.a)(h,[1,1,1,o.shape[0]]),l)),c),a.shape):Object(mn.a)(Object(Jt.a)(Object(Jt.a)(t,h),c),a.shape),mean:()=>{let t=Object(Jt.a)(Object(Jt.a)(h,Object(Ht.a)(-1)),p);return 1===o.rank&&(t=Object(bn.a)(t,u)),Object(mn.a)(t,o.shape)},variance:()=>{let t=Object(Jt.a)(Object(Jt.a)(f,d),p);return 1===o.rank&&(t=Object(bn.a)(t,u)),Object(mn.a)(t,o.shape)},scale:()=>{const e=Object(Jt.a)(d,h);let n=Object(Jt.a)(t,e);return 1===o.rank&&(n=Object(bn.a)(n,u)),Object(mn.a)(n,o.shape)},offset:()=>{let e=t;return 1===o.rank&&(e=Object(bn.a)(e,u)),Object(mn.a)(e,o.shape)}}}};var xr=n(168);const wr={kernelName:ht.mb,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,a]=e,{axis:o}=n,s=Object(k.I)(o,r.shape)[0];return{x:()=>{const e=r.shape,n=a.size,i=e.slice(0,s),c=i.length,u=e.slice(o,e.length).slice(1),l=u.length,d=kr(0,c),p=kr(c+1,c+1+l),h=jr([i,[n],u]),f=Object(mn.a)(t,h),m=Object(mn.a)(a,[n]),b=jr([[c],d,p]),g=Object(ar.a)(f,b);let y=Object(xr.a)(g,m,r.shape[s]);const v=Object(ge.h)(b);return y=Object(ar.a)(y,v),y},indices:()=>a}}};function kr(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function jr(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Nr={kernelName:ht.ob,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(te.a)(n),b:()=>Object(te.a)(r)}}},Sr={kernelName:ht.qb,gradFunc:t=>({x:()=>Object(G.a)(t,"float32")})},Ir={kernelName:ht.sb,gradFunc:t=>({x:()=>Object(te.a)(t)})},Tr={kernelName:ht.tb,gradFunc:t=>({x:()=>Object(te.a)(t)})},Er={kernelName:ht.ub,gradFunc:t=>({x:()=>Object(te.a)(t)})};var Cr=n(70);const Ar={kernelName:ht.xb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:a}=n,o=Object(Cr.a)(r,0);return{x:()=>Object(Bn.a)(o,t,Object(Jt.a)(t,a))}}},_r={kernelName:ht.Cb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Qt.a)(t,Object(Yt.a)(n,1))}}},Rr={kernelName:ht.Bb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Qt.a)(t,Object(G.a)(n,"float32"))}}},Dr={kernelName:ht.Db,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n;return{logits:()=>{const e=Object(dr.a)(r);return Object(oe.a)(t,Object(Jt.a)(Object(bn.a)(t,a,!0),e))}}}};const Fr=Object(bt.a)({localResponseNormalizationBackprop_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5;const i={x:t,y:e,dy:n},c={depthRadius:r,bias:a,alpha:o,beta:s};return l.a.runKernel(ht.wb,i,c)}}),Mr={kernelName:ht.vb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{depthRadius:o,bias:s,alpha:i,beta:c}=n;return{x:()=>Fr(r,a,t,o,s,i,c)}}};var Lr=n(109);function zr(t,e,n,r){return e.rank<n.rank&&(e=Object(mn.a)(e,ge.e(e.shape,r))),t.rank<n.rank&&(t=Object(mn.a)(t,ge.e(t.shape,r))),{x:()=>Object(Jt.a)(t,Object(G.a)(Object(Lr.a)(n,e),t.dtype))}}const Pr={kernelName:ht.Hb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:a}=r,o=e[0],s=zr(t,e[1],o,k.I(a,o.shape));return{x:()=>s.x()}}};var Br=n(134);const Vr={kernelName:ht.Nb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(Jt.a)(t,Object(G.a)(Object(Ln.a)(n,r),"float32")),b:()=>Object(Jt.a)(t,Object(G.a)(Object(Br.a)(n,r),"float32"))}}};const Wr=Object(bt.a)({maxPool3dGrad_:function(t,e,n,r,a){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1],s=arguments.length>6?arguments[6]:void 0,i=arguments.length>7?arguments[7]:void 0;const c=Object(mt.a)(t,"dy","maxPool3dGrad"),u=Object(mt.a)(e,"input","maxPool3dGrad"),d=Object(mt.a)(n,"output","maxPool3dGrad");let p=c,h=u,f=d,m=!1;4===u.rank&&(m=!0,p=Object(mn.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=Object(mn.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=Object(mn.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),k.b(5===p.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(p.rank,".")),k.b(5===h.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,".")),k.b(5===f.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(f.rank,".")),k.b(xe.h(a,o),()=>"Error in maxPool3dGrad: Either strides or dilations "+"must be 1. Got strides ".concat(a," and dilations '").concat(o,"'")),null!=i&&k.b(k.v(s),()=>"Error in maxPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(i," but got pad ").concat(s,"."));const b={dy:p,input:h,output:f},g={filterSize:r,strides:a,dilations:o,pad:s,dimRoundingMode:i},y=l.a.runKernel(ht.Kb,b,g);return m?Object(mn.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Ur={kernelName:ht.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:o,strides:s,dilations:i,pad:c,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>Wr(t,r,a,o,s,l,c,u)}}};const Gr=Object(bt.a)({maxPoolGrad_:function(t,e,n,r,a,o,s){const i=Object(mt.a)(t,"dy","maxPoolGrad"),c=Object(mt.a)(e,"input","maxPoolGrad"),u=Object(mt.a)(n,"output","maxPoolGrad");k.b(c.rank===i.rank,()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")")),k.b(4===i.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,".")),k.b(4===c.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,".")),null!=s&&k.b(k.v(o),()=>"Error in maxPoolGrad: pad must be an integer when using, "+"dimRoundingMode ".concat(s," but got pad ").concat(o,"."));const d={dy:i,input:c,output:u},p={filterSize:r,strides:a,pad:o,dimRoundingMode:s};return l.a.runKernel(ht.Lb,d,p)}}),Hr={kernelName:ht.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:o,strides:s,pad:i}=n;return{x:()=>Gr(t,r,a,o,s,i)}}};var qr=n(111);const Kr={kernelName:ht.Ob,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n,o=k.I(a,r.shape),s=Object(ge.d)(r.shape,o)[1],i=k.N(s);return{x:()=>{const e=r.shape.slice();o.forEach(t=>{e[t]=1});const n=Object(mn.a)(t,e);return Object(Qt.a)(Object(Jt.a)(n,Object(qr.a)(r.shape,"float32")),i)}}}},Xr={kernelName:ht.Pb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:a}=r,[o,s]=e,i=zr(t,s,o,k.I(a,o.shape));return{x:()=>i.x()}}},Yr={kernelName:ht.Qb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(Jt.a)(t,Object(G.a)(Object(zn.a)(n,r),"float32")),b:()=>Object(Jt.a)(t,Object(G.a)(Object(Cr.a)(n,r),"float32"))}}};var Qr=n(45);const Jr={kernelName:ht.Rb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,o=a.map(t=>t[0]);return{x:()=>Object(Qr.a)(t,o,r.shape)}}};var Zr=n(153);const $r={kernelName:ht.Sb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(ye.a)(n.shape,r.shape);return{a:()=>{const e=Object(ye.c)(n.shape,a);return e.length>0?Object(mn.a)(Object(bn.a)(t,e),n.shape):t},b:()=>{const e=Object(Jt.a)(t,Object(pn.a)(Object(Zr.a)(Object(Qt.a)(n,r)))),o=Object(ye.c)(r.shape,a);return o.length>0?Object(mn.a)(Object(bn.a)(e,o),r.shape):e}}}},ta={kernelName:ht.Ub,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(ye.a)(n.shape,r.shape);return{a:()=>{const e=Object(Jt.a)(t,Object(G.a)(r,"float32")),o=Object(ye.c)(n.shape,a);return o.length>0?Object(mn.a)(Object(bn.a)(e,o),n.shape):e},b:()=>{const e=Object(Jt.a)(t,Object(G.a)(n,"float32")),o=Object(ye.c)(r.shape,a);return o.length>0?Object(mn.a)(Object(bn.a)(e,o),r.shape):e}}}},ea={kernelName:ht.Vb,gradFunc:t=>({x:()=>Object(pn.a)(t)})},na={kernelName:ht.ac,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(be.a)(n.shape,"float32")}}},ra={kernelName:ht.bc,gradFunc:t=>({x:()=>Object(te.a)(t)})};var aa=n(113);const oa={kernelName:ht.cc,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return Object(aa.a)(t,r).map(t=>()=>t)}},sa={kernelName:ht.dc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,o=a.map(t=>t[0]);return{x:()=>Object(Qr.a)(t,o,r.shape)}}};var ia=n(98);const ca={kernelName:ht.ec,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,a]=e,o=n,s=r,i=ye.a(o.shape,s.shape);return{a:()=>{const e=Object(G.a)(s,"float32");let n=Object(Jt.a)(t,Object(Jt.a)(e,Object(ae.a)(o,Object(oe.a)(e,Object(Ht.a)(1)))));const r=ye.c(o.shape,i);return r.length>0&&(n=Object(bn.a)(n,r)),Object(mn.a)(n,o.shape)},b:()=>{const e=Object(Cr.a)(o,0),n=Object(Bn.a)(e,Object(ia.a)(o),Object(te.a)(o));let r=Object(Jt.a)(t,Object(Jt.a)(a,n));const c=ye.c(s.shape,i);return c.length>0&&(r=Object(bn.a)(r,c)),Object(mn.a)(r,s.shape)}}}},ua={kernelName:ht.fc,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Cr.a)(n,0);return{x:()=>Object(Bn.a)(a,t,Object(Jt.a)(t,r)),alpha:()=>{let e=Object(Bn.a)(a,Object(te.a)(t),Object(Jt.a)(t,n));const o=Object(ye.c)(r.shape,t.shape);return o.length>0&&(e=Object(bn.a)(e,o)),Object(mn.a)(e,r.shape)}}}},la={kernelName:ht.jc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=ye.a(n.shape,r.shape);return{a:()=>{const e=Object(Qt.a)(t,Object(G.a)(r,"float32")),o=ye.c(n.shape,a);return o.length>0?Object(mn.a)(Object(bn.a)(e,o),n.shape):e},b:()=>{let e=Object(Jt.a)(t,Object(G.a)(n,"float32"));const o=ye.c(r.shape,a);o.length>0&&(e=Object(mn.a)(Object(bn.a)(e,o),r.shape));const s=Object($t.a)(r);return Object(pn.a)(Object(Qt.a)(e,Object(G.a)(s,"float32")))}}}},da={kernelName:ht.kc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Qt.a)(t,Object(pn.a)(Object($t.a)(n)))}}},pa={kernelName:ht.mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(Jt.a)(Object(zn.a)(n,6),Object(ln.a)(n));return{x:()=>Object(Jt.a)(t,Object(G.a)(r,"float32"))}}},ha={kernelName:ht.lc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(t,Object(G.a)(Object(ln.a)(n),"float32"))}}},fa={kernelName:ht.nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(mn.a)(t,n.shape)}}},ma={kernelName:ht.oc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a={dy:t,images:r};return{images:()=>l.a.runKernel(ht.pc,a,n)}}},ba={kernelName:ht.qc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a={dy:t,images:r};return{images:()=>l.a.runKernel(ht.rc,a,n)}}};var ga=n(125);const ya={kernelName:ht.sc,gradFunc:(t,e,n)=>{const{dims:r}=n,a=Object(k.I)(r,t.shape);return{x:()=>Object(ga.a)(t,a)}}},va={kernelName:ht.uc,gradFunc:t=>({x:()=>Object(te.a)(t)})},Oa={kernelName:ht.vc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(pn.a)(Object(Qt.a)(t,Object(Jt.a)(Object(ae.a)(n,1.5),2)))}}};var xa=n(135);const wa={kernelName:ht.xc,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Object(G.a)(Object(te.a)(n),"float32"),t:()=>Object(Jt.a)(t,Object(G.a)(n,t.dtype)),e:()=>Object(Jt.a)(t,Object(G.a)(Object(xa.a)(n),t.dtype))}}},ka={kernelName:ht.yc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Cr.a)(n,Object(Ht.a)(0)),r=Object(Ht.a)(Re),a=Object(Ht.a)(De),o=Object(Jt.a)(t,a),s=Object(Jt.a)(Object(Jt.a)(t,r),Object(dr.a)(Object(G.a)(n,"float32")));return Object(Bn.a)(e,o,s)}}}},ja={kernelName:ht.zc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(t,Object(Jt.a)(n,Object(oe.a)(Object(Ht.a)(1),n)))}}},Na={kernelName:ht.Ac,gradFunc:t=>({x:()=>Object(te.a)(t)})};var Sa=n(169);const Ia={kernelName:ht.Bc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(Object(Sa.a)(Object(G.a)(n,"float32")),t)}}};var Ta=n(220);const Ea={kernelName:ht.Cc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(Object(Ta.a)(Object(G.a)(n,"float32")),t)}}};var Ca=n(157);const Aa={kernelName:ht.Dc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:a,size:o}=n,s=r.shape,[i,c]=Ft(r,a,o),u=[];for(let l=0;l<t.rank;l++)u.push([i[l],s[l]-i[l]-c[l]]);return{x:()=>Object(Ca.a)(t,u)}}},_a={kernelName:ht.Ec,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:a}=n,o=Object(Jt.a)(t,r);return{logits:()=>Object(oe.a)(o,Object(Jt.a)(Object(bn.a)(o,[a],!0),r))}}};var Ra=n(159);const Da={kernelName:ht.Fc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(t,Object(Ra.a)(n))}}};var Fa=n(136);const Ma={kernelName:ht.Gc,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(Fa.a)(t,r,a)}}};var La=n(52);const za={kernelName:ht.Ic,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Object(La.a)(t,r)}}},Pa={kernelName:ht.Jc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Qt.a)(t,Object(Jt.a)(Object(Zt.a)(Object(G.a)(n,"float32")),2))}}},Ba={kernelName:ht.Kc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(t,Object(Jt.a)(Object(G.a)(n,"float32"),2))}}},Va={kernelName:ht.Lc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Ht.a)(2);return{a:()=>Object(Jt.a)(t,Object(Jt.a)(a,Object(oe.a)(n,r))),b:()=>Object(Jt.a)(t,Object(Jt.a)(a,Object(oe.a)(r,n)))}}},Wa={kernelName:ht.Mc,gradFunc:t=>({x:()=>Object(te.a)(t)})},Ua={kernelName:ht.Oc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=ye.a(n.shape,r.shape);return{a:()=>{let e=t;const r=ye.c(n.shape,a);return r.length>0&&(e=Object(bn.a)(e,r)),Object(mn.a)(e,n.shape)},b:()=>{let e=t;const n=ye.c(r.shape,a);return n.length>0&&(e=Object(bn.a)(e,n)),Object(mn.a)(Object(pn.a)(e),r.shape)}}}},Ga={kernelName:ht.Pc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,a=r.shape.slice(),{axis:o}=n;Object(k.I)(o,r.shape).forEach(t=>{a[t]=1});const s=Object(mn.a)(t,a),i=Object(Jt.a)(s,Object(qr.a)(r.shape,"float32"));return{x:()=>i}}},Ha={kernelName:ht.Qc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Qt.a)(t,Object($t.a)(Object(Sa.a)(n)))}}},qa={kernelName:ht.Rc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Jt.a)(Object(oe.a)(Object(Ht.a)(1),Object($t.a)(n)),t)}}},Ka={kernelName:ht.Sc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:a}=n;return{x:()=>{let e=Object(te.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)e=Object(Yt.a)(e,Object(Qr.a)(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let o=0;o<a[1];++o)e=Object(Yt.a)(e,Object(Qr.a)(t,[n*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let o=0;o<a[1];++o)for(let s=0;s<a[2];++s)e=Object(Yt.a)(e,Object(Qr.a)(t,[n*r.shape[0],o*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(r.rank," tensors yet."));for(let n=0;n<a[0];++n)for(let o=0;o<a[1];++o)for(let s=0;s<a[2];++s)for(let i=0;i<a[3];++i)e=Object(Yt.a)(e,Object(Qr.a)(t,[n*r.shape[0],o*r.shape[1],s*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},Xa={kernelName:ht.Uc,gradFunc:(t,e,n)=>{const r=n,{perm:a}=r,o=ge.h(a);return{x:()=>Object(ar.a)(t,o)}}};var Ya=n(85);const Qa={kernelName:ht.Wc,gradFunc:(t,e,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(Ya.a)(t,a)}}};var Ja=n(86),Za=n(154);const $a=[dn,hn,fn,gn,yn,vn,On,xn,wn,kn,jn,Nn,In,En,An,Rn,Dn,Fn,Mn,Vn,Wn,Gn,Yn,Kn,Zn,tr,nr,or,cr,ur,la,lr,pr,hr,fr,mr,gr,br,Or,wr,Nr,Sr,Ir,Tr,Er,Ar,_r,Rr,Dr,Mr,Pr,Pr,Vr,Ur,Hr,Kr,Xr,Yr,Jr,$r,ta,ea,na,ra,oa,sa,sa,ca,ua,da,pa,ha,fa,ma,ba,ya,va,Oa,wa,ka,ja,Na,Ia,Ea,Aa,_a,Da,Ma,Ma,za,za,Pa,Va,Ba,Wa,Ua,Ga,Ha,qa,Ka,Xa,Qa,{kernelName:ht.Xc,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Object(ce.a)(e,Object(te.a)(e)),r=Object(Za.a)(t,n);let a=Object(Ln.a)(e,Object(Ht.a)(0,"int32"));const o=r.rank-a.rank;for(let i=0;i<o;++i)a=Object(Ja.a)(a,i+1);a=Object(Pn.a)(a,Object(qr.a)(r.shape,"bool"));const s=Object(te.a)(r);return Object(Bn.a)(a,r,s)}(t,n)}}},{kernelName:ht.Yc,gradFunc:t=>({x:()=>Object(te.a)(t)})}];for(const js of $a)Object(ft.d)(js);K.a.prototype.abs=function(){return this.throwIfDisposed(),Object(ie.a)(this)};var to=n(253);K.a.prototype.acos=function(){return this.throwIfDisposed(),Object(to.a)(this)};var eo=n(254);K.a.prototype.acosh=function(){return this.throwIfDisposed(),Object(eo.a)(this)};var no=n(255);K.a.prototype.addStrict=function(t){return this.throwIfDisposed(),Object(no.a)(this,t)},K.a.prototype.add=function(t){return this.throwIfDisposed(),Object(Yt.a)(this,t)};var ro=n(203);K.a.prototype.all=function(t,e){return this.throwIfDisposed(),Object(ro.a)(this,t,e)};var ao=n(204);K.a.prototype.any=function(t,e){return this.throwIfDisposed(),Object(ao.a)(this,t,e)};var oo=n(205);K.a.prototype.argMax=function(t){return this.throwIfDisposed(),Object(oo.a)(this,t)};var so=n(221);K.a.prototype.argMin=function(t){return this.throwIfDisposed(),Object(so.a)(this,t)},K.a.prototype.asScalar=function(){return this.throwIfDisposed(),Object(k.b)(1===this.size,()=>"The array must have only 1 element."),Object(mn.a)(this,[])},K.a.prototype.asType=function(t){return this.throwIfDisposed(),Object(G.a)(this,t)},K.a.prototype.as1D=function(){return this.throwIfDisposed(),Object(mn.a)(this,[this.size])},K.a.prototype.as2D=function(t,e){return this.throwIfDisposed(),Object(mn.a)(this,[t,e])},K.a.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Object(mn.a)(this,[t,e,n])},K.a.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Object(mn.a)(this,[t,e,n,r])},K.a.prototype.as5D=function(t,e,n,r,a){return this.throwIfDisposed(),Object(mn.a)(this,[t,e,n,r,a])};var io=n(256);K.a.prototype.asin=function(){return this.throwIfDisposed(),Object(io.a)(this)};var co=n(257);K.a.prototype.asinh=function(){return this.throwIfDisposed(),Object(co.a)(this)};var uo=n(258);K.a.prototype.atan=function(){return this.throwIfDisposed(),Object(uo.a)(this)};var lo=n(222);K.a.prototype.atan2=function(t){return this.throwIfDisposed(),Object(lo.a)(this,t)};var po=n(259);K.a.prototype.atanh=function(){return this.throwIfDisposed(),Object(po.a)(this)};var ho=n(149);K.a.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Object(ho.a)(this,t,e,n,r)},K.a.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Object(Fa.a)(this,t,e)};var fo=n(115);K.a.prototype.batchNorm=function(t,e,n,r,a){return this.throwIfDisposed(),Object(fo.a)(this,t,e,n,r,a)};var mo=n(142);K.a.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Object(mo.a)(this,t)},K.a.prototype.cast=function(t){return this.throwIfDisposed(),Object(G.a)(this,t)};var bo=n(260);K.a.prototype.ceil=function(){return this.throwIfDisposed(),Object(bo.a)(this)};var go=n(244);K.a.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Object(go.a)(this,t,e)},K.a.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof K.a&&(t=[t]),Object(La.a)([this,...t],e)};var yo=n(206);K.a.prototype.conv1d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(yo.a)(this,t,e,n,r,a,o)};var vo=n(207);K.a.prototype.conv2dTranspose=function(t,e,n,r,a){return this.throwIfDisposed(),Object(vo.a)(this,t,e,n,r,a)},K.a.prototype.conv2d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(Xn.a)(this,t,e,n,r,a,o)},K.a.prototype.cos=function(){return this.throwIfDisposed(),Object(Sa.a)(this)},K.a.prototype.cosh=function(){return this.throwIfDisposed(),Object(Ta.a)(this)},K.a.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Object(rr.a)(this,t,e,n)};var Oo=n(223);K.a.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Object(Oo.a)(this,t,e)};var xo=n(108);K.a.prototype.depthwiseConv2D=function(t,e,n,r,a,o){return Object(Ut.b)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Object(xo.a)(this,t,e,n,r,a,o)},K.a.prototype.depthwiseConv2d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(xo.a)(this,t,e,n,r,a,o)};var wo=n(224);K.a.prototype.dilation2d=function(t,e,n,r,a){return this.throwIfDisposed(),Object(wo.a)(this,t,e,n,r,a)};var ko=n(225);K.a.prototype.divNoNan=function(t){return this.throwIfDisposed(),Object(ko.a)(this,t)},K.a.prototype.divStrict=function(t){return this.throwIfDisposed(),Object(no.b)(this,t)},K.a.prototype.div=function(t){return this.throwIfDisposed(),Object(Qt.a)(this,t)};var jo=n(226);K.a.prototype.dot=function(t){return this.throwIfDisposed(),Object(jo.a)(this,t)};var No=n(151);K.a.prototype.elu=function(){return this.throwIfDisposed(),Object(No.a)(this)};var So=n(261);K.a.prototype.equalStrict=function(t){return this.throwIfDisposed(),Object(So.a)(this,t)},K.a.prototype.equal=function(t){return this.throwIfDisposed(),Object(Lr.a)(this,t)};var Io=n(262);K.a.prototype.erf=function(){return this.throwIfDisposed(),Object(Io.a)(this)},K.a.prototype.exp=function(){return this.throwIfDisposed(),Object(dr.a)(this)},K.a.prototype.expandDims=function(t){return this.throwIfDisposed(),Object(Ja.a)(this,t)};var To=n(263);K.a.prototype.expm1=function(){return this.throwIfDisposed(),Object(To.a)(this)};var Eo=n(161);K.a.prototype.fft=function(){return this.throwIfDisposed(),Object(Eo.a)(this)},K.a.prototype.flatten=function(){return this.throwIfDisposed(),Object(mn.a)(this,[this.size])},K.a.prototype.floor=function(){return this.throwIfDisposed(),Object(Zr.a)(this)};var Co=n(150);K.a.prototype.floorDiv=function(t){return this.throwIfDisposed(),Object(Co.a)(this,t)},K.a.prototype.gather=function(t,e){return this.throwIfDisposed(),Object(Za.a)(this,t,e)},K.a.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Object(So.b)(this,t)},K.a.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Object(Ln.a)(this,t)},K.a.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Object(So.c)(this,t)},K.a.prototype.greater=function(t){return this.throwIfDisposed(),Object(Cr.a)(this,t)};var Ao=n(143);K.a.prototype.ifft=function(){return this.throwIfDisposed(),Object(Ao.a)(this)};var _o=n(213);K.a.prototype.irfft=function(){return this.throwIfDisposed(),Object(_o.a)(this)};var Ro=n(264);K.a.prototype.isFinite=function(){return this.throwIfDisposed(),Object(Ro.a)(this)};var Do=n(265);K.a.prototype.isInf=function(){return this.throwIfDisposed(),Object(Do.a)(this)};var Fo=n(266);K.a.prototype.isNaN=function(){return this.throwIfDisposed(),Object(Fo.a)(this)};var Mo=n(155);K.a.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Object(Mo.a)(this,t)},K.a.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Object(So.d)(this,t)},K.a.prototype.lessEqual=function(t){return this.throwIfDisposed(),Object(zn.a)(this,t)},K.a.prototype.lessStrict=function(t){return this.throwIfDisposed(),Object(So.e)(this,t)},K.a.prototype.less=function(t){return this.throwIfDisposed(),Object(Br.a)(this,t)};var Lo=n(227);K.a.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Object(Lo.a)(this,t,e,n,r)};var zo=n(267);K.a.prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(zo.a)(this)};var Po=n(246);K.a.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Object(Po.a)(this,t)};var Bo=n(165);K.a.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Object(Bo.a)(this,t,e)},K.a.prototype.log=function(){return this.throwIfDisposed(),Object(ia.a)(this)};var Vo=n(214);K.a.prototype.log1p=function(){return this.throwIfDisposed(),Object(Vo.a)(this)},K.a.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Object(Pn.a)(this,t)},K.a.prototype.logicalNot=function(){return this.throwIfDisposed(),Object(xa.a)(this)};var Wo=n(171);K.a.prototype.logicalOr=function(t){return this.throwIfDisposed(),Object(Wo.a)(this,t)};var Uo=n(228);K.a.prototype.logicalXor=function(t){return this.throwIfDisposed(),Object(Uo.a)(this,t)},K.a.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Object(Cn.a)(this,t,e,n)};var Go=n(156);K.a.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Object(Go.a)(this,t,e,n,r)};var Ho=n(95);K.a.prototype.max=function(t,e){return this.throwIfDisposed(),Object(Ho.a)(this,t,e)},K.a.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Object(no.c)(this,t)},K.a.prototype.maximum=function(t){return this.throwIfDisposed(),Object(ce.a)(this,t)};var qo=n(124);K.a.prototype.mean=function(t,e){return this.throwIfDisposed(),Object(qo.a)(this,t,e)};var Ko=n(141);K.a.prototype.min=function(t,e){return this.throwIfDisposed(),Object(Ko.a)(this,t,e)},K.a.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Object(no.d)(this,t)};var Xo=n(130);K.a.prototype.minimum=function(t){return this.throwIfDisposed(),Object(Xo.a)(this,t)};var Yo=n(229);K.a.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Object(Yo.a)(this,t,e)},K.a.prototype.modStrict=function(t){return this.throwIfDisposed(),Object(no.e)(this,t)};var Qo=n(170);K.a.prototype.mod=function(t){return this.throwIfDisposed(),Object(Qo.a)(this,t)},K.a.prototype.mulStrict=function(t){return this.throwIfDisposed(),Object(no.f)(this,t)},K.a.prototype.mul=function(t){return this.throwIfDisposed(),Object(Jt.a)(this,t)},K.a.prototype.neg=function(){return this.throwIfDisposed(),Object(pn.a)(this)};var Jo=n(164);K.a.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Object(Jo.a)(this,t,e,n)},K.a.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Object(So.f)(this,t)};var Zo=n(131);K.a.prototype.notEqual=function(t){return this.throwIfDisposed(),Object(Zo.a)(this,t)};var $o=n(208);K.a.prototype.oneHot=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Object($o.a)(this,t,e,n)};var ts=n(248);K.a.prototype.onesLike=function(){return this.throwIfDisposed(),Object(ts.a)(this)},K.a.prototype.pad=function(t,e){return this.throwIfDisposed(),Object(Ca.a)(this,t,e)};var es=n(230);K.a.prototype.pool=function(t,e,n,r,a){return this.throwIfDisposed(),Object(es.a)(this,t,e,n,r,a)},K.a.prototype.powStrict=function(t){return this.throwIfDisposed(),Object(no.g)(this,t)},K.a.prototype.pow=function(t){return this.throwIfDisposed(),Object(ae.a)(this,t)};var ns=n(158);K.a.prototype.prelu=function(t){return this.throwIfDisposed(),Object(ns.a)(this,t)};var rs=n(231);K.a.prototype.prod=function(t,e){return this.throwIfDisposed(),Object(rs.a)(this,t,e)};var as=n(268);K.a.prototype.reciprocal=function(){return this.throwIfDisposed(),Object(as.a)(this)};var os=n(112);K.a.prototype.relu=function(){return this.throwIfDisposed(),Object(os.a)(this)};var ss=n(166);K.a.prototype.relu6=function(){return this.throwIfDisposed(),Object(ss.a)(this)},K.a.prototype.reshapeAs=function(t){return this.throwIfDisposed(),Object(mn.a)(this,t.shape)},K.a.prototype.reshape=function(t){return this.throwIfDisposed(),Object(mn.a)(this,t)};var is=n(235);K.a.prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Object(is.a)(this,t,e,n)};var cs=n(234);K.a.prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Object(cs.a)(this,t,e,n)},K.a.prototype.reverse=function(t){return this.throwIfDisposed(),Object(ga.a)(this,t)};var us=n(162);K.a.prototype.rfft=function(){return this.throwIfDisposed(),Object(us.a)(this)};var ls=n(269);K.a.prototype.round=function(){return this.throwIfDisposed(),Object(ls.a)(this)},K.a.prototype.rsqrt=function(){return this.throwIfDisposed(),Object(yr.a)(this)};var ds=n(210);K.a.prototype.selu=function(){return this.throwIfDisposed(),Object(ds.a)(this)};var ps=n(211);K.a.prototype.separableConv2d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(ps.a)(this,t,e,n,r,a,o)},K.a.prototype.sigmoid=function(){return this.throwIfDisposed(),Object(Ra.a)(this)};var hs=n(270);K.a.prototype.sign=function(){return this.throwIfDisposed(),Object(hs.a)(this)},K.a.prototype.sin=function(){return this.throwIfDisposed(),Object($n.a)(this)},K.a.prototype.sinh=function(){return this.throwIfDisposed(),Object(er.a)(this)},K.a.prototype.slice=function(t,e){return this.throwIfDisposed(),Object(Qr.a)(this,t,e)};var fs=n(249);K.a.prototype.softmax=function(t){return this.throwIfDisposed(),Object(fs.a)(this,t)};var ms=n(212);K.a.prototype.softplus=function(){return this.throwIfDisposed(),Object(ms.a)(this)},K.a.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Object(_n.a)(this,t,e)},K.a.prototype.split=function(t,e){return this.throwIfDisposed(),Object(Un.a)(this,t,e)},K.a.prototype.sqrt=function(){return this.throwIfDisposed(),Object(Zt.a)(this)},K.a.prototype.square=function(){return this.throwIfDisposed(),Object($t.a)(this)};var bs=n(132);K.a.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Object(bs.a)(this,t)},K.a.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Object(no.h)(this,t)};var gs=n(160);K.a.prototype.squeeze=function(t){return this.throwIfDisposed(),Object(gs.a)(this,t)},K.a.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof K.a?[this,t]:[this,...t];return Object(Ya.a)(n,e)},K.a.prototype.step=function(t){return this.throwIfDisposed(),Object(ln.a)(this,t)};var ys=n(271);K.a.prototype.stridedSlice=function(t,e,n,r,a,o,s,i){return this.throwIfDisposed(),Object(ys.a)(this,t,e,n,r,a,o,s,i)},K.a.prototype.subStrict=function(t){return this.throwIfDisposed(),Object(no.i)(this,t)},K.a.prototype.sub=function(t){return this.throwIfDisposed(),Object(oe.a)(this,t)},K.a.prototype.sum=function(t,e){return this.throwIfDisposed(),Object(bn.a)(this,t,e)};var vs=n(272);K.a.prototype.tan=function(){return this.throwIfDisposed(),Object(vs.a)(this)};var Os=n(250);K.a.prototype.tanh=function(){return this.throwIfDisposed(),Object(Os.a)(this)},K.a.prototype.tile=function(t){return this.throwIfDisposed(),Object(vr.a)(this,t)},K.a.prototype.toBool=function(){return this.throwIfDisposed(),Object(G.a)(this,"bool")},K.a.prototype.toFloat=function(){return this.throwIfDisposed(),Object(G.a)(this,"float32")},K.a.prototype.toInt=function(){return this.throwIfDisposed(),Object(G.a)(this,"int32")};var xs=n(232);K.a.prototype.topk=function(t,e){return this.throwIfDisposed(),Object(xs.a)(this,t,e)},K.a.prototype.transpose=function(t){return this.throwIfDisposed(),Object(ar.a)(this,t)};var ws=n(233);K.a.prototype.unique=function(t){return this.throwIfDisposed(),Object(ws.a)(this,t)},K.a.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Object(xr.a)(this,t,e)},K.a.prototype.unstack=function(t){return this.throwIfDisposed(),Object(aa.a)(this,t)},K.a.prototype.where=function(t,e){return this.throwIfDisposed(),Object(Bn.a)(t,this,e)},K.a.prototype.zerosLike=function(){return this.throwIfDisposed(),Object(te.a)(this)}},function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return o})),n.d(e,"f",(function(){return s})),n.d(e,"b",(function(){return i})),n.d(e,"g",(function(){return u})),n.d(e,"c",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n(18);function a(t,e,n,a,s){const i=e.inputParams[t];if(i&&void 0!==i.inputIndexStart){const t=i.inputIndexStart,c=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?t+1:i.inputIndexEnd;if("tensor"===i.type)return o(e.inputNames[i.inputIndexStart],n,a,s);if("tensors"===i.type){return e.inputNames.slice(t,c).map(t=>o(t,n,a,s))}const u=o(e.inputNames.slice(t)[0],n,a,s),l=u.dataSync();return"number"===i.type?l[0]:r.util.toNestedArray(u.shape,l)}const c=e.attrParams[t];return c&&c.value}function o(t,e,n,r){const[a,o]=u(t);if(null!=r){const t=r.getHashTableHandleByName(a);if(null!=t)return t}const s=n.currentContextIds.find(t=>!!e[c(a,t)]);return void 0!==s?e[c(a,s)][o]:void 0}function s(t,e,n){return e[c(t,n.currentContextId)]}function i(t,e){const[n,r,a]=u(t);return[c(n,e&&e.currentContextId),r,a]}function c(t,e){return e?"".concat(t,"-").concat(e):t}function u(t){const e=t.split(":");if(1===e.length)return[t,0,void 0];const n=e[0],r=3===e.length?e[1]:void 0;return[n,Number(e[e.length-1]),r]}function l(t,e,n){let r=a("pad",t,e,n);if("explicit"===r){r=a("explicitPaddings",t,e,n);const o=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)o[t][0]=r[2*t],o[t][1]=r[2*t+1];return o}return r}function d(t){return t.kept?t:Object(r.clone)(t)}},function(t,e,n){"use strict";n.d(e,"c",(function(){return c})),n.d(e,"a",(function(){return l})),n.d(e,"b",(function(){return d}));var r=n(8),a=n(32),o=n(42),s=n(21),i=n(16);function c(t,e){let n=t;if(Object(s.A)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Object(s.A)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],!Array.isArray(e)&&!Object(s.A)(e))return void Object(s.b)(0===n.length,()=>"Element arr[".concat(r.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(n[0]," elements"));Object(s.b)(n.length>0,()=>"Element arr[".concat(r.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements")),Object(s.b)(e.length===n[0],()=>"Element arr[".concat(r.join("]["),"] should have ").concat(n[0]," ")+"elements, but has ".concat(e.length," elements"));const a=n.slice(1);for(let o=0;o<e.length;++o)t(e[o],a,r.concat(o))}(t,r,[]),r}function u(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(n,"' passed to '").concat(r,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function l(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(t instanceof o.a)return u(a,t.dtype,e,n),t;let l=Object(s.r)(t);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),u(a,l,e,n),null==t||!Object(s.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const r=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(r,"'"))}const d=c(t,l);Object(s.A)(t)||Array.isArray(t)||(t=[t]);const p=!0,h="string"!==l?Object(i.toTypedArray)(t,l):Object(s.m)(t,[],p);return r.a.makeTensor(h,d,l)}function d(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");const a=t;return a.map((t,a)=>l(t,"".concat(e,"[").concat(a,"]"),n,r))}},function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return o})),n.d(e,"f",(function(){return s})),n.d(e,"b",(function(){return i})),n.d(e,"g",(function(){return u})),n.d(e,"c",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n(0);function a(t,e,n,a,s){const i=e.inputParams[t];if(i&&void 0!==i.inputIndexStart){const t=i.inputIndexStart,c=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?t+1:i.inputIndexEnd;if("tensor"===i.type)return o(e.inputNames[i.inputIndexStart],n,a,s);if("tensors"===i.type){return e.inputNames.slice(t,c).map(t=>o(t,n,a,s))}const u=o(e.inputNames.slice(t)[0],n,a,s),l=u.dataSync();return"number"===i.type?l[0]:r.kf.toNestedArray(u.shape,l)}const c=e.attrParams[t];return c&&c.value}function o(t,e,n,r){const[a,o]=u(t);if(null!=r){const t=r.getHashTableHandleByName(a);if(null!=t)return t}const s=n.currentContextIds.find(t=>!!e[c(a,t)]);return void 0!==s?e[c(a,s)][o]:void 0}function s(t,e,n){return e[c(t,n.currentContextId)]}function i(t,e){const[n,r]=u(t);return[c(n,e&&e.currentContextId),r]}function c(t,e){return e?"".concat(t,"-").concat(e):t}function u(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function l(t,e,n){let r=a("pad",t,e,n);if("explicit"===r){r=a("explicitPaddings",t,e,n);const o=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)o[t][0]=r[2*t],o[t][1]=r[2*t+1];return o}return r}function d(t){return t.kept?t:Object(r.td)(t)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return o})),n.d(e,"d",(function(){return s})),n.d(e,"e",(function(){return i})),n.d(e,"f",(function(){return c})),n.d(e,"g",(function(){return u})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return d})),n.d(e,"j",(function(){return p})),n.d(e,"k",(function(){return h})),n.d(e,"l",(function(){return f})),n.d(e,"n",(function(){return m})),n.d(e,"m",(function(){return b})),n.d(e,"o",(function(){return g})),n.d(e,"r",(function(){return y})),n.d(e,"p",(function(){return v})),n.d(e,"q",(function(){return O})),n.d(e,"s",(function(){return x})),n.d(e,"t",(function(){return w})),n.d(e,"u",(function(){return k})),n.d(e,"v",(function(){return j})),n.d(e,"w",(function(){return N})),n.d(e,"x",(function(){return S})),n.d(e,"y",(function(){return I})),n.d(e,"z",(function(){return T})),n.d(e,"A",(function(){return E})),n.d(e,"B",(function(){return C})),n.d(e,"C",(function(){return A})),n.d(e,"D",(function(){return _})),n.d(e,"E",(function(){return R})),n.d(e,"F",(function(){return D})),n.d(e,"G",(function(){return F})),n.d(e,"H",(function(){return M})),n.d(e,"I",(function(){return L})),n.d(e,"J",(function(){return z})),n.d(e,"L",(function(){return P})),n.d(e,"K",(function(){return B})),n.d(e,"M",(function(){return V})),n.d(e,"N",(function(){return W})),n.d(e,"O",(function(){return U})),n.d(e,"P",(function(){return G})),n.d(e,"Q",(function(){return H})),n.d(e,"R",(function(){return q})),n.d(e,"S",(function(){return K})),n.d(e,"U",(function(){return X})),n.d(e,"T",(function(){return Y})),n.d(e,"jc",(function(){return Q})),n.d(e,"V",(function(){return J})),n.d(e,"W",(function(){return Z})),n.d(e,"Y",(function(){return $})),n.d(e,"X",(function(){return tt})),n.d(e,"Z",(function(){return et})),n.d(e,"ab",(function(){return nt})),n.d(e,"bb",(function(){return rt})),n.d(e,"cb",(function(){return at})),n.d(e,"db",(function(){return ot})),n.d(e,"eb",(function(){return st})),n.d(e,"fb",(function(){return it})),n.d(e,"gb",(function(){return ct})),n.d(e,"ib",(function(){return ut})),n.d(e,"mb",(function(){return lt})),n.d(e,"lb",(function(){return dt})),n.d(e,"nb",(function(){return pt})),n.d(e,"ob",(function(){return ht})),n.d(e,"qb",(function(){return ft})),n.d(e,"pb",(function(){return mt})),n.d(e,"rb",(function(){return bt})),n.d(e,"sb",(function(){return gt})),n.d(e,"tb",(function(){return yt})),n.d(e,"ub",(function(){return vt})),n.d(e,"xb",(function(){return Ot})),n.d(e,"yb",(function(){return xt})),n.d(e,"zb",(function(){return wt})),n.d(e,"Ab",(function(){return kt})),n.d(e,"Bb",(function(){return jt})),n.d(e,"Cb",(function(){return Nt})),n.d(e,"Eb",(function(){return St})),n.d(e,"Fb",(function(){return It})),n.d(e,"Gb",(function(){return Tt})),n.d(e,"Db",(function(){return Et})),n.d(e,"vb",(function(){return Ct})),n.d(e,"wb",(function(){return At})),n.d(e,"Hb",(function(){return _t})),n.d(e,"Nb",(function(){return Rt})),n.d(e,"Ib",(function(){return Dt})),n.d(e,"Lb",(function(){return Ft})),n.d(e,"Jb",(function(){return Mt})),n.d(e,"Kb",(function(){return Lt})),n.d(e,"Mb",(function(){return zt})),n.d(e,"Ob",(function(){return Pt})),n.d(e,"Pb",(function(){return Bt})),n.d(e,"Qb",(function(){return Vt})),n.d(e,"Rb",(function(){return Wt})),n.d(e,"Sb",(function(){return Ut})),n.d(e,"Tb",(function(){return Gt})),n.d(e,"Ub",(function(){return Ht})),n.d(e,"Vb",(function(){return qt})),n.d(e,"Zb",(function(){return Kt})),n.d(e,"Wb",(function(){return Xt})),n.d(e,"Xb",(function(){return Yt})),n.d(e,"Yb",(function(){return Qt})),n.d(e,"bc",(function(){return Jt})),n.d(e,"ac",(function(){return Zt})),n.d(e,"cc",(function(){return $t})),n.d(e,"dc",(function(){return te})),n.d(e,"ec",(function(){return ee})),n.d(e,"fc",(function(){return ne})),n.d(e,"gc",(function(){return re})),n.d(e,"hc",(function(){return ae})),n.d(e,"ic",(function(){return oe})),n.d(e,"kc",(function(){return se})),n.d(e,"lc",(function(){return ie})),n.d(e,"nc",(function(){return ce})),n.d(e,"qc",(function(){return ue})),n.d(e,"rc",(function(){return le})),n.d(e,"oc",(function(){return de})),n.d(e,"pc",(function(){return pe})),n.d(e,"mc",(function(){return he})),n.d(e,"sc",(function(){return fe})),n.d(e,"uc",(function(){return me})),n.d(e,"vc",(function(){return be})),n.d(e,"wc",(function(){return ge})),n.d(e,"xc",(function(){return ye})),n.d(e,"yc",(function(){return ve})),n.d(e,"Dc",(function(){return Oe})),n.d(e,"Bc",(function(){return xe})),n.d(e,"Cc",(function(){return we})),n.d(e,"Ac",(function(){return ke})),n.d(e,"zc",(function(){return je})),n.d(e,"Fc",(function(){return Ne})),n.d(e,"Jc",(function(){return Se})),n.d(e,"Pc",(function(){return Ie})),n.d(e,"Gc",(function(){return Te})),n.d(e,"Ic",(function(){return Ee})),n.d(e,"Ec",(function(){return Ce})),n.d(e,"Lc",(function(){return Ae})),n.d(e,"Kc",(function(){return _e})),n.d(e,"Oc",(function(){return Re})),n.d(e,"Hc",(function(){return De})),n.d(e,"Nc",(function(){return Fe})),n.d(e,"Qc",(function(){return Me})),n.d(e,"Rc",(function(){return Le})),n.d(e,"Sc",(function(){return ze})),n.d(e,"Tc",(function(){return Pe})),n.d(e,"Uc",(function(){return Be})),n.d(e,"Vc",(function(){return Ve})),n.d(e,"Wc",(function(){return We})),n.d(e,"Xc",(function(){return Ue})),n.d(e,"Yc",(function(){return Ge})),n.d(e,"Mc",(function(){return He})),n.d(e,"hb",(function(){return qe})),n.d(e,"tc",(function(){return Ke})),n.d(e,"Zc",(function(){return Xe})),n.d(e,"jb",(function(){return Ye})),n.d(e,"kb",(function(){return Qe}));const r="Abs",a="Acos",o="Acosh",s="Add",i="AddN",c="All",u="Any",l="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",v="AvgPool3D",O="AvgPool3DGrad",x="BatchMatMul",w="BatchToSpaceND",k="Bincount",j="BroadcastTo",N="Cast",S="Ceil",I="ClipByValue",T="Complex",E="ComplexAbs",C="Concat",A="Conv2D",_="Conv2DBackpropFilter",R="Conv2DBackpropInput",D="Conv3D",F="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",L="Cos",z="Cosh",P="Cumsum",B="CropAndResize",V="DenseBincount",W="DepthToSpace",U="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",q="Diag",K="Dilation2D",X="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",Q="RealDiv",J="Elu",Z="EluGrad",$="Erf",tt="Equal",et="Exp",nt="ExpandDims",rt="Expm1",at="FFT",ot="Fill",st="FlipLeftRight",it="Floor",ct="FloorDiv",ut="FusedBatchNorm",lt="GatherV2",dt="GatherNd",pt="Greater",ht="GreaterEqual",ft="Identity",mt="IFFT",bt="Imag",gt="IsFinite",yt="IsInf",vt="IsNan",Ot="LeakyRelu",xt="Less",wt="LessEqual",kt="LinSpace",jt="Log",Nt="Log1p",St="LogicalAnd",It="LogicalNot",Tt="LogicalOr",Et="LogSoftmax",Ct="LRN",At="LRNGrad",_t="Max",Rt="Maximum",Dt="MaxPool",Ft="MaxPoolGrad",Mt="MaxPool3D",Lt="MaxPool3DGrad",zt="MaxPoolWithArgmax",Pt="Mean",Bt="Min",Vt="Minimum",Wt="MirrorPad",Ut="Mod",Gt="Multinomial",Ht="Multiply",qt="Neg",Kt="NotEqual",Xt="NonMaxSuppressionV3",Yt="NonMaxSuppressionV4",Qt="NonMaxSuppressionV5",Jt="OnesLike",Zt="OneHot",$t="Pack",te="PadV2",ee="Pow",ne="Prelu",re="Prod",ae="Range",oe="Real",se="Reciprocal",ie="Relu",ce="Reshape",ue="ResizeNearestNeighbor",le="ResizeNearestNeighborGrad",de="ResizeBilinear",pe="ResizeBilinearGrad",he="Relu6",fe="Reverse",me="Round",be="Rsqrt",ge="ScatterNd",ye="Select",ve="Selu",Oe="Slice",xe="Sin",we="Sinh",ke="Sign",je="Sigmoid",Ne="Softplus",Se="Sqrt",Ie="Sum",Te="SpaceToBatchND",Ee="SplitV",Ce="Softmax",Ae="SquaredDifference",_e="Square",Re="Sub",De="SparseToDense",Fe="StridedSlice",Me="Tan",Le="Tanh",ze="Tile",Pe="TopK",Be="Transpose",Ve="Unique",We="Unpack",Ue="UnsortedSegmentSum",Ge="ZerosLike",He="Step",qe="FromPixels",Ke="RotateWithOffset",Xe="_FusedMatMul",Ye="FusedConv2D",Qe="FusedDepthwiseConv2D"},function(t,e,n){"use strict";n.d(e,"c",(function(){return c})),n.d(e,"a",(function(){return l})),n.d(e,"b",(function(){return d}));var r=n(9),a=n(35),o=n(10),s=n(12),i=n(17);function c(t,e){let n=t;if(Object(s.A)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Object(s.A)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(a.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],!Array.isArray(e)&&!Object(s.A)(e))return void Object(s.b)(0===n.length,()=>"Element arr[".concat(r.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(n[0]," elements"));Object(s.b)(n.length>0,()=>"Element arr[".concat(r.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements")),Object(s.b)(e.length===n[0],()=>"Element arr[".concat(r.join("]["),"] should have ").concat(n[0]," ")+"elements, but has ".concat(e.length," elements"));const a=n.slice(1);for(let o=0;o<e.length;++o)t(e[o],a,r.concat(o))}(t,r,[]),r}function u(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(n,"' passed to '").concat(r,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function l(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(t instanceof o.a)return u(a,t.dtype,e,n),t;let l=Object(s.r)(t);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),u(a,l,e,n),null==t||!Object(s.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const r=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(r,"'"))}const d=c(t,l);Object(s.A)(t)||Array.isArray(t)||(t=[t]);const p=!0,h="string"!==l?Object(i.toTypedArray)(t,l):Object(s.m)(t,[],p);return r.a.makeTensor(h,d,l)}function d(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");const a=t;return a.map((t,a)=>l(t,"".concat(e,"[").concat(a,"]"),n,r))}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return s}));var r=n(8),a=n(21);const o="__op";function s(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=o;const i=function(){r.a.startScope(n);try{const t=s(...arguments);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(t){throw r.a.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(9),a=n(12);function o(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));let n=e[0];const o=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=function(){r.a.startScope(n);try{const t=o(...arguments);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(t){throw r.a.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}},function(t,e,n){"use strict";n.d(e,"b",(function(){return v})),n.d(e,"a",(function(){return O}));var r=n(182),a=n(32),o=n(145),s=n(11),i=n(102),c=n(101),u=n(16),l=n(21);class d{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new h)}profileKernel(t,e,n){let r;const o=()=>{r=n()};let s;const i=u.now();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(o);else{o();for(const t of r)t.dataSync();s=Promise.resolve({kernelMs:u.now()-i})}if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const e=r[a];e.data().then(n=>{p(n,e.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then(t=>t.kernelMs),extraInfo:s.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:a,extraInfo:o}=t;n.forEach(t=>{Promise.all([t.data(),r,o]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],a,n[2])})})}}function p(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn("Found ".concat(e," in the result of '").concat(n,"'")),!0}return!1}class h{logKernelProfile(t,e,n,r,a,o){const s="number"===typeof r?l.L("".concat(r,"ms"),9):r.error,i=l.L(t,25),c=e.rank,u=e.size,d=l.L(e.shape.toString(),14);let p="";for(const l in a){const t=a[l];if(null!=t){const n=t.shape||e.shape,r=n.length;p+="".concat(l,": ").concat(r,"D ").concat(r>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(s,"\t%c").concat(c,"D ").concat(d,"\t%c").concat(u,"\t%c").concat(p,"\t%c").concat(o),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(42),m=n(34);function b(t){return null!=t.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class y{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error("The highest priority backend '".concat(t,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t in this.registryFactory?(c.b("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error("Backend name '".concat(t,"' not found in registry"));if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){Object(i.d)(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Object(i.d)(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{const n=e.factory();if(!n||n instanceof r.b||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,c.b("Initialization of backend ".concat(t," failed")),c.b(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return c.b("Initialization of backend ".concat(t," failed")),c.b(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,a=this.readSync(e),o=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,a,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(t){const e=O.runKernel(s.tb,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>{const e={x:t},n={dtype:"float32"};return O.runKernel(s.x,e,n)}}),[],{}),e}runKernel(t,e,n){null==this.backendName&&this.backend;if(!(null!=Object(i.c)(t,this.backendName)))throw new Error("Kernel '".concat(t,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let a=0;n.forEach(t=>{a+="complex64"===t.dtype?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-e-a-o;if(s>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(s," data ids) after running '").concat(t,"'"))}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),a=this.state.numBytes,o=this.state.numTensors;let s,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=b(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(b(t)){const{kernelName:e,inputs:a,attrs:o}=t;null==this.backendName&&this.backend;const u=Object(i.c)(e,this.backendName);l.b(null!=u,()=>"Cannot find registered kernel '".concat(e,"' for backend '").concat(this.backendName,"'")),s=()=>{const t=this.backend.numDataIds();c=u.kernelFunc({inputs:a,attrs:o,backend:this.backend});const s=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,s);const i=s.map(t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t));if(r){const t=this.getTensorsForGradient(e,a,i);n=this.saveTensorsForBackwardMode(t)}return i}}else{const{forwardFunc:e}=t,a=t=>{r&&(n=t.map(t=>this.keep(this.clone(t))))};s=()=>{const t=this.backend.numDataIds();c=this.tidy(()=>e(this.backend,a));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,t,n),n}}const{inputs:d,attrs:p}=t,h=b(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(u,d,()=>s()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs):e=s()}),r&&this.addTapeNode(u,d,e,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(t=>null!=d[t]?d[t].shape:null),outputShapes:e.map(t=>t.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=Object(i.b)(t);if(null!=r){const t=r.inputsToSave||[],a=r.outputsToSave||[];let o;r.saveAllInputs?(l.b(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(e).map(t=>e[t])):o=t.map(t=>e[t]);const s=n.filter((t,e)=>a[e]);return o.concat(s)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=t;"string"===n&&l.z(t[0])&&(a=t.map(t=>u.encodeString(t)));const o=r.write(a,e,n),s=new f.a(e,n,o,this.nextTensorId());if(this.trackTensor(s,r),"string"===n){const t=this.state.tensorInfo.get(o),e=Object(l.f)(a);this.state.numBytes+=e-t.bytes,t.bytes=e}return s}makeTensorFromDataId(t,e,n,r){const a={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:r,dtype:a}=t,o=new f.a(r,a,n,this.nextTensorId());return this.trackTensor(o,e),o}makeVariable(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const a=new f.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error("Variable with name ".concat(a.name," was already registered"));return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*l.g(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof f.c||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*l.g(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,a,o){const s={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:a},c=Object(i.b)(t);null!=c&&(r=c.gradFunc),null!=r&&(s.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=l.F(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],a,o))),this.state.activeTape.push(s)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(m.getTensorsInContainer)(t),n=new Set(e.map(t=>t.id));for(let a=0;a<this.state.activeScope.track.length;a++){const t=this.state.activeScope.track[a];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(l.b(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));l.b(a instanceof f.a,()=>"The result y returned by f() must be a tensor.");const o=function(t,e,n){const r={},a={};for(let c=0;c<e.length;c++)r[e[c].id]=!0;for(let c=0;c<t.length;c++){const n=t[c],o=n.inputs;for(const t in o){const s=o[t];let i=!1;for(let t=0;t<e.length;t++)if(r[s.id]){n.outputs.forEach(t=>r[t.id]=!0),i=!0,a[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const s={};for(let c=t.length-1;c>=0;c--){const e=t[c],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(o[e.outputs[t].id]){for(const t in n)o[n[t].id]=!0,s[e.id]=!0;break}}const i=[];for(let c=0;c<t.length;c++){const e=t[c];if(a[e.id]&&s[e.id]){const t={};for(const a in e.inputs){const n=e.inputs[a];r[n.id]&&(t[a]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,a);if(!r&&0===o.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[a.id]=null==n?function(t){const e=Object(l.D)(Object(l.O)(t),"float32");return O.makeTensor(e,t,"float32")}(a.shape):n,function(t,e,n,r){for(let a=e.length-1;a>=0;a--){const o=e[a],s=[];if(o.outputs.forEach(e=>{const n=t[e.id];null!=n?s.push(n):s.push(null)}),null==o.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(o.kernelName,"."));const i=o.gradient(s);for(const e in o.inputs){if(!(e in i))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const a=n(()=>i[e]());if("float32"!==a.dtype)throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(a.dtype,"'"));const s=o.inputs[e];if(!l.a(a.shape,s.shape))throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(a.shape,"', which does not match ")+"the shape of the input '".concat(s.shape,"'"));if(null==t[s.id])t[s.id]=a;else{const e=t[s.id];t[s.id]=r(e,a),e.dispose()}}}}(t,o,t=>this.tidy(t),x);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(t){var e=this;return l.b(l.u(t),()=>"The f passed in customGrad(f) must be a function."),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];let o;l.b(r.every(t=>t instanceof f.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const s={};r.forEach((t,e)=>{s[e]=t});const i=(e,n)=>(o=t(...r,n),l.b(o.value instanceof f.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),l.b(l.u(o.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),o.value),c=(t,e)=>{const n=o.gradFunc(t,e),a=Array.isArray(n)?n:[n];l.b(a.length===r.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),l.b(a.every(t=>t instanceof f.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const s={};return a.forEach((t,e)=>{s[e]=()=>t}),s};return e.runKernelFunc({forwardFunc:i,backwardsFunc:c,inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Object(u.now)(),n=await this.backend.time(t);return n.wallMs=Object(u.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const t=Object(o.b)();if(null==t._tfengine){const e=new a.b(t);t._tfengine=new y(e)}return Object(a.d)(t._tfengine.ENV),Object(f.f)(()=>t._tfengine),t._tfengine}y.nextTensorId=0,y.nextVariableId=0;const O=v();function x(t,e){const n={a:t,b:e};return O.runKernel(s.d,n)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return g})),n.d(e,"a",(function(){return y}));var r=n(183),a=n(35),o=n(187),s=n(4),i=n(96),c=n(12);class u{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new d)}profileKernel(t,e,n){let r;const o=this.backendTimer.time(()=>{r=n()});if(Object(a.b)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const e=r[a];e.data().then(n=>{l(n,e.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:o.then(t=>t.kernelMs),extraInfo:o.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:a,extraInfo:o}=t;n.forEach(t=>{Promise.all([t.data(),r,o]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],a,n[2])})})}}function l(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn("Found ".concat(e," in the result of '").concat(n,"'")),!0}return!1}class d{logKernelProfile(t,e,n,r,a,o){const s="number"===typeof r?c.L("".concat(r,"ms"),9):r.error,i=c.L(t,25),u=e.rank,l=e.size,d=c.L(e.shape.toString(),14);let p="";for(const c in a){const t=a[c];if(null!=t){const n=t.shape||e.shape,r=n.length;p+="".concat(c,": ").concat(r,"D ").concat(r>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(s,"\t%c").concat(u,"D ").concat(d,"\t%c").concat(l,"\t%c").concat(p,"\t%c").concat(o),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var p=n(10),h=n(36),f=n(17);class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class b{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error("The highest priority backend '".concat(t,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t in this.registryFactory?(console.warn("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error("Backend name '".concat(t,"' not found in registry"));if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new u(this.backendInstance),!0}setupRegisteredKernels(){Object(i.c)(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Object(i.c)(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{const n=e.factory();if(!n||n instanceof r.b||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn("Initialization of backend ".concat(t," failed")),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn("Initialization of backend ".concat(t," failed")),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,a=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>{const e={x:t},n={dtype:"float32"};return y.runKernelFunc(e=>e.cast(t,"float32"),e,null,s.w,n)}}),[],{}),e}runKernel(t,e,n,r,a){return this.runKernelFunc(null,e,null,t,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let a=0;n.forEach(t=>{a+="complex64"===t.dtype?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-e-a-o;if(s>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(s," data ids) after running '").concat(t,"'"))}runKernelFunc(t,e,n,r,a,o,s){let c,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const d=this.state.numBytes,p=this.state.numTensors;let h;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const f=Object(i.b)(r,this.backendName);let m,b;if(null!=f)h=()=>{const t=this.backend.numDataIds();m=f.kernelFunc({inputs:e,attrs:a,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const i=n.map(t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)});if(l){let t=this.getTensorsForGradient(r,e,i);if(null==t){null==s&&(s=[]);const e=i.filter((t,e)=>s[e]);t=(o||[]).slice().concat(e)}u=this.saveTensorsForBackwardMode(t)}return i};else{if(null==t)throw new Error("Error running ".concat(r,": Neither modular kernel nor forward func passed"));const e=t=>{l&&(u=t.map(t=>this.keep(this.clone(t))))};h=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>t(this.backend,e));const a=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(b=this.profiler.profileKernel(r,e,()=>h()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(b),c=b.outputs):c=h()}),l&&this.addTapeNode(r,e,c,n,u,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>null!=e[t]?e[t].shape:null),outputShapes:c.map(t=>t.shape),kernelTimeMs:b.timeMs,extraInfo:b.extraInfo}),Array.isArray(m)?c:c[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=Object(i.a)(t);if(null!=r){const t=r.inputsToSave||[],a=r.outputsToSave||[];let o;r.saveAllInputs?(c.b(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(e).map(t=>e[t])):o=t.map(t=>e[t]);const s=n.filter((t,e)=>a[e]);return o.concat(s)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=t;"string"===n&&c.z(t[0])&&(a=t.map(t=>f.encodeString(t)));const o=r.write(a,e,n),s=new p.a(e,n,o,this.nextTensorId());if(this.incRef(s,r),"string"===n){const t=this.state.tensorInfo.get(o),e=Object(c.f)(a);this.state.numBytes+=e-t.bytes,t.bytes=e}return s}makeTensorFromDataId(t,e,n,r){n=n||"float32";const a=new p.a(e,n,t,this.nextTensorId());return this.incRef(a,r),a}makeVariable(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const a=new p.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error("Variable with name ".concat(a.name," was already registered"));return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*c.g(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof p.c||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):(e.backend.decComplexRef(t.dataId),this.state.tensorInfo.get(t.dataId).refCount--)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,a,o){const s={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:a},u=Object(i.a)(t);null!=u&&(r=u.gradFunc),null!=r&&(s.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=c.F(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],a,o))),this.state.activeTape.push(s)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(h.getTensorsInContainer)(t),n=new Set(e.map(t=>t.id));for(let a=0;a<this.state.activeScope.track.length;a++){const t=this.state.activeScope.track[a];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(c.b(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));c.b(a instanceof p.a,()=>"The result y returned by f() must be a tensor.");const o=function(t,e,n){const r={},a={};for(let c=0;c<e.length;c++)r[e[c].id]=!0;for(let c=0;c<t.length;c++){const n=t[c],o=n.inputs;for(const t in o){const s=o[t];let i=!1;for(let t=0;t<e.length;t++)if(r[s.id]){n.outputs.forEach(t=>r[t.id]=!0),i=!0,a[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const s={};for(let c=t.length-1;c>=0;c--){const e=t[c],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(o[e.outputs[t].id]){for(const t in n)o[n[t].id]=!0,s[e.id]=!0;break}}const i=[];for(let c=0;c<t.length;c++){const e=t[c];if(a[e.id]&&s[e.id]){const t={};for(const a in e.inputs){const n=e.inputs[a];r[n.id]&&(t[a]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,a);if(!r&&0===o.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[a.id]=null==n?function(t){const e=Object(c.D)(Object(c.N)(t),"float32");return y.makeTensor(e,t,"float32")}(a.shape):n,function(t,e,n,r){for(let a=e.length-1;a>=0;a--){const o=e[a],s=[];if(o.outputs.forEach(e=>{const n=t[e.id];null!=n?s.push(n):s.push(null)}),null==o.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(o.kernelName,"."));const i=o.gradient(s);for(const e in o.inputs){if(!(e in i))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const a=n(()=>i[e]());if("float32"!==a.dtype)throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(a.dtype,"'"));const s=o.inputs[e];if(!c.a(a.shape,s.shape))throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(a.shape,"', which does not match ")+"the shape of the input '".concat(s.shape,"'"));if(null==t[s.id])t[s.id]=a;else{const e=t[s.id];t[s.id]=r(e,a),e.dispose()}}}}(t,o,t=>this.tidy(t),v);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(t){var e=this;return c.b(c.u(t),()=>"The f passed in customGrad(f) must be a function."),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];let o;c.b(r.every(t=>t instanceof p.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const s={};return r.forEach((t,e)=>{s[e]=t}),e.runKernelFunc((e,n)=>(o=t(...r,n),c.b(o.value instanceof p.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),c.b(c.u(o.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),o.value),s,(t,e)=>{const n=o.gradFunc(t,e),a=Array.isArray(n)?n:[n];c.b(a.length===r.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),c.b(a.every(t=>t instanceof p.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const s={};return a.forEach((t,e)=>{s[e]=()=>t}),s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Object(f.now)(),n=await this.backend.time(t);return n.wallMs=Object(f.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function g(){const t=Object(o.b)();if(null==t._tfengine){const e=new a.a(t);t._tfengine=new b(e)}return Object(a.c)(t._tfengine.ENV),Object(p.f)(()=>t._tfengine),t._tfengine}b.nextTensorId=0,b.nextVariableId=0;const y=g();function v(t,e){const n={a:t,b:e};return y.runKernel(s.d,n)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return u})),n.d(e,"f",(function(){return h})),n.d(e,"e",(function(){return f})),n.d(e,"d",(function(){return m})),n.d(e,"a",(function(){return b})),n.d(e,"c",(function(){return g}));var r=n(12);function a(t,e,n,a){const c=Object(r.j)(e),u=function(t,e,n,a){const s=Object(r.N)(e),c=a[a.length-1],u=new Array(c).fill(0),l=e.length,d="complex64"===n?i(t):t;if(l>1)for(let r=0;r<s/c;r++){const t=r*c;for(let e=0;e<c;e++)u[e]=Math.max(u[e],o(d[t+e],0,n).length)}return u}(t,e,n,c),l=e.length,d=function t(e,n,r,a,c){let u=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const l="complex64"===r?2:1,d=n[0],p=n.length;if(0===p){if("complex64"===r){return[o(i(e)[0],0,r)]}return"bool"===r?[s(e[0])]:[e[0].toString()]}if(1===p){if(d>20){const t=3*l;let n=Array.from(e.slice(0,t)),a=Array.from(e.slice((d-3)*l,d*l));return"complex64"===r&&(n=i(n),a=i(a)),["["+n.map((t,e)=>o(t,c[e],r)).join(", ")+", ..., "+a.map((t,e)=>o(t,c[d-3+e],r)).join(", ")+"]"]}return["["+("complex64"===r?i(e):Array.from(e)).map((t,e)=>o(t,c[e],r)).join(", ")+"]"]}const h=n.slice(1),f=a.slice(1),m=a[0]*l,b=[];if(d>20){for(let n=0;n<3;n++){const a=n*m,o=a+m;b.push(...t(e.slice(a,o),h,r,f,c,!1))}b.push("...");for(let n=d-3;n<d;n++){const a=n*m,o=a+m;b.push(...t(e.slice(a,o),h,r,f,c,n===d-1))}}else for(let o=0;o<d;o++){const n=o*m,a=n+m;b.push(...t(e.slice(n,a),h,r,f,c,o===d-1))}const g=2===p?",":"";b[0]="["+b[0]+g;for(let o=1;o<b.length-1;o++)b[o]=" "+b[o]+g;let y=",\n";for(let o=2;o<p;o++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(u?"":y),b}(t,e,n,c,u),p=["Tensor"];return a&&(p.push("  dtype: ".concat(n)),p.push("  rank: ".concat(l)),p.push("  shape: [".concat(e,"]")),p.push("  values:")),p.push(d.map(t=>"    "+t).join("\n")),p.join("\n")}function o(t,e,n){let a;return a=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(7))," + ")+"".concat(parseFloat(t[1].toFixed(7)),"j"):Object(r.z)(t)?"'".concat(t,"'"):"bool"===n?s(t):parseFloat(t.toFixed(7)).toString(),Object(r.L)(a,e)}function s(t){return 0===t?"false":"true"}function i(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var c=n(17);class u{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r.N(t),null!=n){const t=n.length;r.b(t===this.size,()=>"Length of values '".concat(t,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'."))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.n(e,this.size),this.strides=Object(r.j)(t)}set(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),r.b(n.length===this.rank,()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")"));const o=this.locToIndex(n);this.values[o]=t}get(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];0===e.length&&(e=[0]);let r=0;for(const o of e){if(o<0||o>=this.shape[r]){const t="Requested out of range element at ".concat(e,". ")+"  Buffer shape=".concat(this.shape);throw new Error(t)}r++}let a=e[e.length-1];for(let o=0;o<e.length-1;++o)a+=this.strides[o]*e[o];return this.values[a]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return l().makeTensor(this.values,this.shape,this.dtype)}}let l=null,d=null,p=null;function h(t){l=t}function f(t){d=t}function m(t){p=t}class b{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r.N(t),this.strides=Object(r.j)(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return d.buffer(this.shape,this.dtype,t)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(r.S)(this.shape,t)}arraySync(){return Object(r.S)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=l().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map(t=>c.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=l().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>c.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await l().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(l().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return d.print(this,t)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return a(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),d.cast(this,t)}variable(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),l().makeVariable(this,t,e,n)}}Object.defineProperty(b,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class g extends b{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!r.a(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));l().disposeTensor(this),this.dataId=t.dataId,l().incRef(this,null)}dispose(){l().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(g,Symbol.hasInstance,{value:t=>t instanceof b&&null!=t.assign&&t.assign instanceof Function})},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return o})),n.d(e,"d",(function(){return s})),n.d(e,"e",(function(){return i})),n.d(e,"f",(function(){return c})),n.d(e,"g",(function(){return u})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return d})),n.d(e,"j",(function(){return p})),n.d(e,"k",(function(){return h})),n.d(e,"l",(function(){return f})),n.d(e,"n",(function(){return m})),n.d(e,"m",(function(){return b})),n.d(e,"o",(function(){return g})),n.d(e,"r",(function(){return y})),n.d(e,"p",(function(){return v})),n.d(e,"q",(function(){return O})),n.d(e,"s",(function(){return x})),n.d(e,"t",(function(){return w})),n.d(e,"u",(function(){return k})),n.d(e,"w",(function(){return j})),n.d(e,"v",(function(){return N})),n.d(e,"x",(function(){return S})),n.d(e,"y",(function(){return I})),n.d(e,"z",(function(){return T})),n.d(e,"A",(function(){return E})),n.d(e,"B",(function(){return C})),n.d(e,"C",(function(){return A})),n.d(e,"D",(function(){return _})),n.d(e,"E",(function(){return R})),n.d(e,"F",(function(){return D})),n.d(e,"G",(function(){return F})),n.d(e,"H",(function(){return M})),n.d(e,"I",(function(){return L})),n.d(e,"J",(function(){return z})),n.d(e,"K",(function(){return P})),n.d(e,"M",(function(){return B})),n.d(e,"N",(function(){return V})),n.d(e,"L",(function(){return W})),n.d(e,"O",(function(){return U})),n.d(e,"P",(function(){return G})),n.d(e,"Q",(function(){return H})),n.d(e,"R",(function(){return q})),n.d(e,"S",(function(){return K})),n.d(e,"T",(function(){return X})),n.d(e,"U",(function(){return Y})),n.d(e,"W",(function(){return Q})),n.d(e,"V",(function(){return J})),n.d(e,"rc",(function(){return Z})),n.d(e,"X",(function(){return $})),n.d(e,"Y",(function(){return tt})),n.d(e,"Z",(function(){return et})),n.d(e,"bb",(function(){return nt})),n.d(e,"ab",(function(){return rt})),n.d(e,"cb",(function(){return at})),n.d(e,"db",(function(){return ot})),n.d(e,"eb",(function(){return st})),n.d(e,"fb",(function(){return it})),n.d(e,"gb",(function(){return ct})),n.d(e,"hb",(function(){return ut})),n.d(e,"ib",(function(){return lt})),n.d(e,"jb",(function(){return dt})),n.d(e,"lb",(function(){return pt})),n.d(e,"pb",(function(){return ht})),n.d(e,"ob",(function(){return ft})),n.d(e,"qb",(function(){return mt})),n.d(e,"rb",(function(){return bt})),n.d(e,"tb",(function(){return gt})),n.d(e,"sb",(function(){return yt})),n.d(e,"ub",(function(){return vt})),n.d(e,"vb",(function(){return Ot})),n.d(e,"wb",(function(){return xt})),n.d(e,"xb",(function(){return wt})),n.d(e,"Ab",(function(){return kt})),n.d(e,"Bb",(function(){return jt})),n.d(e,"Cb",(function(){return Nt})),n.d(e,"Db",(function(){return St})),n.d(e,"Eb",(function(){return It})),n.d(e,"Fb",(function(){return Tt})),n.d(e,"Hb",(function(){return Et})),n.d(e,"Ib",(function(){return Ct})),n.d(e,"Jb",(function(){return At})),n.d(e,"Kb",(function(){return _t})),n.d(e,"Gb",(function(){return Rt})),n.d(e,"Lb",(function(){return Dt})),n.d(e,"yb",(function(){return Ft})),n.d(e,"zb",(function(){return Mt})),n.d(e,"Mb",(function(){return Lt})),n.d(e,"Sb",(function(){return zt})),n.d(e,"Nb",(function(){return Pt})),n.d(e,"Qb",(function(){return Bt})),n.d(e,"Ob",(function(){return Vt})),n.d(e,"Pb",(function(){return Wt})),n.d(e,"Rb",(function(){return Ut})),n.d(e,"Tb",(function(){return Gt})),n.d(e,"Ub",(function(){return Ht})),n.d(e,"Vb",(function(){return qt})),n.d(e,"Wb",(function(){return Kt})),n.d(e,"Xb",(function(){return Xt})),n.d(e,"Yb",(function(){return Yt})),n.d(e,"Zb",(function(){return Qt})),n.d(e,"ac",(function(){return Jt})),n.d(e,"ec",(function(){return Zt})),n.d(e,"bc",(function(){return $t})),n.d(e,"cc",(function(){return te})),n.d(e,"dc",(function(){return ee})),n.d(e,"gc",(function(){return ne})),n.d(e,"fc",(function(){return re})),n.d(e,"hc",(function(){return ae})),n.d(e,"ic",(function(){return oe})),n.d(e,"jc",(function(){return se})),n.d(e,"kc",(function(){return ie})),n.d(e,"lc",(function(){return ce})),n.d(e,"mc",(function(){return ue})),n.d(e,"nc",(function(){return le})),n.d(e,"oc",(function(){return de})),n.d(e,"pc",(function(){return pe})),n.d(e,"qc",(function(){return he})),n.d(e,"sc",(function(){return fe})),n.d(e,"tc",(function(){return me})),n.d(e,"vc",(function(){return be})),n.d(e,"yc",(function(){return ge})),n.d(e,"zc",(function(){return ye})),n.d(e,"wc",(function(){return ve})),n.d(e,"xc",(function(){return Oe})),n.d(e,"uc",(function(){return xe})),n.d(e,"Ac",(function(){return we})),n.d(e,"Cc",(function(){return ke})),n.d(e,"Dc",(function(){return je})),n.d(e,"Ec",(function(){return Ne})),n.d(e,"Fc",(function(){return Se})),n.d(e,"Gc",(function(){return Ie})),n.d(e,"Hc",(function(){return Te})),n.d(e,"Mc",(function(){return Ee})),n.d(e,"Kc",(function(){return Ce})),n.d(e,"Lc",(function(){return Ae})),n.d(e,"Jc",(function(){return _e})),n.d(e,"Ic",(function(){return Re})),n.d(e,"Oc",(function(){return De})),n.d(e,"Wc",(function(){return Fe})),n.d(e,"fd",(function(){return Me})),n.d(e,"Pc",(function(){return Le})),n.d(e,"Vc",(function(){return ze})),n.d(e,"Nc",(function(){return Pe})),n.d(e,"Qc",(function(){return Be})),n.d(e,"Rc",(function(){return Ve})),n.d(e,"Sc",(function(){return We})),n.d(e,"Tc",(function(){return Ue})),n.d(e,"Uc",(function(){return Ge})),n.d(e,"Yc",(function(){return He})),n.d(e,"Xc",(function(){return qe})),n.d(e,"ad",(function(){return Ke})),n.d(e,"bd",(function(){return Xe})),n.d(e,"cd",(function(){return Ye})),n.d(e,"dd",(function(){return Qe})),n.d(e,"ed",(function(){return Je})),n.d(e,"gd",(function(){return Ze})),n.d(e,"hd",(function(){return $e})),n.d(e,"id",(function(){return tn})),n.d(e,"jd",(function(){return en})),n.d(e,"kd",(function(){return nn})),n.d(e,"ld",(function(){return rn})),n.d(e,"md",(function(){return an})),n.d(e,"nd",(function(){return on})),n.d(e,"od",(function(){return sn})),n.d(e,"pd",(function(){return cn})),n.d(e,"qd",(function(){return un})),n.d(e,"Zc",(function(){return ln})),n.d(e,"kb",(function(){return dn})),n.d(e,"Bc",(function(){return pn})),n.d(e,"rd",(function(){return hn})),n.d(e,"mb",(function(){return fn})),n.d(e,"nb",(function(){return mn}));const r="Abs",a="Acos",o="Acosh",s="Add",i="AddN",c="All",u="Any",l="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",v="AvgPool3D",O="AvgPool3DGrad",x="BatchMatMul",w="BatchToSpaceND",k="Bincount",j="BroadcastTo",N="BroadcastArgs",S="Cast",I="Ceil",T="ClipByValue",E="Complex",C="ComplexAbs",A="Concat",_="Conv2D",R="Conv2DBackpropFilter",D="Conv2DBackpropInput",F="Conv3D",M="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",z="Cos",P="Cosh",B="Cumprod",V="Cumsum",W="CropAndResize",U="DenseBincount",G="DepthToSpace",H="DepthwiseConv2dNative",q="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",X="Diag",Y="Dilation2D",Q="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",Z="RealDiv",$="Einsum",tt="Elu",et="EluGrad",nt="Erf",rt="Equal",at="Exp",ot="ExpandDims",st="Expm1",it="FFT",ct="Fill",ut="FlipLeftRight",lt="Floor",dt="FloorDiv",pt="FusedBatchNorm",ht="GatherV2",ft="GatherNd",mt="Greater",bt="GreaterEqual",gt="Identity",yt="IFFT",vt="Imag",Ot="IsFinite",xt="IsInf",wt="IsNan",kt="LeakyRelu",jt="Less",Nt="LessEqual",St="LinSpace",It="Log",Tt="Log1p",Et="LogicalAnd",Ct="LogicalNot",At="LogicalOr",_t="LogicalXor",Rt="LogSoftmax",Dt="LowerBound",Ft="LRN",Mt="LRNGrad",Lt="Max",zt="Maximum",Pt="MaxPool",Bt="MaxPoolGrad",Vt="MaxPool3D",Wt="MaxPool3DGrad",Ut="MaxPoolWithArgmax",Gt="Mean",Ht="Min",qt="Minimum",Kt="MirrorPad",Xt="Mod",Yt="Multinomial",Qt="Multiply",Jt="Neg",Zt="NotEqual",$t="NonMaxSuppressionV3",te="NonMaxSuppressionV4",ee="NonMaxSuppressionV5",ne="OnesLike",re="OneHot",ae="Pack",oe="PadV2",se="Pool",ie="Pow",ce="Prelu",ue="Prod",le="RaggedGather",de="RaggedTensorToTensor",pe="Range",he="Real",fe="Reciprocal",me="Relu",be="Reshape",ge="ResizeNearestNeighbor",ye="ResizeNearestNeighborGrad",ve="ResizeBilinear",Oe="ResizeBilinearGrad",xe="Relu6",we="Reverse",ke="Round",je="Rsqrt",Ne="ScatterNd",Se="SearchSorted",Ie="Select",Te="Selu",Ee="Slice",Ce="Sin",Ae="Sinh",_e="Sign",Re="Sigmoid",De="Softplus",Fe="Sqrt",Me="Sum",Le="SpaceToBatchND",ze="SplitV",Pe="Softmax",Be="SparseFillEmptyRows",Ve="SparseReshape",We="SparseSegmentMean",Ue="SparseSegmentSum",Ge="SparseToDense",He="SquaredDifference",qe="Square",Ke="StridedSlice",Xe="StringNGrams",Ye="StringSplit",Qe="StringToHashBucketFast",Je="Sub",Ze="Tan",$e="Tanh",tn="Tile",en="TopK",nn="Transform",rn="Transpose",an="Unique",on="Unpack",sn="UnsortedSegmentSum",cn="UpperBound",un="ZerosLike",ln="Step",dn="FromPixels",pn="RotateWithOffset",hn="_FusedMatMul",fn="FusedConv2D",mn="FusedDepthwiseConv2D"},function(t,e,n){"use strict";function r(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function a(t,e,n){return Math.max(t,Math.min(e,n))}function o(t){return t%2===0?t:t+1}function s(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function i(t,e){const n=Math.random();return e*n+(1-n)*t}function c(t,e){let n=0;for(let r=0;r<t.length;r++){const a=Number(t[r])-Number(e[r]);n+=a*a}return n}function u(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function l(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";u(m(t,e),()=>n+" Shapes ".concat(t," and ").concat(e," must match"))}function d(t){u(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function p(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e&&(e=[]),Array.isArray(t)||C(t)&&!n)for(let r=0;r<t.length;++r)p(t[r],e,n);else e.push(t);return e}function h(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function f(t){return 0===t.length}function m(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function b(t){return t%1===0}function g(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function y(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function v(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return r(e),e}function O(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function x(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t=>0,n=arguments.length>2?arguments[2]:void 0;return new Promise((r,a)=>{let o=0;const s=()=>{if(t())return void r();o++;const i=e(o);null!=n&&o>=n?a():setTimeout(s,i)};s()})}function w(t,e){let n=1,r=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(-1===t[o]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(r," and dim ").concat(o));r=o}else if(t[o]<0)throw Error("Shapes can not be < 0. Found ".concat(t[o]," at dim ").concat(o));if(-1===r){if(e>0&&e!==n)throw Error("Size(".concat(e,") must match the product of shape ").concat(t));return t}if(0===n)throw Error("Cannot infer the missing size in [".concat(t,"] when ")+"there are 0 elements");if(e%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(e," / ").concat(n));const a=t.slice();return a[r]=e/n,a}function k(t,e){const n=e.length;return u((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(t)),u(t.every(t=>b(t)),()=>"All values in axis param must be integers but "+"got axis ".concat(t)),t.map(t=>t<0?n+t:t)}function j(t,e){const n=[],r=[],a=null!=e&&Array.isArray(e)&&0===e.length,o=null==e||a?null:k(e,t).sort();let s=0;for(let i=0;i<t.length;++i){if(null!=o){if(o[s]===i&&1!==t[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(t[i],"' is not 1"));(null==o[s]||o[s]>i)&&1===t[i]&&(n.push(t[i]),r.push(i)),o[s]<=i&&s++}1!==t[i]&&(n.push(t[i]),r.push(i))}return{newShape:n,keptDims:r}}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type ".concat(t));n=new Uint8Array(e)}return n}function S(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));n=new Array(e)}return n}function I(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(r,"."))}}function T(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function E(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function C(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function A(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}function _(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function R(t){return"string"===typeof t||t instanceof String}function D(t){return"boolean"===typeof t}function F(t){return"number"===typeof t}function M(t){return Array.isArray(t)?M(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":F(t)?"float32":R(t)?"string":D(t)?"bool":"float32"}function L(t){return!!(t&&t.constructor&&t.call&&t.apply)}function z(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function P(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function B(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length,"."));return function t(e,n,r){const a=new Array;if(1===n.length){const t=n[0];for(let n=0;n<t;n++)a[n]=r[e+n]}else{const o=n[0],s=n.slice(1),i=s.reduce((t,e)=>t*e);for(let n=0;n<o;n++)a[n]=t(e+n*i,s,r)}return a}(0,t,e)}function V(t,e){const n=W(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function W(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function U(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return B(t,new Float32Array(n));if("int32"===e)return B(t,new Int32Array(n));if("bool"===e)return B(t,new Uint8Array(n));throw new Error("Unknown data type ".concat(e))}function G(t){t.forEach(e=>{u(Number.isInteger(e)&&e>=0,()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"]."))})}function H(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let a=0;a<t.length-1;++a)r+=n[a]*t[a];return r}function q(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(t/n[a]),t-=r[a]*n[a];return r[r.length-1]=t,r}function K(t){return t&&t.then&&"function"===typeof t.then}n.d(e,"M",(function(){return r})),n.d(e,"i",(function(){return a})),n.d(e,"H",(function(){return o})),n.d(e,"Q",(function(){return s})),n.d(e,"J",(function(){return i})),n.d(e,"l",(function(){return c})),n.d(e,"b",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return d})),n.d(e,"m",(function(){return p})),n.d(e,"N",(function(){return h})),n.d(e,"y",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"v",(function(){return b})),n.d(e,"R",(function(){return g})),n.d(e,"O",(function(){return y})),n.d(e,"k",(function(){return v})),n.d(e,"L",(function(){return O})),n.d(e,"K",(function(){return x})),n.d(e,"s",(function(){return w})),n.d(e,"I",(function(){return k})),n.d(e,"P",(function(){return j})),n.d(e,"o",(function(){return N})),n.d(e,"n",(function(){return S})),n.d(e,"h",(function(){return I})),n.d(e,"B",(function(){return T})),n.d(e,"p",(function(){return E})),n.d(e,"A",(function(){return C})),n.d(e,"g",(function(){return A})),n.d(e,"f",(function(){return _})),n.d(e,"z",(function(){return R})),n.d(e,"t",(function(){return D})),n.d(e,"w",(function(){return F})),n.d(e,"r",(function(){return M})),n.d(e,"u",(function(){return L})),n.d(e,"G",(function(){return z})),n.d(e,"j",(function(){return P})),n.d(e,"S",(function(){return B})),n.d(e,"D",(function(){return V})),n.d(e,"F",(function(){return W})),n.d(e,"E",(function(){return U})),n.d(e,"c",(function(){return G})),n.d(e,"C",(function(){return H})),n.d(e,"q",(function(){return q})),n.d(e,"x",(function(){return K}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({reshape_:function(t,e){const n={x:Object(o.a)(t,"x","reshape","string_or_numeric")},s={shape:e};return r.a.runKernel(a.nc,n,s)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(7);const c=Object(i.a)({mul_:function(t,e){let n=Object(s.a)(t,"a","mul"),i=Object(s.a)(e,"b","mul");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.Ub,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({reshape_:function(t,e){const n={x:Object(o.a)(t,"x","reshape","string_or_numeric")},s={shape:e};return r.a.runKernel(a.vc,n,s)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"shuffle",(function(){return a.M})),n.d(e,"shuffleCombo",(function(){return a.N})),n.d(e,"clamp",(function(){return a.i})),n.d(e,"nearestLargerEven",(function(){return a.H})),n.d(e,"swap",(function(){return a.S})),n.d(e,"sum",(function(){return a.R})),n.d(e,"randUniform",(function(){return a.J})),n.d(e,"distSquared",(function(){return a.l})),n.d(e,"assert",(function(){return a.b})),n.d(e,"assertShapesMatch",(function(){return a.e})),n.d(e,"assertNonNull",(function(){return a.d})),n.d(e,"flatten",(function(){return a.m})),n.d(e,"sizeFromShape",(function(){return a.O})),n.d(e,"isScalarShape",(function(){return a.y})),n.d(e,"arraysEqual",(function(){return a.a})),n.d(e,"isInt",(function(){return a.v})),n.d(e,"tanh",(function(){return a.T})),n.d(e,"sizeToSquarishShape",(function(){return a.P})),n.d(e,"createShuffledIndices",(function(){return a.k})),n.d(e,"rightPad",(function(){return a.L})),n.d(e,"repeatedTry",(function(){return a.K})),n.d(e,"inferFromImplicitShape",(function(){return a.s})),n.d(e,"parseAxisParam",(function(){return a.I})),n.d(e,"squeezeShape",(function(){return a.Q})),n.d(e,"getTypedArrayFromDType",(function(){return a.o})),n.d(e,"getArrayFromDType",(function(){return a.n})),n.d(e,"checkConversionForErrors",(function(){return a.h})),n.d(e,"isValidDtype",(function(){return a.B})),n.d(e,"hasEncodingLoss",(function(){return a.p})),n.d(e,"isTypedArray",(function(){return a.A})),n.d(e,"bytesPerElement",(function(){return a.g})),n.d(e,"bytesFromStringArray",(function(){return a.f})),n.d(e,"isString",(function(){return a.z})),n.d(e,"isBoolean",(function(){return a.t})),n.d(e,"isNumber",(function(){return a.w})),n.d(e,"inferDtype",(function(){return a.r})),n.d(e,"isFunction",(function(){return a.u})),n.d(e,"nearestDivisor",(function(){return a.G})),n.d(e,"computeStrides",(function(){return a.j})),n.d(e,"toNestedArray",(function(){return a.U})),n.d(e,"makeOnesTypedArray",(function(){return a.D})),n.d(e,"makeZerosTypedArray",(function(){return a.F})),n.d(e,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(e,"locToIndex",(function(){return a.C})),n.d(e,"indexToLoc",(function(){return a.q})),n.d(e,"isPromise",(function(){return a.x})),n.d(e,"hexToLong",(function(){return i})),n.d(e,"fingerPrint64",(function(){return x})),n.d(e,"createScalarValue",(function(){return w})),n.d(e,"toTypedArray",(function(){return k})),n.d(e,"now",(function(){return j})),n.d(e,"fetch",(function(){return N})),n.d(e,"encodeString",(function(){return S})),n.d(e,"decodeString",(function(){return I}));var r=n(32),a=n(21),o=n(239);const s=n.n(o).a||o;function i(t){return s.fromString(t,!0,16)}const c=i("c3a5c85c97cb3127"),u=i("b492b66fbe98f273"),l=i("9ae16a3b2f90404f");function d(t){return t.xor(t.shru(47))}function p(t,e,n){const r=t.slice(e,e+n);return s.fromBytes(Array.from(r),!0,!0)}function h(t,e){return p(t,e,8)}function f(t,e){return p(t,e,4)}function m(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function b(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i("9ddfea08eb382d69"),r=t.xor(e).mul(n);r=r.xor(r.shru(47));let a=e.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function g(t,e,n,r){return function(t,e,n,r,a,o){a=a.add(t),o=m(o.add(a).add(r),21);const s=a;return a=(a=a.add(e)).add(n),o=o.add(m(a,44)),[a.add(r),o.add(s)]}(h(t,e),h(t,e+8),h(t,e+16),h(t,e+24),n,r)}function y(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;if(e>=8){const n=l.add(2*e),r=h(t,0).add(l),a=h(t,e-8);return b(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(e>=4){const n=l.add(2*e);return b(f(t,0).shl(3).add(e),f(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),r=e+(t[e-1]<<2);return d(l.mul(n).xor(c.mul(r))).mul(l)}return l}function v(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=l.add(2*e),r=h(t,0).mul(u),a=h(t,8),o=h(t,e-8).mul(n),s=h(t,e-16).mul(l);return b(m(r.add(a),43).add(m(o,30)).add(s),r.add(m(a.add(l),18)).add(o),n)}function O(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=l.add(2*e),r=h(t,0).mul(l),a=h(t,8),o=h(t,e-8).mul(n),s=h(t,e-16).mul(l),i=m(r.add(a),43).add(m(o,30)).add(s),c=b(i,r.add(m(a.add(l),18)).add(o),n),u=h(t,16).mul(n),d=h(t,24),p=i.add(h(t,e-32)).mul(n),f=c.add(h(t,e-24)).mul(n);return b(m(u.add(d),43).add(m(p,30)).add(f),u.add(m(d.add(r),18)).add(p),n)}function x(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length;const n=s.fromNumber(81,!0);if(e<=32)return e<=16?y(t,e):v(t,e);if(e<=64)return O(t,e);let r=n,a=n.mul(u).add(113),o=d(a.mul(l).add(113)).mul(l),i=[s.UZERO,s.UZERO],p=[s.UZERO,s.UZERO];r=r.mul(l).add(h(t,0));let f=0;const x=64*(e-1>>6),w=x+(e-1&63)-63;do{r=m(r.add(a).add(i[0]).add(h(t,f+8)),37).mul(u),a=m(a.add(i[1]).add(h(t,f+48)),42).mul(u),r=r.xor(p[1]),a=a.add(i[0]).add(h(t,f+40)),o=m(o.add(p[0]),33).mul(u),i=g(t,f,i[1].mul(u),r.add(p[0])),p=g(t,f+32,o.add(p[1]),a.add(h(t,f+16))),[o,r]=[r,o],f+=64}while(f!==x);const k=u.add(o.and(255).shl(1));return f=w,p[0]=p[0].add(e-1&63),i[0]=i[0].add(p[0]),p[0]=p[0].add(i[0]),r=m(r.add(a).add(i[0]).add(h(t,f+8)),37).mul(k),a=m(a.add(i[1]).add(h(t,f+48)),42).mul(k),r=r.xor(p[1].mul(9)),a=a.add(i[0].mul(9).add(h(t,f+40))),o=m(o.add(p[0]),33).mul(k),i=g(t,f,i[1].mul(k),r.add(p[0])),p=g(t,f+32,o.add(p[1]),a.add(h(t,f+16))),[o,r]=[r,o],b(b(i[0],p[0],k).add(d(a).mul(c)).add(o),b(i[1],p[1],k).add(r),k)}function w(t,e){return"string"===e?S(t):k([t],e)}function k(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a.m(t)),Object(r.c)().getBool("DEBUG")&&a.h(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type ".concat(e))}function j(){return Object(r.c)().platform.now()}function N(t,e){return Object(r.c)().platform.fetch(t,e)}function S(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",Object(r.c)().platform.encode(t,e)}function I(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",Object(r.c)().platform.decode(t,e)}},function(t,e,n){"use strict";n.r(e),n.d(e,"createScalarValue",(function(){return o})),n.d(e,"toTypedArray",(function(){return s})),n.d(e,"now",(function(){return i})),n.d(e,"fetch",(function(){return c})),n.d(e,"encodeString",(function(){return u})),n.d(e,"decodeString",(function(){return l}));var r=n(35),a=n(12);function o(t,e){return"string"===e?u(t):s([t],e)}function s(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a.m(t)),Object(r.b)().getBool("DEBUG")&&a.h(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type ".concat(e))}function i(){return Object(r.b)().platform.now()}function c(t,e){return Object(r.b)().platform.fetch(t,e)}function u(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",Object(r.b)().platform.encode(t,e)}function l(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",Object(r.b)().platform.decode(t,e)}n.d(e,"shuffle",(function(){return a.M})),n.d(e,"clamp",(function(){return a.i})),n.d(e,"nearestLargerEven",(function(){return a.H})),n.d(e,"sum",(function(){return a.Q})),n.d(e,"randUniform",(function(){return a.J})),n.d(e,"distSquared",(function(){return a.l})),n.d(e,"assert",(function(){return a.b})),n.d(e,"assertShapesMatch",(function(){return a.e})),n.d(e,"assertNonNull",(function(){return a.d})),n.d(e,"flatten",(function(){return a.m})),n.d(e,"sizeFromShape",(function(){return a.N})),n.d(e,"isScalarShape",(function(){return a.y})),n.d(e,"arraysEqual",(function(){return a.a})),n.d(e,"isInt",(function(){return a.v})),n.d(e,"tanh",(function(){return a.R})),n.d(e,"sizeToSquarishShape",(function(){return a.O})),n.d(e,"createShuffledIndices",(function(){return a.k})),n.d(e,"rightPad",(function(){return a.L})),n.d(e,"repeatedTry",(function(){return a.K})),n.d(e,"inferFromImplicitShape",(function(){return a.s})),n.d(e,"parseAxisParam",(function(){return a.I})),n.d(e,"squeezeShape",(function(){return a.P})),n.d(e,"getTypedArrayFromDType",(function(){return a.o})),n.d(e,"getArrayFromDType",(function(){return a.n})),n.d(e,"checkConversionForErrors",(function(){return a.h})),n.d(e,"isValidDtype",(function(){return a.B})),n.d(e,"hasEncodingLoss",(function(){return a.p})),n.d(e,"isTypedArray",(function(){return a.A})),n.d(e,"bytesPerElement",(function(){return a.g})),n.d(e,"bytesFromStringArray",(function(){return a.f})),n.d(e,"isString",(function(){return a.z})),n.d(e,"isBoolean",(function(){return a.t})),n.d(e,"isNumber",(function(){return a.w})),n.d(e,"inferDtype",(function(){return a.r})),n.d(e,"isFunction",(function(){return a.u})),n.d(e,"nearestDivisor",(function(){return a.G})),n.d(e,"computeStrides",(function(){return a.j})),n.d(e,"toNestedArray",(function(){return a.S})),n.d(e,"makeOnesTypedArray",(function(){return a.D})),n.d(e,"makeZerosTypedArray",(function(){return a.F})),n.d(e,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(e,"locToIndex",(function(){return a.C})),n.d(e,"indexToLoc",(function(){return a.q})),n.d(e,"isPromise",(function(){return a.x}))},function(t,e,n){"use strict";n.r(e),n.d(e,"AdadeltaOptimizer",(function(){return ge})),n.d(e,"AdagradOptimizer",(function(){return ve})),n.d(e,"AdamOptimizer",(function(){return we})),n.d(e,"AdamaxOptimizer",(function(){return Ne})),n.d(e,"MomentumOptimizer",(function(){return Ie})),n.d(e,"Optimizer",(function(){return be})),n.d(e,"OptimizerConstructors",(function(){return Ee})),n.d(e,"RMSPropOptimizer",(function(){return Te})),n.d(e,"SGDOptimizer",(function(){return Se})),n.d(e,"Tensor",(function(){return Q.a})),n.d(e,"TensorBuffer",(function(){return Q.b})),n.d(e,"Variable",(function(){return Q.c})),n.d(e,"Rank",(function(){return Ce.a})),n.d(e,"sumOutType",(function(){return Ce.b})),n.d(e,"upcastType",(function(){return Ce.c})),n.d(e,"abs",(function(){return Ae.b})),n.d(e,"acos",(function(){return Ae.c})),n.d(e,"acosh",(function(){return Ae.d})),n.d(e,"add",(function(){return Ae.e})),n.d(e,"addN",(function(){return Ae.f})),n.d(e,"all",(function(){return Ae.g})),n.d(e,"any",(function(){return Ae.h})),n.d(e,"argMax",(function(){return Ae.i})),n.d(e,"argMin",(function(){return Ae.j})),n.d(e,"asin",(function(){return Ae.k})),n.d(e,"asinh",(function(){return Ae.l})),n.d(e,"atan",(function(){return Ae.m})),n.d(e,"atan2",(function(){return Ae.n})),n.d(e,"atanh",(function(){return Ae.o})),n.d(e,"avgPool",(function(){return Ae.p})),n.d(e,"avgPool3d",(function(){return Ae.q})),n.d(e,"basicLSTMCell",(function(){return Ae.r})),n.d(e,"batchToSpaceND",(function(){return Ae.w})),n.d(e,"batchNorm",(function(){return Ae.s})),n.d(e,"batchNorm2d",(function(){return Ae.t})),n.d(e,"batchNorm3d",(function(){return Ae.u})),n.d(e,"batchNorm4d",(function(){return Ae.v})),n.d(e,"bincount",(function(){return Ae.x})),n.d(e,"broadcastArgs",(function(){return Ae.z})),n.d(e,"broadcastTo",(function(){return Ae.A})),n.d(e,"buffer",(function(){return Ae.B})),n.d(e,"cast",(function(){return Ae.C})),n.d(e,"ceil",(function(){return Ae.D})),n.d(e,"clipByValue",(function(){return Ae.E})),n.d(e,"clone",(function(){return Ae.F})),n.d(e,"complex",(function(){return Ae.G})),n.d(e,"concat",(function(){return Ae.H})),n.d(e,"concat1d",(function(){return Ae.I})),n.d(e,"concat2d",(function(){return Ae.J})),n.d(e,"concat3d",(function(){return Ae.K})),n.d(e,"concat4d",(function(){return Ae.L})),n.d(e,"conv1d",(function(){return Ae.M})),n.d(e,"conv2d",(function(){return Ae.N})),n.d(e,"conv2dTranspose",(function(){return Ae.O})),n.d(e,"conv3d",(function(){return Ae.P})),n.d(e,"conv3dTranspose",(function(){return Ae.Q})),n.d(e,"cos",(function(){return Ae.R})),n.d(e,"cosh",(function(){return Ae.S})),n.d(e,"cumprod",(function(){return Ae.U})),n.d(e,"cumsum",(function(){return Ae.V})),n.d(e,"denseBincount",(function(){return Ae.W})),n.d(e,"depthToSpace",(function(){return Ae.X})),n.d(e,"depthwiseConv2d",(function(){return Ae.Y})),n.d(e,"diag",(function(){return Ae.Z})),n.d(e,"dilation2d",(function(){return Ae.ab})),n.d(e,"div",(function(){return Ae.bb})),n.d(e,"divNoNan",(function(){return Ae.cb})),n.d(e,"dot",(function(){return Ae.db})),n.d(e,"einsum",(function(){return Ae.fb})),n.d(e,"elu",(function(){return Ae.gb})),n.d(e,"equal",(function(){return Ae.ib})),n.d(e,"erf",(function(){return Ae.jb})),n.d(e,"euclideanNorm",(function(){return Ae.kb})),n.d(e,"exp",(function(){return Ae.lb})),n.d(e,"expandDims",(function(){return Ae.mb})),n.d(e,"expm1",(function(){return Ae.nb})),n.d(e,"eye",(function(){return Ae.ob})),n.d(e,"fill",(function(){return Ae.qb})),n.d(e,"floor",(function(){return Ae.rb})),n.d(e,"floorDiv",(function(){return Ae.sb})),n.d(e,"gather",(function(){return Ae.ub})),n.d(e,"greater",(function(){return Ae.wb})),n.d(e,"greaterEqual",(function(){return Ae.xb})),n.d(e,"imag",(function(){return Ae.zb})),n.d(e,"isFinite",(function(){return Ae.Db})),n.d(e,"isInf",(function(){return Ae.Eb})),n.d(e,"isNaN",(function(){return Ae.Fb})),n.d(e,"leakyRelu",(function(){return Ae.Gb})),n.d(e,"less",(function(){return Ae.Hb})),n.d(e,"lessEqual",(function(){return Ae.Ib})),n.d(e,"linspace",(function(){return Ae.Kb})),n.d(e,"localResponseNormalization",(function(){return Ae.Lb})),n.d(e,"log",(function(){return Ae.Mb})),n.d(e,"log1p",(function(){return Ae.Nb})),n.d(e,"logSigmoid",(function(){return Ae.Ob})),n.d(e,"logSoftmax",(function(){return Ae.Pb})),n.d(e,"logSumExp",(function(){return Ae.Qb})),n.d(e,"logicalAnd",(function(){return Ae.Rb})),n.d(e,"logicalNot",(function(){return Ae.Sb})),n.d(e,"logicalOr",(function(){return Ae.Tb})),n.d(e,"logicalXor",(function(){return Ae.Ub})),n.d(e,"lowerBound",(function(){return Ae.Wb})),n.d(e,"matMul",(function(){return Ae.Xb})),n.d(e,"max",(function(){return Ae.Yb})),n.d(e,"maxPool",(function(){return Ae.Zb})),n.d(e,"maxPool3d",(function(){return Ae.ac})),n.d(e,"maxPoolWithArgmax",(function(){return Ae.bc})),n.d(e,"maximum",(function(){return Ae.cc})),n.d(e,"mean",(function(){return Ae.dc})),n.d(e,"meshgrid",(function(){return Ae.ec})),n.d(e,"min",(function(){return Ae.fc})),n.d(e,"minimum",(function(){return Ae.gc})),n.d(e,"mirrorPad",(function(){return Ae.hc})),n.d(e,"mod",(function(){return Ae.ic})),n.d(e,"moments",(function(){return Ae.jc})),n.d(e,"mul",(function(){return Ae.lc})),n.d(e,"multiRNNCell",(function(){return Ae.mc})),n.d(e,"multinomial",(function(){return Ae.nc})),n.d(e,"neg",(function(){return Ae.oc})),n.d(e,"notEqual",(function(){return Ae.qc})),n.d(e,"oneHot",(function(){return Ae.rc})),n.d(e,"ones",(function(){return Ae.sc})),n.d(e,"onesLike",(function(){return Ae.tc})),n.d(e,"outerProduct",(function(){return Ae.vc})),n.d(e,"pad",(function(){return Ae.wc})),n.d(e,"pad1d",(function(){return Ae.xc})),n.d(e,"pad2d",(function(){return Ae.yc})),n.d(e,"pad3d",(function(){return Ae.zc})),n.d(e,"pad4d",(function(){return Ae.Ac})),n.d(e,"pool",(function(){return Ae.Bc})),n.d(e,"pow",(function(){return Ae.Cc})),n.d(e,"prelu",(function(){return Ae.Dc})),n.d(e,"print",(function(){return Ae.Ec})),n.d(e,"prod",(function(){return Ae.Fc})),n.d(e,"raggedGather",(function(){return Ae.Gc})),n.d(e,"raggedTensorToTensor",(function(){return Ae.Hc})),n.d(e,"rand",(function(){return Ae.Ic})),n.d(e,"randomGamma",(function(){return Ae.Jc})),n.d(e,"randomNormal",(function(){return Ae.Kc})),n.d(e,"randomStandardNormal",(function(){return Ae.Lc})),n.d(e,"randomUniform",(function(){return Ae.Mc})),n.d(e,"range",(function(){return Ae.Nc})),n.d(e,"real",(function(){return Ae.Oc})),n.d(e,"reciprocal",(function(){return Ae.Pc})),n.d(e,"relu",(function(){return Ae.Qc})),n.d(e,"relu6",(function(){return Ae.Rc})),n.d(e,"reshape",(function(){return Ae.Sc})),n.d(e,"reverse",(function(){return Ae.Tc})),n.d(e,"reverse1d",(function(){return Ae.Uc})),n.d(e,"reverse2d",(function(){return Ae.Vc})),n.d(e,"reverse3d",(function(){return Ae.Wc})),n.d(e,"reverse4d",(function(){return Ae.Xc})),n.d(e,"round",(function(){return Ae.Zc})),n.d(e,"rsqrt",(function(){return Ae.ad})),n.d(e,"scalar",(function(){return Ae.bd})),n.d(e,"selu",(function(){return Ae.ed})),n.d(e,"separableConv2d",(function(){return Ae.fd})),n.d(e,"setdiff1dAsync",(function(){return Ae.gd})),n.d(e,"sigmoid",(function(){return Ae.hd})),n.d(e,"sign",(function(){return Ae.id})),n.d(e,"sin",(function(){return Ae.kd})),n.d(e,"sinh",(function(){return Ae.ld})),n.d(e,"slice",(function(){return Ae.md})),n.d(e,"slice1d",(function(){return Ae.nd})),n.d(e,"slice2d",(function(){return Ae.od})),n.d(e,"slice3d",(function(){return Ae.pd})),n.d(e,"slice4d",(function(){return Ae.qd})),n.d(e,"softmax",(function(){return Ae.rd})),n.d(e,"softplus",(function(){return Ae.sd})),n.d(e,"spaceToBatchND",(function(){return Ae.td})),n.d(e,"fft",(function(){return Ae.pb})),n.d(e,"ifft",(function(){return Ae.yb})),n.d(e,"irfft",(function(){return Ae.Cb})),n.d(e,"rfft",(function(){return Ae.Yc})),n.d(e,"split",(function(){return Ae.xd})),n.d(e,"sqrt",(function(){return Ae.yd})),n.d(e,"square",(function(){return Ae.zd})),n.d(e,"squaredDifference",(function(){return Ae.Ad})),n.d(e,"squeeze",(function(){return Ae.Bd})),n.d(e,"stack",(function(){return Ae.Cd})),n.d(e,"step",(function(){return Ae.Dd})),n.d(e,"stridedSlice",(function(){return Ae.Ed})),n.d(e,"sub",(function(){return Ae.Gd})),n.d(e,"sum",(function(){return Ae.Hd})),n.d(e,"tan",(function(){return Ae.Id})),n.d(e,"tanh",(function(){return Ae.Jd})),n.d(e,"tensor",(function(){return Ae.Kd})),n.d(e,"tensor1d",(function(){return Ae.Ld})),n.d(e,"tensor2d",(function(){return Ae.Md})),n.d(e,"tensor3d",(function(){return Ae.Nd})),n.d(e,"tensor4d",(function(){return Ae.Od})),n.d(e,"tensor5d",(function(){return Ae.Pd})),n.d(e,"tensor6d",(function(){return Ae.Qd})),n.d(e,"tile",(function(){return Ae.Rd})),n.d(e,"topk",(function(){return Ae.Sd})),n.d(e,"truncatedNormal",(function(){return Ae.Ud})),n.d(e,"unique",(function(){return Ae.Vd})),n.d(e,"unsortedSegmentSum",(function(){return Ae.Wd})),n.d(e,"unstack",(function(){return Ae.Xd})),n.d(e,"upperBound",(function(){return Ae.Yd})),n.d(e,"variable",(function(){return Ae.Zd})),n.d(e,"where",(function(){return Ae.ae})),n.d(e,"whereAsync",(function(){return Ae.be})),n.d(e,"zeros",(function(){return Ae.ce})),n.d(e,"zerosLike",(function(){return Ae.de})),n.d(e,"booleanMaskAsync",(function(){return Ae.y})),n.d(e,"transpose",(function(){return Ae.Td})),n.d(e,"norm",(function(){return Ae.pc})),n.d(e,"movingAverage",(function(){return Ae.kc})),n.d(e,"scatterND",(function(){return Ae.cd})),n.d(e,"searchSorted",(function(){return Ae.dd})),n.d(e,"sparseToDense",(function(){return Ae.vd})),n.d(e,"gatherND",(function(){return Ae.vb})),n.d(e,"dropout",(function(){return Ae.eb})),n.d(e,"enclosingPowerOfTwo",(function(){return Ae.hb})),n.d(e,"cosineWindow",(function(){return Ae.T})),n.d(e,"inTopKAsync",(function(){return Ae.Bb})),n.d(e,"op",(function(){return Ae.uc})),n.d(e,"OP_SCOPE_SUFFIX",(function(){return Ae.a})),n.d(e,"image",(function(){return Ae.Ab})),n.d(e,"linalg",(function(){return Ae.Jb})),n.d(e,"losses",(function(){return Ae.Vb})),n.d(e,"spectral",(function(){return Ae.wd})),n.d(e,"fused",(function(){return Ae.tb})),n.d(e,"signal",(function(){return Ae.jd})),n.d(e,"sparse",(function(){return Ae.ud})),n.d(e,"string",(function(){return Ae.Fd})),n.d(e,"Reduction",(function(){return _e.a})),n.d(e,"train",(function(){return Re})),n.d(e,"enableProdMode",(function(){return ie.g})),n.d(e,"enableDebugMode",(function(){return ie.f})),n.d(e,"disableDeprecationWarnings",(function(){return ie.c})),n.d(e,"deprecationWarn",(function(){return ie.b})),n.d(e,"disposeVariables",(function(){return ie.e})),n.d(e,"engine",(function(){return ie.h})),n.d(e,"memory",(function(){return ie.m})),n.d(e,"profile",(function(){return ie.n})),n.d(e,"tidy",(function(){return ie.t})),n.d(e,"dispose",(function(){return ie.d})),n.d(e,"keep",(function(){return ie.l})),n.d(e,"time",(function(){return ie.u})),n.d(e,"setBackend",(function(){return ie.r})),n.d(e,"ready",(function(){return ie.o})),n.d(e,"getBackend",(function(){return ie.k})),n.d(e,"removeBackend",(function(){return ie.q})),n.d(e,"findBackend",(function(){return ie.i})),n.d(e,"findBackendFactory",(function(){return ie.j})),n.d(e,"registerBackend",(function(){return ie.p})),n.d(e,"backend",(function(){return ie.a})),n.d(e,"setPlatform",(function(){return ie.s})),n.d(e,"getKernel",(function(){return It.c})),n.d(e,"getGradient",(function(){return It.b})),n.d(e,"getKernelsForBackend",(function(){return It.d})),n.d(e,"registerKernel",(function(){return It.f})),n.d(e,"registerGradient",(function(){return It.e})),n.d(e,"unregisterKernel",(function(){return It.h})),n.d(e,"unregisterGradient",(function(){return It.g})),n.d(e,"copyRegisteredKernels",(function(){return It.a})),n.d(e,"customGrad",(function(){return fe.a})),n.d(e,"grad",(function(){return fe.b})),n.d(e,"grads",(function(){return fe.c})),n.d(e,"valueAndGrad",(function(){return fe.d})),n.d(e,"valueAndGrads",(function(){return fe.e})),n.d(e,"variableGrads",(function(){return fe.f})),n.d(e,"Environment",(function(){return h.b})),n.d(e,"env",(function(){return h.c})),n.d(e,"ENV",(function(){return h.a})),n.d(e,"version_core",(function(){return se})),n.d(e,"nextFrame",(function(){return De.a})),n.d(e,"browser",(function(){return o})),n.d(e,"io",(function(){return r})),n.d(e,"math",(function(){return a})),n.d(e,"serialization",(function(){return c})),n.d(e,"test_util",(function(){return ae})),n.d(e,"util",(function(){return oe})),n.d(e,"backend_util",(function(){return l})),n.d(e,"broadcast_util",(function(){return Nt})),n.d(e,"tensor_util",(function(){return re})),n.d(e,"slice_util",(function(){return i})),n.d(e,"gather_util",(function(){return s})),n.d(e,"scatter_util",(function(){return Mt})),n.d(e,"device_util",(function(){return Wn})),n.d(e,"kernel_impls",(function(){return d})),n.d(e,"KernelBackend",(function(){return Hn.b})),n.d(e,"DataStorage",(function(){return Hn.a})),n.d(e,"Abs",(function(){return St.a})),n.d(e,"Acos",(function(){return St.b})),n.d(e,"Acosh",(function(){return St.c})),n.d(e,"Add",(function(){return St.d})),n.d(e,"AddN",(function(){return St.e})),n.d(e,"All",(function(){return St.f})),n.d(e,"Any",(function(){return St.g})),n.d(e,"ArgMax",(function(){return St.h})),n.d(e,"ArgMin",(function(){return St.i})),n.d(e,"Asin",(function(){return St.j})),n.d(e,"Asinh",(function(){return St.k})),n.d(e,"Atan",(function(){return St.l})),n.d(e,"Atanh",(function(){return St.n})),n.d(e,"Atan2",(function(){return St.m})),n.d(e,"AvgPool",(function(){return St.o})),n.d(e,"AvgPoolGrad",(function(){return St.r})),n.d(e,"AvgPool3D",(function(){return St.p})),n.d(e,"AvgPool3DGrad",(function(){return St.q})),n.d(e,"BatchMatMul",(function(){return St.s})),n.d(e,"BatchToSpaceND",(function(){return St.t})),n.d(e,"Bincount",(function(){return St.u})),n.d(e,"BroadcastTo",(function(){return St.w})),n.d(e,"BroadcastArgs",(function(){return St.v})),n.d(e,"Cast",(function(){return St.x})),n.d(e,"Ceil",(function(){return St.y})),n.d(e,"ClipByValue",(function(){return St.z})),n.d(e,"Complex",(function(){return St.A})),n.d(e,"ComplexAbs",(function(){return St.B})),n.d(e,"Concat",(function(){return St.C})),n.d(e,"Conv2D",(function(){return St.D})),n.d(e,"Conv2DBackpropFilter",(function(){return St.E})),n.d(e,"Conv2DBackpropInput",(function(){return St.F})),n.d(e,"Conv3D",(function(){return St.G})),n.d(e,"Conv3DBackpropFilterV2",(function(){return St.H})),n.d(e,"Conv3DBackpropInputV2",(function(){return St.I})),n.d(e,"Cos",(function(){return St.J})),n.d(e,"Cosh",(function(){return St.K})),n.d(e,"Cumprod",(function(){return St.M})),n.d(e,"Cumsum",(function(){return St.N})),n.d(e,"CropAndResize",(function(){return St.L})),n.d(e,"DenseBincount",(function(){return St.O})),n.d(e,"DepthToSpace",(function(){return St.P})),n.d(e,"DepthwiseConv2dNative",(function(){return St.Q})),n.d(e,"DepthwiseConv2dNativeBackpropFilter",(function(){return St.R})),n.d(e,"DepthwiseConv2dNativeBackpropInput",(function(){return St.S})),n.d(e,"Diag",(function(){return St.T})),n.d(e,"Dilation2D",(function(){return St.U})),n.d(e,"Dilation2DBackpropInput",(function(){return St.W})),n.d(e,"Dilation2DBackpropFilter",(function(){return St.V})),n.d(e,"RealDiv",(function(){return St.rc})),n.d(e,"Einsum",(function(){return St.X})),n.d(e,"Elu",(function(){return St.Y})),n.d(e,"EluGrad",(function(){return St.Z})),n.d(e,"Erf",(function(){return St.bb})),n.d(e,"Equal",(function(){return St.ab})),n.d(e,"Exp",(function(){return St.cb})),n.d(e,"ExpandDims",(function(){return St.db})),n.d(e,"Expm1",(function(){return St.eb})),n.d(e,"FFT",(function(){return St.fb})),n.d(e,"Fill",(function(){return St.gb})),n.d(e,"FlipLeftRight",(function(){return St.hb})),n.d(e,"Floor",(function(){return St.ib})),n.d(e,"FloorDiv",(function(){return St.jb})),n.d(e,"FusedBatchNorm",(function(){return St.lb})),n.d(e,"GatherV2",(function(){return St.pb})),n.d(e,"GatherNd",(function(){return St.ob})),n.d(e,"Greater",(function(){return St.qb})),n.d(e,"GreaterEqual",(function(){return St.rb})),n.d(e,"Identity",(function(){return St.tb})),n.d(e,"IFFT",(function(){return St.sb})),n.d(e,"Imag",(function(){return St.ub})),n.d(e,"IsFinite",(function(){return St.vb})),n.d(e,"IsInf",(function(){return St.wb})),n.d(e,"IsNan",(function(){return St.xb})),n.d(e,"LeakyRelu",(function(){return St.Ab})),n.d(e,"Less",(function(){return St.Bb})),n.d(e,"LessEqual",(function(){return St.Cb})),n.d(e,"LinSpace",(function(){return St.Db})),n.d(e,"Log",(function(){return St.Eb})),n.d(e,"Log1p",(function(){return St.Fb})),n.d(e,"LogicalAnd",(function(){return St.Hb})),n.d(e,"LogicalNot",(function(){return St.Ib})),n.d(e,"LogicalOr",(function(){return St.Jb})),n.d(e,"LogicalXor",(function(){return St.Kb})),n.d(e,"LogSoftmax",(function(){return St.Gb})),n.d(e,"LowerBound",(function(){return St.Lb})),n.d(e,"LRN",(function(){return St.yb})),n.d(e,"LRNGrad",(function(){return St.zb})),n.d(e,"Max",(function(){return St.Mb})),n.d(e,"Maximum",(function(){return St.Sb})),n.d(e,"MaxPool",(function(){return St.Nb})),n.d(e,"MaxPoolGrad",(function(){return St.Qb})),n.d(e,"MaxPool3D",(function(){return St.Ob})),n.d(e,"MaxPool3DGrad",(function(){return St.Pb})),n.d(e,"MaxPoolWithArgmax",(function(){return St.Rb})),n.d(e,"Mean",(function(){return St.Tb})),n.d(e,"Min",(function(){return St.Ub})),n.d(e,"Minimum",(function(){return St.Vb})),n.d(e,"MirrorPad",(function(){return St.Wb})),n.d(e,"Mod",(function(){return St.Xb})),n.d(e,"Multinomial",(function(){return St.Yb})),n.d(e,"Multiply",(function(){return St.Zb})),n.d(e,"Neg",(function(){return St.ac})),n.d(e,"NotEqual",(function(){return St.ec})),n.d(e,"NonMaxSuppressionV3",(function(){return St.bc})),n.d(e,"NonMaxSuppressionV4",(function(){return St.cc})),n.d(e,"NonMaxSuppressionV5",(function(){return St.dc})),n.d(e,"OnesLike",(function(){return St.gc})),n.d(e,"OneHot",(function(){return St.fc})),n.d(e,"Pack",(function(){return St.hc})),n.d(e,"PadV2",(function(){return St.ic})),n.d(e,"Pool",(function(){return St.jc})),n.d(e,"Pow",(function(){return St.kc})),n.d(e,"Prelu",(function(){return St.lc})),n.d(e,"Prod",(function(){return St.mc})),n.d(e,"RaggedGather",(function(){return St.nc})),n.d(e,"RaggedTensorToTensor",(function(){return St.oc})),n.d(e,"Range",(function(){return St.pc})),n.d(e,"Real",(function(){return St.qc})),n.d(e,"Reciprocal",(function(){return St.sc})),n.d(e,"Relu",(function(){return St.tc})),n.d(e,"Reshape",(function(){return St.vc})),n.d(e,"ResizeNearestNeighbor",(function(){return St.yc})),n.d(e,"ResizeNearestNeighborGrad",(function(){return St.zc})),n.d(e,"ResizeBilinear",(function(){return St.wc})),n.d(e,"ResizeBilinearGrad",(function(){return St.xc})),n.d(e,"Relu6",(function(){return St.uc})),n.d(e,"Reverse",(function(){return St.Ac})),n.d(e,"Round",(function(){return St.Cc})),n.d(e,"Rsqrt",(function(){return St.Dc})),n.d(e,"ScatterNd",(function(){return St.Ec})),n.d(e,"SearchSorted",(function(){return St.Fc})),n.d(e,"Select",(function(){return St.Gc})),n.d(e,"Selu",(function(){return St.Hc})),n.d(e,"Slice",(function(){return St.Mc})),n.d(e,"Sin",(function(){return St.Kc})),n.d(e,"Sinh",(function(){return St.Lc})),n.d(e,"Sign",(function(){return St.Jc})),n.d(e,"Sigmoid",(function(){return St.Ic})),n.d(e,"Softplus",(function(){return St.Oc})),n.d(e,"Sqrt",(function(){return St.Wc})),n.d(e,"Sum",(function(){return St.fd})),n.d(e,"SpaceToBatchND",(function(){return St.Pc})),n.d(e,"SplitV",(function(){return St.Vc})),n.d(e,"Softmax",(function(){return St.Nc})),n.d(e,"SparseFillEmptyRows",(function(){return St.Qc})),n.d(e,"SparseReshape",(function(){return St.Rc})),n.d(e,"SparseSegmentMean",(function(){return St.Sc})),n.d(e,"SparseSegmentSum",(function(){return St.Tc})),n.d(e,"SparseToDense",(function(){return St.Uc})),n.d(e,"SquaredDifference",(function(){return St.Yc})),n.d(e,"Square",(function(){return St.Xc})),n.d(e,"StridedSlice",(function(){return St.ad})),n.d(e,"StringNGrams",(function(){return St.bd})),n.d(e,"StringSplit",(function(){return St.cd})),n.d(e,"StringToHashBucketFast",(function(){return St.dd})),n.d(e,"Sub",(function(){return St.ed})),n.d(e,"Tan",(function(){return St.gd})),n.d(e,"Tanh",(function(){return St.hd})),n.d(e,"Tile",(function(){return St.id})),n.d(e,"TopK",(function(){return St.jd})),n.d(e,"Transform",(function(){return St.kd})),n.d(e,"Transpose",(function(){return St.ld})),n.d(e,"Unique",(function(){return St.md})),n.d(e,"Unpack",(function(){return St.nd})),n.d(e,"UnsortedSegmentSum",(function(){return St.od})),n.d(e,"UpperBound",(function(){return St.pd})),n.d(e,"ZerosLike",(function(){return St.qd})),n.d(e,"Step",(function(){return St.Zc})),n.d(e,"FromPixels",(function(){return St.kb})),n.d(e,"RotateWithOffset",(function(){return St.Bc})),n.d(e,"_FusedMatMul",(function(){return St.rd})),n.d(e,"FusedConv2D",(function(){return St.mb})),n.d(e,"FusedDepthwiseConv2D",(function(){return St.nb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return U})),n.d(r,"listModels",(function(){return V})),n.d(r,"moveModel",(function(){return G})),n.d(r,"removeModel",(function(){return W})),n.d(r,"browserFiles",(function(){return et})),n.d(r,"browserHTTPRequest",(function(){return dt})),n.d(r,"concatenateArrayBuffers",(function(){return f.d})),n.d(r,"decodeWeights",(function(){return f.e})),n.d(r,"encodeWeights",(function(){return f.f})),n.d(r,"fromMemory",(function(){return mt})),n.d(r,"fromMemorySync",(function(){return bt})),n.d(r,"getLoadHandlers",(function(){return v})),n.d(r,"getModelArtifactsForJSON",(function(){return f.g})),n.d(r,"getModelArtifactsForJSONSync",(function(){return f.h})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return f.i})),n.d(r,"getSaveHandlers",(function(){return y})),n.d(r,"getWeightSpecs",(function(){return f.k})),n.d(r,"http",(function(){return lt})),n.d(r,"isHTTPScheme",(function(){return ct})),n.d(r,"loadWeights",(function(){return ot})),n.d(r,"registerLoadRouter",(function(){return g})),n.d(r,"registerSaveRouter",(function(){return b})),n.d(r,"weightsLoaderFactory",(function(){return st})),n.d(r,"withSaveHandler",(function(){return gt})),n.d(r,"withSaveHandlerSync",(function(){return yt}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return jt}));var o={};n.r(o),n.d(o,"fromPixelsAsync",(function(){return _t})),n.d(o,"toPixels",(function(){return Rt})),n.d(o,"fromPixels",(function(){return Dt}));var s={};n.r(s),n.d(s,"prepareAndValidate",(function(){return Ft}));var i={};n.r(i),n.d(i,"assertParamsValid",(function(){return Lt})),n.d(i,"maskToAxes",(function(){return zt})),n.d(i,"computeOutShape",(function(){return Pt})),n.d(i,"stridesWithElidedDims",(function(){return Bt})),n.d(i,"getNormalizedAxes",(function(){return Ut})),n.d(i,"startIndicesWithElidedDims",(function(){return Gt})),n.d(i,"stopIndicesWithElidedDims",(function(){return Ht})),n.d(i,"stridesForAxis",(function(){return qt})),n.d(i,"startForAxis",(function(){return Kt})),n.d(i,"stopForAxis",(function(){return Xt})),n.d(i,"isSliceContinous",(function(){return Yt})),n.d(i,"computeFlatOffset",(function(){return Qt})),n.d(i,"parseSliceParams",(function(){return Jt})),n.d(i,"sliceInfo",(function(){return Zt}));var c={};n.r(c),n.d(c,"Serializable",(function(){return te})),n.d(c,"SerializationMap",(function(){return ee})),n.d(c,"registerClass",(function(){return ne}));var u={};n.r(u),n.d(u,"segOpComputeOptimalWindowSize",(function(){return Ln})),n.d(u,"computeOutShape",(function(){return zn})),n.d(u,"collectGatherOpShapeInfo",(function(){return Pn}));var l={};n.r(l),n.d(l,"axesAreInnerMostDims",(function(){return Fe.b})),n.d(l,"combineLocations",(function(){return Fe.c})),n.d(l,"computeOutAndReduceShapes",(function(){return Fe.d})),n.d(l,"expandShapeToKeepDim",(function(){return Fe.e})),n.d(l,"assertAxesAreInnerMostDims",(function(){return Fe.a})),n.d(l,"getAxesPermutation",(function(){return Fe.f})),n.d(l,"getUndoAxesPermutation",(function(){return Fe.h})),n.d(l,"getInnerMostAxes",(function(){return Fe.g})),n.d(l,"getBroadcastDims",(function(){return Nt.getBroadcastDims})),n.d(l,"getReductionAxes",(function(){return Nt.getReductionAxes})),n.d(l,"assertAndGetBroadcastShape",(function(){return Nt.assertAndGetBroadcastShape})),n.d(l,"assertParamsConsistent",(function(){return Me})),n.d(l,"computeOutShape",(function(){return Le})),n.d(l,"computeDilation2DInfo",(function(){return Pe.e})),n.d(l,"computePool2DInfo",(function(){return Pe.f})),n.d(l,"computePool3DInfo",(function(){return Pe.g})),n.d(l,"computeConv2DInfo",(function(){return Pe.b})),n.d(l,"computeConv3DInfo",(function(){return Pe.c})),n.d(l,"computeDefaultPad",(function(){return Pe.d})),n.d(l,"tupleValuesAreOne",(function(){return Pe.j})),n.d(l,"eitherStridesOrDilationsAreOne",(function(){return Pe.i})),n.d(l,"convertConv2DDataFormat",(function(){return Pe.h})),n.d(l,"checkPadOnDimRoundingMode",(function(){return Pe.a})),n.d(l,"getFusedDyActivation",(function(){return Be.c})),n.d(l,"getFusedBiasGradient",(function(){return Be.b})),n.d(l,"applyActivation",(function(){return Be.a})),n.d(l,"shouldFuse",(function(){return Be.d})),n.d(l,"RowPartitionType",(function(){return ze})),n.d(l,"combineRaggedTensorToTensorShapes",(function(){return Ve})),n.d(l,"getRowPartitionTypesHelper",(function(){return We})),n.d(l,"getRaggedRank",(function(){return Ue})),n.d(l,"validateDefaultValueShape",(function(){return Ge})),n.d(l,"PARALLELIZE_THRESHOLD",(function(){return He})),n.d(l,"computeOptimalWindowSize",(function(){return qe})),n.d(l,"slice_util",(function(){return i})),n.d(l,"upcastType",(function(){return Ce.c})),n.d(l,"getImageCenter",(function(){return Ke})),n.d(l,"getReshaped",(function(){return Xe})),n.d(l,"getPermuted",(function(){return Ye})),n.d(l,"getReshapedPermuted",(function(){return Qe})),n.d(l,"getSliceBeginCoords",(function(){return Je})),n.d(l,"getSliceSize",(function(){return Ze})),n.d(l,"prepareAndValidate",(function(){return Ft})),n.d(l,"validateUpdateShape",(function(){return Mt.validateUpdateShape})),n.d(l,"validateInput",(function(){return Mt.validateInput})),n.d(l,"calculateShapes",(function(){return Mt.calculateShapes})),n.d(l,"SELU_SCALEALPHA",(function(){return $e})),n.d(l,"SELU_SCALE",(function(){return tn})),n.d(l,"ERF_P",(function(){return en})),n.d(l,"ERF_A1",(function(){return nn})),n.d(l,"ERF_A2",(function(){return rn})),n.d(l,"ERF_A3",(function(){return an})),n.d(l,"ERF_A4",(function(){return on})),n.d(l,"ERF_A5",(function(){return sn})),n.d(l,"warn",(function(){return cn.b})),n.d(l,"log",(function(){return cn.a})),n.d(l,"mergeRealAndImagArrays",(function(){return un})),n.d(l,"splitRealAndImagArrays",(function(){return ln})),n.d(l,"complexWithEvenIndex",(function(){return dn})),n.d(l,"complexWithOddIndex",(function(){return pn})),n.d(l,"getComplexWithIndex",(function(){return hn})),n.d(l,"assignToTypedArray",(function(){return fn})),n.d(l,"exponents",(function(){return mn})),n.d(l,"exponent",(function(){return bn})),n.d(l,"decodeEinsumEquation",(function(){return yn})),n.d(l,"getEinsumPermutation",(function(){return vn})),n.d(l,"checkEinsumDimSizes",(function(){return On})),n.d(l,"getEinsumComputePath",(function(){return xn})),n.d(l,"isIdentityPermutation",(function(){return wn})),n.d(l,"prepareSplitSize",(function(){return jn})),n.d(l,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(function(){return Nn})),n.d(l,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(function(){return Sn})),n.d(l,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(function(){return In})),n.d(l,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(function(){return Tn})),n.d(l,"getSparseReshapeNegativeOutputDimErrorMessage",(function(){return En})),n.d(l,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(function(){return Cn})),n.d(l,"getSparseReshapeInputOutputMultipleErrorMessage",(function(){return An})),n.d(l,"getSparseReshapeInputOutputMismatchErrorMessage",(function(){return _n})),n.d(l,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(function(){return Rn})),n.d(l,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(function(){return Dn})),n.d(l,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(function(){return Fn})),n.d(l,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(function(){return Mn})),n.d(l,"segment_util",(function(){return u})),n.d(l,"fromUint8ToStringArray",(function(){return Bn})),n.d(l,"fromStringArrayToUint8",(function(){return Vn}));var d={};n.r(d),n.d(d,"nonMaxSuppressionV3Impl",(function(){return Un.a})),n.d(d,"nonMaxSuppressionV4Impl",(function(){return Un.b})),n.d(d,"nonMaxSuppressionV5Impl",(function(){return Un.c})),n.d(d,"whereImpl",(function(){return Gn.a}));var p=n(8),h=(n(179),n(32)),f=n(51);class m{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==m.instance&&(m.instance=new m),m.instance}static registerSaveRouter(t){m.getInstance().saveRouters.push(t)}static registerLoadRouter(t){m.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return m.getHandlers(t,"save")}static getLoadHandlers(t,e){return m.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?m.getInstance().loadRouters:m.getInstance().saveRouters).forEach(e=>{const a=e(t,n);null!==a&&r.push(a)}),r}}const b=t=>m.registerSaveRouter(t),g=t=>m.registerLoadRouter(t),y=t=>m.getSaveHandlers(t),v=(t,e)=>m.getLoadHandlers(t,e);function O(){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function x(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class w{constructor(t){if(this.indexedDB=O(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>x(r),r.onsuccess=()=>{const a=r.result;if(null==e){const e=a.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));t(r.result.modelArtifacts)},r.onerror=t=>(a.close(),n(r.error)),e.oncomplete=()=>a.close()}else{const r=Object(f.i)(e),o=a.transaction("model_info_store","readwrite");let s=o.objectStore("model_info_store");const i=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let c;i.onsuccess=()=>{c=a.transaction("models_store","readwrite");const i=c.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});i.onsuccess=()=>t({modelArtifactsInfo:r}),i.onerror=t=>{s=o.objectStore("model_info_store");const e=s.delete(this.modelPath);e.onsuccess=()=>(a.close(),n(i.error)),e.onerror=t=>(a.close(),n(i.error))}},i.onerror=t=>(a.close(),n(i.error)),o.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}}},r.onerror=t=>n(r.error)})}}w.URL_SCHEME="indexeddb://";const k=t=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(w.URL_SCHEME)?(e=t.slice(w.URL_SCHEME.length),new w(e)):null;var e};m.registerSaveRouter(k),m.registerLoadRouter(k);class j{constructor(){this.indexedDB=O()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>x(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),o=a.objectStore("model_info_store").getAll();o.onsuccess=()=>{const e={};for(const t of o.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},o.onerror=t=>(r.close(),e(o.error)),a.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(w.URL_SCHEME)?e.slice(w.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>x(r),r.onsuccess=()=>{const a=r.result,o=a.transaction("model_info_store","readwrite"),s=o.objectStore("model_info_store"),i=s.get(t);let c;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error("Cannot find model with path '".concat(t,"' ")+"in IndexedDB."));{const r=s.delete(t),o=()=>{c=a.transaction("models_store","readwrite");const r=c.objectStore("models_store").delete(t);r.onsuccess=()=>e(i.result.modelArtifactsInfo),r.onerror=t=>n(i.error)};r.onsuccess=o,r.onerror=t=>(o(),a.close(),n(i.error))}},i.onerror=t=>(a.close(),n(i.error)),o.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}},r.onerror=t=>n(r.error)})}}var N=n(21);const S="tensorflowjs_models",I="info",T="model_topology",E="weight_specs",C="weight_data",A="model_metadata";function _(t){return{info:[S,t,I].join("/"),topology:[S,t,T].join("/"),weightSpecs:[S,t,E].join("/"),weightData:[S,t,C].join("/"),modelMetadata:[S,t,A].join("/")}}function R(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function D(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join("/")}class F{constructor(t){if(!Object(h.c)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=_(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),a=Object(f.i)(t);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(f.a)(t.weightData));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:a}}catch(e){throw R(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(a.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(a.weightSpecsBytes,", ")+"weightDataBytes=".concat(a.weightDataBytes,"."))}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");e.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const t=JSON.parse(a);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return e.weightData=Object(f.b)(o),e}}F.URL_SCHEME="localstorage://";const M=t=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(F.URL_SCHEME)?(e=t.slice(F.URL_SCHEME.length),new F(e)):null;var e};m.registerSaveRouter(M),m.registerLoadRouter(M);class L{constructor(){Object(N.b)(Object(h.c)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(N.b)("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=S+"/",n="/"+I;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(e)&&a.endsWith(n)){t[D(a)]=JSON.parse(this.LS.getItem(a))}}return t}async removeModel(t){var e;const n=_(t=(e=t).startsWith(F.URL_SCHEME)?e.slice(F.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(t,"'"));const r=JSON.parse(this.LS.getItem(n.info));return R(n),r}}class z{constructor(){this.managers={}}static getInstance(){return null==z.instance&&(z.instance=new z),z.instance}static registerManager(t,e){Object(N.b)(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Object(N.b)(t.length>0,()=>"scheme must not be an empty string.");const n=z.getInstance();Object(N.b)(null==n.managers[t],()=>"A model store manager is already registered for scheme '".concat(t,"'.")),n.managers[t]=e}static getManager(t){const e=z.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}static getSchemes(){return Object.keys(z.getInstance().managers)}}function P(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(z.getSchemes().join(",")));return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function B(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];Object(N.b)(t!==e,()=>"Old path and new path are the same: '".concat(t,"'"));const r=m.getLoadHandlers(t);Object(N.b)(r.length>0,()=>"Copying failed because no load handler is found for source URL ".concat(t,".")),Object(N.b)(r.length<2,()=>"Copying failed because more than one (".concat(r.length,") ")+"load handlers for source URL ".concat(t,"."));const a=r[0],o=m.getSaveHandlers(e);Object(N.b)(o.length>0,()=>"Copying failed because no save handler is found for destination "+"URL ".concat(e,".")),Object(N.b)(o.length<2,()=>"Copying failed because more than one (".concat(r.length,") ")+"save handlers for destination URL ".concat(e,"."));const s=o[0],i=P(t).scheme,c=P(t).path,u=i===P(t).scheme,l=await a.load();n&&u&&await z.getManager(i).removeModel(c);const d=await s.save(l);return n&&!u&&await z.getManager(i).removeModel(c),d.modelArtifactsInfo}async function V(){const t=z.getSchemes(),e={};for(const n of t){const t=await z.getManager(n).listModels();for(const r in t){e[n+"://"+r]=t[r]}}return e}async function W(t){const e=P(t);return z.getManager(e.scheme).removeModel(e.path)}async function U(t,e){return B(t,e,!1)}async function G(t,e){return B(t,e,!0)}class H{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){window&&Object(h.c)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",t=>{if(t.source===window&&t.data.name===this.messageName){t.stopPropagation();(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))):setTimeout(t,e)}}if(Object(h.c)().get("IS_BROWSER")){Object(h.c)().setPlatform("browser",new H);try{z.registerManager(F.URL_SCHEME,new L)}catch(qn){}try{z.registerManager(w.URL_SCHEME,new j)}catch(qn){}}n(357);var q=n(71),K=n(43),X=n(92),Y=n(191),Q=n(42);Object(p.b)();const J={buffer:q.a,cast:K.a,clone:X.a,print:Y.a};Object(Q.e)(J);function Z(t){return new Promise(t=>setTimeout(t)).then(t)}class ${constructor(t){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith($.URL_SCHEME)&&(t=t.slice($.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r=Object(f.j)(t,n),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=a,await Z(()=>o.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Z(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(f.i)(t)}}}}$.URL_SCHEME="downloads://";class tt{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(t));this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void e(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==r.weightsManifest)return void e(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void t({modelTopology:a});const o=Object(f.g)(r,t=>this.loadWeights(t));t(o)},n.onerror=t=>e("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)})}loadWeights(t){const e=[],n=[];for(const o of t)e.push(...o.weights),n.push(...o.paths);const r=this.checkManifestAndWeightFiles(t),a=n.map(t=>this.loadWeightsFile(t,r[t]));return Promise.all(a).then(t=>[e,Object(f.d)(t)])}loadWeightsFile(t,e){return new Promise((n,r)=>{const a=new FileReader;a.onload=t=>{const e=t.target.result;n(e)},a.onerror=e=>r("Failed to weights data from file of path '".concat(t,"'.")),a.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],n=this.weightsFiles.map(t=>Object(f.c)(t.name)),r={};for(const a of t)a.paths.forEach(t=>{const a=Object(f.c)(t);if(-1!==e.indexOf(a))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(a,"'"));if(e.push(a),-1===n.indexOf(a))throw new Error("Weight file with basename '".concat(a,"' is not provided."));r[t]=this.weightsFiles[n.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(e.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return r}}function et(t){return new tt(t)}function nt(t,e,n,r){!function(t){Object(N.b)(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Object(N.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(t)),Object(N.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(e)),Object(N.b)(e>=t,()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(t," and endFraction ")+"".concat(e))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(t.map(o=>(o.then(o=>{const s=n+ ++a/t.length*(r-n);return e(s),o}),o)))}m.registerSaveRouter(t=>Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith($.URL_SCHEME)?function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new $(t)}(t.slice($.URL_SCHEME.length)):null);var rt=n(186);async function at(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(h.c)().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),a=(null==e.onProgress?await Promise.all(r):await nt(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(a):await nt(a,e.onProgress,.5,1)}async function ot(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;const a=t=>at(t,{requestInit:r}),o=st(a);return o(t,e,n)}function st(t){return async function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const a=e.map(()=>!1),o={},s=null!=r?r.map(()=>!1):[],i=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const c="quantization"in t?t.quantization.dtype:t.dtype,u=rt.a[c]*N.O(t.shape),l=()=>{a[e]=!0,null==o[e]&&(o[e]=[]),o[e].push({manifestEntry:t,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((e,n)=>{e===t.name&&(l(),s[n]=!0)}):l(),i.push(t.name),n+=u})}),!s.every(t=>t)){const t=r.filter((t,e)=>!s[e]);throw new Error("Could not find weights in manifest with names: "+"".concat(t.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=a.reduce((t,e,n)=>(e&&t.push(n),t),[]),u=[];c.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;u.push(e)})});const l=await t(u),d={};let p=0;return c.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[p+e].byteLength;const a=new ArrayBuffer(r),s=new Uint8Array(a);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[p+e]);s.set(t,i),i+=t.byteLength}o[t].forEach(t=>{const e=a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(f.e)(e,[t.manifestEntry]);for(const r in n)d[r]=n[r]}),p+=n}),d}}class it{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(N.b)("function"===typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(h.c)().platform.fetch,Object(N.b)(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(N.b)(2===t.length,()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(t.length,").")),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r=Object(f.j)(t,n);e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,e);if(a.ok)return{modelArtifactsInfo:Object(f.i)(t),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(t.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let e;try{e=await t.json()}catch(a){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return Object(f.g)(e,t=>this.loadWeights(t))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),a=n>e?t.substring(n):"";return[r+"/",a]}(e),a=this.weightPathPrefix||n,o=Object(f.k)(t),s=[],i=[];for(const u of t)for(const t of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(t)):s.push(a+t+r);this.weightUrlConverter&&s.push(...await Promise.all(i));const c=await at(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,Object(f.d)(c)]}}function ct(t){return null!=t.match(it.URL_SCHEME_REGEX)}it.URL_SCHEME_REGEX=/^https?:\/\//;const ut=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>ct(t)):ct(t),n)return lt(t,e)}return null};function lt(t,e){return new it(t,e)}function dt(t,e){return lt(t,e)}m.registerSaveRouter(ut),m.registerLoadRouter(ut);class pt{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class ht{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class ft{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function mt(t,e,n,r){const a=arguments;return new ft(bt(...a))}function bt(t,e,n,r){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new pt(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new pt({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new pt({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function gt(t){return new ht(t)}function yt(t){return new ht(t)}var vt=n(2),Ot=n(47),xt=n(184),wt=n(6),kt=n(140);const jt=Object(wt.b)({confusionMatrix_:function(t,e,n){const r=Object(vt.a)(t,"labels","confusionMatrix"),a=Object(vt.a)(e,"predictions","confusionMatrix");N.b(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, "+"but got ".concat(n)),N.b(1===r.rank,()=>"Expected the rank of labels to be 1, but got ".concat(r.rank)),N.b(1===a.rank,()=>"Expected the rank of predictions to be 1, "+"but got ".concat(a.rank)),N.b(r.shape[0]===a.shape[0],()=>"Mismatch in the number of examples: "+"".concat(r.shape[0]," vs. ").concat(a.shape[0],". ")+"Labels and predictions should have the same number of elements."),N.b(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+"".concat(n));const o=Object(xt.a)(Object(K.a)(r,"int32"),n),s=Object(xt.a)(Object(K.a)(a,"int32"),n),i=Object(kt.a)(o),c=Object(Ot.a)(i,s);return Object(K.a)(c,"int32")}});var Nt=n(40),St=n(11),It=n(102),Tt=n(199);let Et;function Ct(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,o=!1,s=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)o=!0;else if(null!=t.getContext)s=!0;else{if(!("undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(t.constructor.name));i=!0}const c=Object(It.c)(St.kb,p.a.backendName);if(null!=c){const n={pixels:t},r={numChannels:e};return p.a.runKernel(St.kb,n,r)}const[u,l]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let d,h;if(s)d=t.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)d=t.data;else if(o||a||i){if(null==Et)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Et=new OffscreenCanvas(1,1).getContext("2d")}else Et=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Et.canvas.width=u,Et.canvas.height=l,Et.drawImage(t,0,0,u,l),d=Et.getImageData(0,0,u,l).data}if(4===e)h=new Int32Array(d);else{const t=u*l;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=d[4*n+t]}const f=[l,u,e];return Object(Tt.a)(h,f,"int32")}function At(t){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&function(t){return null!=t&&0!==t.width&&0!==t.height}(t)&&!function(t){return null!=t&&t.data instanceof Uint8Array}(t)}async function _t(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if(Object(h.c)().getBool("WRAP_TO_IMAGEBITMAP")&&At(t)){let e;try{e=await createImageBitmap(t,{premultiplyAlpha:"none"})}catch(r){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return Ct(n,e)}async function Rt(t,e){let n=Object(vt.a)(t,"img","toPixels");if(!(t instanceof Q.a)){const t=n;n=Object(K.a)(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(n.rank,"."));const[r,a]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2];if(o>4||2===o)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(o));if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error("Unsupported type for toPixels: ".concat(n.dtype,".")+" Please use float32 or int32 tensors.");const s=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){const t=[0,0,0,255];for(let r=0;r<o;r++){const e=s[u*o+r];if("float32"===n.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===n.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===o?(t[0]=e*i,t[1]=e*i,t[2]=e*i):t[r]=e*i}const e=4*u;c[e+0]=Math.round(t[0]),c[e+1]=Math.round(t[1]),c[e+2]=Math.round(t[2]),c[e+3]=Math.round(t[3])}if(null!=e){e.width=a,e.height=r;const t=e.getContext("2d"),n=new ImageData(c,a,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),c}const Dt=Object(wt.b)({fromPixels_:Ct});function Ft(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(r<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(r,"."));if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.shape[r-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(e.shape[r-1]," vs. ").concat(n));if(0===Object(N.O)(t.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(t.shape,"."));const a=e.shape,o=a[a.length-1];let s=1;for(let d=0;d<a.length-1;++d)s*=a[d];const i=t.shape,c=a.slice();c.pop();let u=1;for(let d=o;d<n;++d)u*=i[d],c.push(i[d]);const l=[...Object(N.j)(t.shape).map(t=>t/u),1].slice(0,o);return[c,s,u,l]}var Mt=n(147);function Lt(t,e,n){const r=t.shape.length;N.b(r===e.length,()=>"Error in slice".concat(r,"D: Length of begin ").concat(e," must ")+"match the rank of the array (".concat(r,").")),N.b(r===n.length,()=>"Error in slice".concat(r,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(r,")."));for(let a=0;a<r;++a)N.b(e[a]+n[a]<=t.shape[a],()=>"Error in slice".concat(r,"D: begin[").concat(a,"] + size[").concat(a,"] ")+"(".concat(e[a]+n[a],") would overflow input.shape[").concat(a,"] (").concat(t.shape[a],")"))}function zt(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Pt(t,e,n){const r=[];for(let a=0;a<t.length;a++)r[a]=Math.ceil((e[a]-t[a])/n[a]);return r}function Bt(t,e,n,r){const a=[...t];for(let o=a.length;o<r.length;o++)a.push(1);for(let o=0;o<n;o++)0===o?a[e]=1:(a.splice(e,0,1),a.pop());return a}function Vt(t,e,n){return n<=t?n:n-(e-1)}function Wt(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function Ut(t,e,n,r,a,o,s,i,c){const u=t.length;let l=new Array(u),d=new Array(u),p=new Array(u);if(e.length&&n>0){const c=e[0],u=n+1;l=Gt(s,c,u,r,t),d=Ht(i,c,u,a,t),p=Bt(o,c,u,t)}else for(let h=0;h<u;h++)l[h]=Kt(s,r,o,t,h,c),d[h]=Xt(i,a,o,t,h,c),p[h]=qt(o,h,c);return{begin:l,end:d,strides:p}}function Gt(t,e,n,r,a){const o=[...a],s=Wt(n,e);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=0;else{const a=Vt(e,n,i);let s=r[a];t&1<<a&&(s=0),o[i]=s}return o}function Ht(t,e,n,r,a){const o=[...a],s=Wt(n,e);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const a=Vt(e,n,i);let s=r[a];t&1<<a&&(s=Number.MAX_SAFE_INTEGER),o[i]=s}for(let i=0;i<o.length;i++){const t=a[i];o[i]<0&&(o[i]+=t),o[i]=N.i(0,o[i],a[i])}return o}function qt(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Kt(t,e,n,r,a,o){let s=e[a];const i=n[a]||1;(t&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=r[a];return s<0&&(s+=c),s=N.i(0,s,c-1),s}function Xt(t,e,n,r,a,o){let s=e[a];const i=n[a]||1;(t&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=r[a];return s<0&&(s+=c),s=i>0?N.i(0,s,c):N.i(-1,s,c-1),s}function Yt(t,e,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function Qt(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Jt(t,e,n){let r;const a=t.shape.length;let o;return r="number"===typeof e?[e,...new Array(a-1).fill(0)]:e.length<a?e.concat(new Array(a-e.length).fill(0)):e.slice(),r.forEach(t=>{N.b(-1!==t,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,o=o.map((e,n)=>e>=0?e:(N.b(-1===e,()=>"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(n,".")),t.shape[n]-r[n])),[r,o]}function Zt(t,e,n,r,a,o,s,i,c){let u;if(null==r?(u=new Array(e.length),u.fill(1)):u=r,null!=s&&0!==(s&s-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:o,ellipsisMask:s,newAxisMask:i,shrinkAxisMask:c};for(let y=0;y<d.dims;y++)l&&0!==(1<<y&i)&&d.numAddAxisAfterEllipsis++,1<<y&s&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const p={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const a=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<a;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(-2),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(e.dims," dims, ").concat(e.begin.length,"."));null!=t.begin&&(e.begin[n]=t.begin[r]),null!=t.end&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(-1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}(d,p);let h=!0,f=!0,m=!0;const b=[],g=[];for(let y=0;y<t.length;++y){if(0===p.strides[y])throw Error("strides[".concat(y,"] must be non-zero"));const e=!!(p.shrinkAxisMask&1<<y),n=t[y];if(-1===n){b.push(e?1:-1);continue}const r=[p.beginMask&1<<y,p.endMask&1<<y],a=[p.strides[y]>0?0:-1,p.strides[y]>0?n:n-1];if(e&&p.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[y];const o=!!(p.beginMask&1<<y&&p.endMask&1<<y);if(p.beginValid&&p.endValid){if(e){const t=p.begin[y]<0?n+p.begin[y]:p.begin[y];if(p.begin[y]=t,p.end[y]=p.begin[y]+1,t<0||t>=n)throw Error("slice index ".concat(p.begin[y]," of dimension ").concat(y," out of bounds."))}else p.begin[y]=$t(p.begin[y],0,p.strides[y],n,r,a),p.end[y]=$t(p.end[y],1,p.strides[y],n,r,a);const t=1===p.strides[y]&&0===p.begin[y]&&p.end[y]===n;h=h&&t,f=f&&(0===y&&1===p.strides[y]||t)}else h=h&&1===p.strides[y]&&o,f=f&&(0===y&&1===p.strides[y]||o);let s,i=!1;if(p.beginValid&&p.endValid?(s=p.end[y]-p.begin[y],i=!0):e?(s=1,i=!0):o&&n>=0&&(s=p.strides[y]<0?-n:n,i=!0),i){let t;t=0===s||s<0!==p.strides[y]<0?0:Math.trunc(s/p.strides[y])+(s%p.strides[y]!==0?1:0),b.push(t)}else b.push(-1)}for(let y=0;y<p.finalShapeGatherIndices.length;++y){const t=p.finalShapeGatherIndices[y];t>=0?g.push(b[t]):-2===t&&g.push(1)}return{finalShapeSparse:g.filter((t,e)=>-2!==p.finalShapeGatherIndices[e]),finalShape:g,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function $t(t,e,n,r,a,o){if(a[e])return n>0?o[e]:o[e+1&1];{const e=t<0?r+t:t;return e<o[0]?o[0]:e>o[1]?o[1]:e}}class te{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class ee{constructor(){this.classNameMap={}}static getMap(){return null==ee.instance&&(ee.instance=new ee),ee.instance}static register(t){ee.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function ne(t){Object(N.b)(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(N.b)("string"===typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(N.b)(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ee.register(t)}var re=n(34),ae=n(172),oe=n(16);const se="3.21.0";var ie=n(38),ce=n(29),ue=n(41),le=n(19),de=n(93),pe=n(64),he=n(62),fe=n(54),me=n(39);class be extends te{minimize(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:a}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:a[t.name]}));this.applyGradients(t)}else this.applyGradients(a);return Object(ie.d)(a),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Object(fe.f)(t,e)}dispose(){null!=this.iterations_&&Object(ie.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(me.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(be,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class ge extends be{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p.a.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=p.a.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(e,"/accum_grad"),variable:Object(ie.t)(()=>Object(he.a)(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(e,"/accum_var"),variable:Object(ie.t)(()=>Object(he.a)(r).variable(!1))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const o=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;Object(ie.t)(()=>{const t=Object(ce.a)(Object(le.a)(o,this.rho),Object(le.a)(Object(pe.a)(a),1-this.rho)),e=Object(le.a)(Object(ue.a)(Object(de.a)(Object(ce.a)(s,this.epsilon)),Object(de.a)(Object(ce.a)(o,this.epsilon))),a),n=Object(ce.a)(Object(le.a)(s,this.rho),Object(le.a)(Object(pe.a)(e),1-this.rho));o.assign(t),s.assign(n);const i=Object(ce.a)(Object(le.a)(e,-this.learningRate),r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(ie.d)(this.accumulatedGrads.map(t=>t.variable)),Object(ie.d)(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}ge.className="Adadelta",ne(ge);var ye=n(106);class ve extends be{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=p.a.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:"".concat(e,"/accumulator"),variable:Object(ie.t)(()=>Object(ye.a)(r.shape,this.initialAccumulatorValue).variable(t))}}const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const o=this.accumulatedGrads[n].variable;Object(ie.t)(()=>{const t=Object(ce.a)(o,Object(pe.a)(a));o.assign(t);const e=Object(ce.a)(Object(le.a)(Object(ue.a)(a,Object(de.a)(Object(ce.a)(t,p.a.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(ie.d)(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}ve.className="Adagrad",ne(ve);var Oe=n(122),xe=n(33);class we extends be{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(ie.t)(()=>{this.accBeta1=Object(me.a)(e).variable(),this.accBeta2=Object(me.a)(n).variable()}),null==r&&(this.epsilon=p.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(ie.t)(()=>{const n=Object(xe.a)(1,this.accBeta1),r=Object(xe.a)(1,this.accBeta2);e.forEach((e,a)=>{const o=p.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:"".concat(e,"/m"),variable:Object(ie.t)(()=>Object(he.a)(o).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:"".concat(e,"/v"),variable:Object(ie.t)(()=>Object(he.a)(o).variable(!1))});const s=Array.isArray(t)?t[a].tensor:t[e];if(null==s)return;const i=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,u=Object(ce.a)(Object(le.a)(i,this.beta1),Object(le.a)(s,1-this.beta1)),l=Object(ce.a)(Object(le.a)(c,this.beta2),Object(le.a)(Object(pe.a)(s),1-this.beta2)),d=Object(ue.a)(u,n),h=Object(ue.a)(l,r);i.assign(u),c.assign(l);const f=Object(ce.a)(Object(le.a)(Object(ue.a)(d,Object(ce.a)(Object(de.a)(h),this.epsilon)),-this.learningRate),o);o.assign(f)}),this.accBeta1.assign(Object(le.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(le.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(ie.d)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Object(ie.d)(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Object(ie.t)(()=>{this.accBeta1.assign(Object(Oe.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Oe.a)(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}we.className="Adam",ne(we);var ke=n(65),je=n(193);class Ne extends be{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(ie.t)(()=>{this.iteration=Object(me.a)(0).variable(),this.accBeta1=Object(me.a)(e).variable()}),null==r&&(this.epsilon=p.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(ie.t)(()=>{const n=Object(xe.a)(1,this.accBeta1),r=Object(ue.a)(-this.learningRate,Object(ce.a)(Object(le.a)(this.iteration,this.decay),1));e.forEach((e,a)=>{const o=p.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:"".concat(e,"/m"),variable:Object(he.a)(o).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:"".concat(e,"/v"),variable:Object(he.a)(o).variable(!1)});const s=Array.isArray(t)?t[a].tensor:t[e];if(null==s)return;const i=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,u=Object(ce.a)(Object(le.a)(i,this.beta1),Object(le.a)(s,1-this.beta1)),l=Object(le.a)(c,this.beta2),d=Object(ke.a)(s),h=Object(je.a)(l,d);i.assign(u),c.assign(h);const f=Object(ce.a)(Object(le.a)(Object(ue.a)(r,n),Object(ue.a)(u,Object(ce.a)(h,this.epsilon))),o);o.assign(f)}),this.iteration.assign(Object(ce.a)(this.iteration,1)),this.accBeta1.assign(Object(le.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(ie.d)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Object(ie.d)(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Ne.className="Adamax",ne(Ne);class Se extends be{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=p.a.registeredVariables[e];Object(ie.t)(()=>{const t=Object(ce.a)(Object(le.a)(this.c,r),a);a.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Object(ie.l)(Object(me.a)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Se.className="SGD",ne(Se);class Ie extends Se{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(me.a)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=p.a.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:"".concat(e,"/momentum"),variable:Object(ie.t)(()=>Object(he.a)(r).variable(t))}}const a=this.accumulations[n].variable,o=Array.isArray(t)?t[n].tensor:t[e];null!=o&&Object(ie.t)(()=>{let t;const e=Object(ce.a)(Object(le.a)(this.m,a),o);t=this.useNesterov?Object(ce.a)(Object(le.a)(this.c,Object(ce.a)(o,Object(le.a)(e,this.m))),r):Object(ce.a)(Object(le.a)(this.c,e),r),a.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(ie.d)(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Ie.className="Momentum",ne(Ie);class Te extends be{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=p.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=p.a.registeredVariables[e];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(e,"/rms"),variable:Object(ie.t)(()=>Object(he.a)(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(e,"/momentum"),variable:Object(ie.t)(()=>Object(he.a)(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(e,"/mg"),variable:Object(ie.t)(()=>Object(he.a)(r).variable(!1))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,s=this.accumulatedMoments[n].variable;Object(ie.t)(()=>{const t=Object(ce.a)(Object(le.a)(o,this.decay),Object(le.a)(Object(pe.a)(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,i=Object(ce.a)(Object(le.a)(e,this.decay),Object(le.a)(a,1-this.decay)),c=Object(ue.a)(Object(le.a)(a,this.learningRate),Object(de.a)(Object(xe.a)(t,Object(ce.a)(Object(pe.a)(i),this.epsilon)))),u=Object(ce.a)(Object(le.a)(s,this.momentum),c);o.assign(t),e.assign(i),s.assign(u);const l=Object(xe.a)(r,u);r.assign(l)}else{const t=Object(ce.a)(Object(le.a)(o,this.decay),Object(le.a)(Object(pe.a)(a),1-this.decay)),e=Object(ce.a)(Object(le.a)(s,this.momentum),Object(ue.a)(Object(le.a)(a,this.learningRate),Object(de.a)(Object(ce.a)(t,this.epsilon))));o.assign(t),s.assign(e);const n=Object(xe.a)(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(ie.d)(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(ie.d)(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Object(ie.d)(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Te.className="RMSProp",ne(Te);class Ee{static sgd(t){return new Se(t)}static momentum(t,e){return new Ie(t,e,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(t){return new Te(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new we(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new ge(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Ne(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(t){return new ve(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var Ce=n(126),Ae=n(146),_e=n(56);const Re={sgd:Ee.sgd,momentum:Ee.momentum,adadelta:Ee.adadelta,adagrad:Ee.adagrad,rmsprop:Ee.rmsprop,adamax:Ee.adamax,adam:Ee.adam};var De=n(241),Fe=n(107);function Me(t,e){const n=t[0].length;t.forEach((t,e)=>{N.b(t.length===n,()=>"Error in concat".concat(n,"D: rank of tensors[").concat(e,"] must be the same ")+"as the rank of the rest (".concat(n,")"))}),N.b(e>=0&&e<n,()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,"."));const r=t[0];t.forEach((t,a)=>{for(let o=0;o<n;o++)N.b(o===e||t[o]===r[o],()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(a,"] (").concat(t,") ")+"does not match the shape of the rest (".concat(r,") ")+"along the non-concatenated axis ".concat(a,"."))})}function Le(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var ze,Pe=n(44),Be=n(66);function Ve(t,e,n){let r=new Array;if(null==n&&null==e)return r;if(null==e)for(;r.length<t+n.length;)r.push(-1);else r=e.slice();if(null==n)return r;if(t+n.length!==r.length)throw new Error("rt input.shape and shape=".concat(e," are incompatible: rt input.rank = ").concat(t+n.length,", but shape.rank = ").concat(r.length));for(let a=1;a<n.length;++a){const o=n[a],s=r[r.length-n.length+a],i=r[s];if(o>=0)if(i>=0){if(i!==o)throw new Error("rt input.shape and shape=".concat(e," are incompatible: rt input.shape[").concat(a+t,"] = ").concat(o," but shape[").concat(a+t,"] = ").concat(i))}else r[s]=o}return r}function We(t){const e={FIRST_DIM_SIZE:ze.FIRST_DIM_SIZE,VALUE_ROWIDS:ze.VALUE_ROWIDS,ROW_LENGTHS:ze.ROW_LENGTHS,ROW_SPLITS:ze.ROW_SPLITS,ROW_LIMITS:ze.ROW_LIMITS,ROW_STARTS:ze.ROW_STARTS},n=[];for(const r of t){if(!(r in e))break;n.push(e[r])}return n}function Ue(t){return 0===t.length?0:t[0]===ze.FIRST_DIM_SIZE?t.length-1:t.length}function Ge(t,e){if(null==t||null==e)return;const n=t.length,r=e.length;if(n>=r)throw new Error("defaultValue.shape=".concat(t," and ragged tensor flatValues.shape=").concat(e,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(r,")"));for(let a=0;a<Math.min(n,r-1);++a){const n=t[a],r=e[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error("defaultValue.shape=".concat(t,", and ragged tensor input flatValues.shape=").concat(e," are incompatible: defaultValue.shape[").concat(a-t.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(a-t.length,"] = ").concat(r))}}!function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"}(ze||(ze={}));const He=30;function qe(t){return t<=He?t:Object(N.G)(t,Math.floor(Math.sqrt(t)))}function Ke(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function Xe(t,e,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function Ye(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<t;++r)r>=2*e+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Qe(t,e,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(t[0]/n):a.push(t[0]*n);for(let o=1;o<t.length;++o)o<=e.length?r?a.push(e[o-1]*t[o]):a.push(t[o]/e[o-1]):a.push(t[o]);return a}function Je(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Ze(t,e,n){const r=t.slice(0,1);for(let a=0;a<n;++a)r.push(t[a+1]-e[a][0]-e[a][1]);return r}const $e=1.7580993408473768,tn=1.0507009873554805,en=.3275911,nn=.254829592,rn=-.284496736,an=1.421413741,on=-1.453152027,sn=1.061405429;var cn=n(101);function un(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(t.length,", imag: ").concat(e.length,"."));const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function ln(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function dn(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=0;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function pn(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=2;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function hn(t,e){return{real:t[2*e],imag:t[2*e+1]}}function fn(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function mn(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const o=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(o),r[a]=Math.sin(o)}return{real:n,imag:r}}function bn(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}const gn=/->/g;function yn(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(gn,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat("->",'").'));const[r,a]=t.split("->");Object(N.b)(-1===r.indexOf("..."),()=>'The ellipsis notation ("'.concat("...",'") is not supported yet.'));const o=r.split(","),s=o.length;if(e!==s)throw new Error("Expected ".concat(s," input tensors, received ").concat(e));if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<a.length;++d){const t=a[d];if(!o.some(e=>-1!==e.indexOf(t)))throw new Error("Output subscripts contain the label ".concat(t," ")+"not present in the input subscripts.");-1===i.indexOf(t)&&i.push(t)}for(let d=0;d<r.length;++d){const t=r[d];-1===i.indexOf(t)&&","!==t&&i.push(t)}const c=new Array(o.length);for(let d=0;d<s;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error("Found duplicate axes in input component ".concat(o[d],". ")+"Support for duplicate axes in input is not implemented yet.");c[d]=[];for(let t=0;t<o[d].length;++t)c[d].push(i.indexOf(o[d][t]))}const u=i.length,l=[];for(let d=a.length;d<u;++d)l.push(d);return{allDims:i,summedDims:l,idDims:c}}function vn(t,e){let n=new Array(t);n.fill(-1);for(let a=0;a<e.length;++a)n[e[a]]=a;const r=[];for(let a=0;a<t;++a)-1===n[a]&&r.push(a);return n=n.filter(t=>-1!==t),{permutationIndices:n,expandDims:r}}function On(t,e,n){const r=new Array(t);for(let a=0;a<n.length;++a){const t=n[a].shape;for(let n=0;n<e[a].length;++n)void 0===r[e[a][n]]?r[e[a][n]]=t[n]:Object(N.b)(r[e[a][n]]===t[n],()=>"Expected dimension ".concat(r[e[a][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(t),", ")+"but got dimension ".concat(t[n]))}}function xn(t,e){const n=t,r=[];let a=0;0===t.length&&n.push(-1),a=t.length+1;for(let s=0;s<a;++s)r.push([]);const o=[];for(let s=0;s<n.length;++s){const t=kn(e,n[s]);for(const e of t)-1===o.indexOf(e)&&(r[s].push(e),o.push(e))}return{path:n,steps:r}}function wn(t){return t.every((t,e)=>t===e)}function kn(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function jn(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof e)Object(N.b)(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{const a=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Object(N.b)(a<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(-1!==o){const r=e.reduce((t,e)=>e>0?t+e:t);e[o]=t.shape[n]-r}Object(N.b)(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}function Nn(t){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(t)}function Sn(t,e){return"indices(".concat(t,", 0) is invalid: ").concat(e," < 0")}function In(t,e,n){return"indices(".concat(t,", 0) is invalid: ").concat(e," >= ").concat(n)}function Tn(t,e){return"only one output dimension may be -1, not both ".concat(t," and ").concat(e)}function En(t,e){return"size ".concat(t," must be non-negative, not ").concat(e)}function Cn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function An(t,e){const n=Object(N.O)(t),r=Object(N.O)(e);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(r,". inputShape=").concat(t," outputShape= ").concat(e)}function _n(t,e){const n=Object(N.O)(t),r=Object(N.O)(e);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(r,". inputShape=").concat(t," outputShape=").concat(e)}function Rn(){return"segment ids must be >= 0"}function Dn(){return"segment ids are not increasing"}function Fn(t,e){return"Segment id ".concat(t," out of range [0, ").concat(e,"), possibly because segmentIds input is not sorted.")}function Mn(t,e,n){return"Bad: indices[".concat(t,"] == ").concat(e," out of range [0, ").concat(n,")")}function Ln(t,e){let n,r=!1;for(t<=He?(n=t,r=!0):n=Object(N.G)(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Object(N.G)(t,n+1);return n}function zn(t,e,n){const r=[],a=t.length;for(let o=0;o<a;o++)o!==e?r.push(t[o]):r.push(n);return r}function Pn(t,e,n,r){const a=e.shape.length,o=t.shape.length;if(0!==r&&(r<-a||r>a))throw new Error("Expect batchDims in the range of [-".concat(a,", ").concat(a,"], but got ").concat(r));if(r<0&&(r+=a),r>o)throw new Error("batchDims (".concat(r,") must be less than rank(x) (\n    ").concat(o,")."));if(n<r)throw new Error("batchDims (".concat(r,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<r;++d)if(t.shape[d]!==e.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(t.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(e.shape[d],"."));const s=t.shape[n],i=[];let c=1,u=1,l=1;for(let d=0;d<r;++d)i.push(t.shape[d]),c*=t.shape[d];for(let d=r;d<n;d++)i.push(t.shape[d]),u*=t.shape[d];for(let d=r;d<a;d++)i.push(e.shape[d]);for(let d=n+1;d<o;d++)i.push(t.shape[d]),l*=t.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:s,outputShape:i}}function Bn(t){try{return t.map(t=>Object(oe.decodeString)(t))}catch(qn){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(qn))}}function Vn(t){return t.map(t=>Object(oe.encodeString)(t))}var Wn=n(190),Un=n(104),Gn=n(200),Hn=n(182)},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(8),a=n(11),o=n(34),s=n(2),i=n(6);const c=Object(i.b)({mul_:function(t,e){let n=Object(s.a)(t,"a","mul"),i=Object(s.a)(e,"b","mul");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.Zb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({cast_:function(t,e){const n=Object(o.a)(t,"x","cast");if(!s.B(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:e};return r.a.runKernel(a.w,i,c)}})},function(t,e,n){"use strict";function r(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,i(t,e,n)}function a(t,e){if(t.length!==e.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(t.length)+"Second array length was ".concat(e.length));let n=t.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(t,n,r),i(e,n,r)}function o(t,e,n){return Math.max(t,Math.min(e,n))}function s(t){return t%2===0?t:t+1}function i(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function c(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function u(t,e){const n=Math.random();return e*n+(1-n)*t}function l(t,e){let n=0;for(let r=0;r<t.length;r++){const a=Number(t[r])-Number(e[r]);n+=a*a}return n}function d(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function p(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(g(t,e),()=>n+" Shapes ".concat(t," and ").concat(e," must match"))}function h(t){d(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function f(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e&&(e=[]),Array.isArray(t)||_(t)&&!n)for(let r=0;r<t.length;++r)f(t[r],e,n);else e.push(t);return e}function m(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function b(t){return 0===t.length}function g(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function y(t){return t%1===0}function v(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function O(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function x(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return r(e),e}function w(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function k(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t=>0,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:setTimeout;return new Promise((a,o)=>{let s=0;const i=()=>{if(t())return void a();s++;const c=e(s);null!=n&&s>=n?o():r(i,c)};i()})}function j(t,e){let n=1,r=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(-1===t[o]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(r," and dim ").concat(o));r=o}else if(t[o]<0)throw Error("Shapes can not be < 0. Found ".concat(t[o]," at dim ").concat(o));if(-1===r){if(e>0&&e!==n)throw Error("Size(".concat(e,") must match the product of shape ").concat(t));return t}if(0===n)throw Error("Cannot infer the missing size in [".concat(t,"] when ")+"there are 0 elements");if(e%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(e," / ").concat(n));const a=t.slice();return a[r]=e/n,a}function N(t,e){const n=e.length;return d((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(t)),d(t.every(t=>y(t)),()=>"All values in axis param must be integers but "+"got axis ".concat(t)),t.map(t=>t<0?n+t:t)}function S(t,e){const n=[],r=[],a=null!=e&&Array.isArray(e)&&0===e.length,o=null==e||a?null:N(e,t).sort();let s=0;for(let i=0;i<t.length;++i){if(null!=o){if(o[s]===i&&1!==t[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(t[i],"' is not 1"));(null==o[s]||o[s]>i)&&1===t[i]&&(n.push(t[i]),r.push(i)),o[s]<=i&&s++}1!==t[i]&&(n.push(t[i]),r.push(i))}return{newShape:n,keptDims:r}}function I(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type ".concat(t));n=new Uint8Array(e)}return n}function T(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));n=new Array(e)}return n}function E(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(r,"."))}}function C(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function A(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function _(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function R(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}function D(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function F(t){return"string"===typeof t||t instanceof String}function M(t){return"boolean"===typeof t}function L(t){return"number"===typeof t}function z(t){return Array.isArray(t)?z(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":L(t)?"float32":F(t)?"string":M(t)?"bool":"float32"}function P(t){return!!(t&&t.constructor&&t.call&&t.apply)}function B(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function V(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function W(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=new Array;if(1===e.length){const o=e[0]*(r?2:1);for(let e=0;e<o;e++)a[e]=n[t+e]}else{const o=e[0],s=e.slice(1),i=s.reduce((t,e)=>t*e)*(r?2:1);for(let e=0;e<o;e++)a[e]=W(t+e*i,s,n,r)}return a}function U(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===t.length)return e[0];const r=t.reduce((t,e)=>t*e)*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length).concat(n?" for a complex tensor":"","."));return W(0,t,e,n)}function G(t,e){const n=H(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function H(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function q(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return U(t,new Float32Array(n));if("int32"===e)return U(t,new Int32Array(n));if("bool"===e)return U(t,new Uint8Array(n));throw new Error("Unknown data type ".concat(e))}function K(t){t.forEach(e=>{d(Number.isInteger(e)&&e>=0,()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"]."))})}function X(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let a=0;a<t.length-1;++a)r+=n[a]*t[a];return r}function Y(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(t/n[a]),t-=r[a]*n[a];return r[r.length-1]=t,r}function Q(t){return t&&t.then&&"function"===typeof t.then}n.d(e,"M",(function(){return r})),n.d(e,"N",(function(){return a})),n.d(e,"i",(function(){return o})),n.d(e,"H",(function(){return s})),n.d(e,"S",(function(){return i})),n.d(e,"R",(function(){return c})),n.d(e,"J",(function(){return u})),n.d(e,"l",(function(){return l})),n.d(e,"b",(function(){return d})),n.d(e,"e",(function(){return p})),n.d(e,"d",(function(){return h})),n.d(e,"m",(function(){return f})),n.d(e,"O",(function(){return m})),n.d(e,"y",(function(){return b})),n.d(e,"a",(function(){return g})),n.d(e,"v",(function(){return y})),n.d(e,"T",(function(){return v})),n.d(e,"P",(function(){return O})),n.d(e,"k",(function(){return x})),n.d(e,"L",(function(){return w})),n.d(e,"K",(function(){return k})),n.d(e,"s",(function(){return j})),n.d(e,"I",(function(){return N})),n.d(e,"Q",(function(){return S})),n.d(e,"o",(function(){return I})),n.d(e,"n",(function(){return T})),n.d(e,"h",(function(){return E})),n.d(e,"B",(function(){return C})),n.d(e,"p",(function(){return A})),n.d(e,"A",(function(){return _})),n.d(e,"g",(function(){return R})),n.d(e,"f",(function(){return D})),n.d(e,"z",(function(){return F})),n.d(e,"t",(function(){return M})),n.d(e,"w",(function(){return L})),n.d(e,"r",(function(){return z})),n.d(e,"u",(function(){return P})),n.d(e,"G",(function(){return B})),n.d(e,"j",(function(){return V})),n.d(e,"U",(function(){return U})),n.d(e,"D",(function(){return G})),n.d(e,"F",(function(){return H})),n.d(e,"E",(function(){return q})),n.d(e,"c",(function(){return K})),n.d(e,"C",(function(){return X})),n.d(e,"q",(function(){return Y})),n.d(e,"x",(function(){return Q}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(7);const c=Object(i.a)({sub_:function(t,e){let n=Object(s.a)(t,"a","sub"),i=Object(s.a)(e,"b","sub");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.Oc,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(7);const c=Object(i.a)({add_:function(t,e){let n=Object(s.a)(t,"a","add"),i=Object(s.a)(e,"b","add");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.d,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(150),c=n(7);const u=Object(c.a)({div_:function(t,e){let n=Object(s.a)(t,"a","div"),c=Object(s.a)(e,"b","div");if([n,c]=Object(o.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return Object(i.a)(n,c);const u={a:n,b:c};return r.a.runKernel(a.jc,u,{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(12),a=n(118);function o(t,e){if((Object(r.A)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(r.A)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(t,[],[],e)}},function(t,e,n){"use strict";function r(t,e){const n=t.length,r=[];for(let a=0;a<n;a++){const o=n-1-a,s=t[o]||1;(e[e.length-1-a]||1)>1&&1===s&&r.unshift(o)}return r}function a(t,e){const n=[];for(let r=0;r<e.length;r++){const a=t[t.length-r-1],o=e.length-r-1,s=e[o];(null==a||1===a&&s>1)&&n.unshift(o)}return n}function o(t,e){const n=[],r=Math.max(t.length,e.length);for(let a=0;a<r;a++){let r=t[t.length-a-1];null==r&&(r=1);let o=e[e.length-a-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o){const n="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(n)}n.unshift(r)}}return n}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return a})),n.d(e,"a",(function(){return o}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return a.a})),n.d(e,"b",(function(){return o.a})),n.d(e,"c",(function(){return s.a})),n.d(e,"d",(function(){return i.a})),n.d(e,"e",(function(){return c.a})),n.d(e,"f",(function(){return u.a})),n.d(e,"g",(function(){return l.a})),n.d(e,"h",(function(){return m})),n.d(e,"i",(function(){return b})),n.d(e,"j",(function(){return g})),n.d(e,"k",(function(){return y.a})),n.d(e,"l",(function(){return v.a})),n.d(e,"m",(function(){return O.a})),n.d(e,"n",(function(){return x.a})),n.d(e,"o",(function(){return w.a})),n.d(e,"p",(function(){return k})),n.d(e,"q",(function(){return j})),n.d(e,"r",(function(){return N})),n.d(e,"s",(function(){return S})),n.d(e,"t",(function(){return I.a})),n.d(e,"u",(function(){return T.a})),n.d(e,"v",(function(){return E.a})),n.d(e,"w",(function(){return C.a})),n.d(e,"x",(function(){return A.a})),n.d(e,"y",(function(){return _.a})),n.d(e,"A",(function(){return R.a})),n.d(e,"B",(function(){return D.a})),n.d(e,"C",(function(){return F.a})),n.d(e,"D",(function(){return z})),n.d(e,"E",(function(){return P.a})),n.d(e,"F",(function(){return B.a})),n.d(e,"H",(function(){return V.a})),n.d(e,"I",(function(){return W.a})),n.d(e,"J",(function(){return U.a})),n.d(e,"L",(function(){return G.a})),n.d(e,"N",(function(){return H.a})),n.d(e,"O",(function(){return q.a})),n.d(e,"P",(function(){return K.a})),n.d(e,"Q",(function(){return X.a})),n.d(e,"R",(function(){return Y.a})),n.d(e,"S",(function(){return Q.a})),n.d(e,"T",(function(){return J.a})),n.d(e,"U",(function(){return Z.a})),n.d(e,"V",(function(){return $.a})),n.d(e,"W",(function(){return tt.a})),n.d(e,"X",(function(){return at})),n.d(e,"Y",(function(){return ot.a})),n.d(e,"Z",(function(){return st.a})),n.d(e,"ab",(function(){return it.a})),n.d(e,"bb",(function(){return ct.a})),n.d(e,"cb",(function(){return ut.a})),n.d(e,"db",(function(){return lt.a})),n.d(e,"eb",(function(){return dt.a})),n.d(e,"fb",(function(){return pt.a})),n.d(e,"gb",(function(){return ht.a})),n.d(e,"hb",(function(){return mt})),n.d(e,"ib",(function(){return bt.a})),n.d(e,"jb",(function(){return gt.a})),n.d(e,"kb",(function(){return M.a})),n.d(e,"lb",(function(){return yt.a})),n.d(e,"mb",(function(){return vt.a})),n.d(e,"nb",(function(){return Ot.a})),n.d(e,"ob",(function(){return xt.a})),n.d(e,"pb",(function(){return wt.a})),n.d(e,"qb",(function(){return kt.a})),n.d(e,"rb",(function(){return jt})),n.d(e,"sb",(function(){return Nt})),n.d(e,"tb",(function(){return St})),n.d(e,"ub",(function(){return It})),n.d(e,"vb",(function(){return Tt.a})),n.d(e,"wb",(function(){return Et.a})),n.d(e,"xb",(function(){return Ct.a})),n.d(e,"yb",(function(){return At.a})),n.d(e,"zb",(function(){return _t.a})),n.d(e,"Ab",(function(){return Rt.a})),n.d(e,"Bb",(function(){return rt.a})),n.d(e,"Cb",(function(){return Dt.a})),n.d(e,"Db",(function(){return Ft.a})),n.d(e,"Eb",(function(){return Mt.a})),n.d(e,"Fb",(function(){return Lt.a})),n.d(e,"Gb",(function(){return Pt})),n.d(e,"Hb",(function(){return L.a})),n.d(e,"Jb",(function(){return Bt.a})),n.d(e,"Kb",(function(){return Vt.a})),n.d(e,"Lb",(function(){return Ut})),n.d(e,"Mb",(function(){return Gt.a})),n.d(e,"Nb",(function(){return Ht.a})),n.d(e,"Ob",(function(){return qt.a})),n.d(e,"Ib",(function(){return Kt.a})),n.d(e,"z",(function(){return Yt})),n.d(e,"K",(function(){return Ke})),n.d(e,"M",(function(){return Xe})),n.d(e,"G",(function(){return r}));var r={};n.r(r),n.d(r,"conv2d",(function(){return ce})),n.d(r,"depthwiseConv2d",(function(){return de})),n.d(r,"matMul",(function(){return he}));var a=n(67),o=n(23),s=n(203),i=n(204),c=n(205),u=n(149),l=n(243),d=n(5),p=n(12),h=n(115),f=n(7);const m=Object(f.a)({batchNorm2d_:function(t,e,n,r,a,o){const s=Object(d.a)(t,"x","batchNorm"),i=Object(d.a)(e,"mean","batchNorm"),c=Object(d.a)(n,"variance","batchNorm");let u,l;return null!=a&&(u=Object(d.a)(a,"scale","batchNorm")),null!=r&&(l=Object(d.a)(r,"offset","batchNorm")),p.b(2===s.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(s.rank,".")),p.b(2===i.rank||1===i.rank,()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,".")),p.b(2===c.rank||1===c.rank,()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&p.b(2===u.rank||1===u.rank,()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&p.b(2===l.rank||1===l.rank,()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,".")),Object(h.a)(s,i,c,l,u,o)}});const b=Object(f.a)({batchNorm3d_:function(t,e,n,r,a,o){const s=Object(d.a)(t,"x","batchNorm"),i=Object(d.a)(e,"mean","batchNorm"),c=Object(d.a)(n,"variance","batchNorm");let u,l;return null!=a&&(u=Object(d.a)(a,"scale","batchNorm")),null!=r&&(l=Object(d.a)(r,"offset","batchNorm")),p.b(3===s.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(s.rank,".")),p.b(3===i.rank||1===i.rank,()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,".")),p.b(3===c.rank||1===c.rank,()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&p.b(3===u.rank||1===u.rank,()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&p.b(3===l.rank||1===l.rank,()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,".")),Object(h.a)(s,i,c,l,u,o)}});const g=Object(f.a)({batchNorm4d_:function(t,e,n,r,a,o){const s=Object(d.a)(t,"x","batchNorm"),i=Object(d.a)(e,"mean","batchNorm"),c=Object(d.a)(n,"variance","batchNorm");let u,l;return null!=a&&(u=Object(d.a)(a,"scale","batchNorm")),null!=r&&(l=Object(d.a)(r,"offset","batchNorm")),p.b(4===s.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(s.rank,".")),p.b(4===i.rank||1===i.rank,()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,".")),p.b(4===c.rank||1===c.rank,()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&p.b(4===u.rank||1===u.rank,()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&p.b(4===l.rank||1===l.rank,()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,".")),Object(h.a)(s,i,c,l,u,o)}});var y=n(75),v=n(20),O=n(244),x=n(94),w=n(52);const k=Object(f.a)({concat1d_:function(t){return Object(w.a)(t,0)}});const j=Object(f.a)({concat2d_:function(t,e){return Object(w.a)(t,e)}});const N=Object(f.a)({concat3d_:function(t,e){return Object(w.a)(t,e)}});const S=Object(f.a)({concat4d_:function(t,e){return Object(w.a)(t,e)}});var I=n(206),T=n(90),E=n(207),C=n(245),A=n(108),_=n(24),R=n(151),D=n(109),F=n(86),M=n(13),L=n(119);const z=Object(f.a)({eye_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==e&&(e=t);const a=Object(y.a)([t,e],r),o=t<=e?t:e;for(let i=0;i<o;++i)a.set(1,i,i);const s=Object(M.a)(a.toTensor(),[t,e]);if(null==n)return s;if(1===n.length)return Object(L.a)(Object(F.a)(s,0),[n[0],1,1]);if(2===n.length)return Object(L.a)(Object(F.a)(Object(F.a)(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(L.a)(Object(F.a)(Object(F.a)(Object(F.a)(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var P=n(152),B=n(153),V=n(154),W=n(70),U=n(78),G=n(155),H=n(98),q=n(246),K=n(84),X=n(95),Y=n(156),Q=n(247),J=n(110),Z=n(124),$=n(141),tt=n(130),et=n(60),nt=n(37),rt=n(22);const at=Object(f.a)({moments_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t=Object(d.a)(t,"x","moments");const r=Object(p.I)(e,t.shape),a=Object(Z.a)(t,r,n);let o=a.shape;n||(o=Object(et.e)(a.shape,r));const s=Object(nt.a)(Object(rt.a)(Object(v.a)(t,"float32"),Object(M.a)(a,o))),i=Object(Z.a)(s,r,n);return{mean:a,variance:i}}});var ot=n(14),st=n(49),it=n(131),ct=n(208),ut=n(111),lt=n(248),dt=n(157),pt=n(76),ht=n(158),ft=n(175);const mt=Object(f.a)({randomNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error("Unsupported data type ".concat(r));const o=new ft.a(e,n,r,!1,a),s=Object(y.a)(t,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});var bt=n(209),gt=n(112),yt=n(125),vt=n(25),Ot=n(210),xt=n(211),wt=n(159),kt=n(45);const jt=Object(f.a)({slice1d_:function(t,e,n){const r=Object(d.a)(t,"x","slice1d");return p.b(1===r.rank,()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(r.rank," tensor")),Object(kt.a)(r,[e],[n])}});const Nt=Object(f.a)({slice2d_:function(t,e,n){const r=Object(d.a)(t,"x","slice2d");return p.b(2===r.rank,()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(r.rank," tensor")),Object(kt.a)(r,e,n)}});const St=Object(f.a)({slice3d_:function(t,e,n){const r=Object(d.a)(t,"x","slice3d");return p.b(3===r.rank,()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(r.rank," tensor")),Object(kt.a)(r,e,n)}});const It=Object(f.a)({slice4d_:function(t,e,n){const r=Object(d.a)(t,"x","slice4d");return p.b(4===r.rank,()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(r.rank," tensor")),Object(kt.a)(r,e,n)}});var Tt=n(249),Et=n(212),Ct=n(99),At=n(59),_t=n(160),Rt=n(85),Dt=n(28),Ft=n(250),Mt=n(173),Lt=n(100),zt=n(118);function Pt(t,e,n){if(Object(p.d)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(d.c)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(zt.a)(t,e,r,n)}var Bt=n(251),Vt=n(113),Wt=n(9);function Ut(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Wt.a.makeVariable(t,e,n,r)}var Gt=n(58),Ht=n(91),qt=n(31),Kt=n(80),Xt=n(10);const Yt=Object(f.a)({dropout_:function(t,e,n,r){const a=Object(d.a)(t,"x","dropout");if(p.b("float32"===a.dtype,()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(a.dtype," tensor instead.")),p.b(e>=0&&e<1,()=>"rate must be a float in the range [0, 1), but got ".concat(e,".")),0===e)return t instanceof Xt.a?a.clone():a;const s=function(t,e){if(null==e)return t.shape.slice();if(p.a(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(a,n),i=1-e,c=Object(_.a)(Object(B.a)(Object(o.a)(Object(bt.a)(s,0,1,"float32",r),i)),i);return Object(ot.a)(a,c)}});var Qt=n(162),Jt=n(161),Zt=n(143),$t=n(213),te=n(55),ee=n(4),ne=n(36),re=n(26),ae=n(177),oe=n(174),se=n(46),ie=n(68);const ce=Object(f.a)({fusedConv2d_:function(t){let{x:e,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:c,bias:u,activation:l="linear",preluActivationWeights:h,leakyreluAlpha:f}=t;if(l=l||"linear",!1===Object(ie.d)(Wt.a.state.gradientDepth,l)){let t=Object(T.a)(e,n,r,a,s,i,c);return null!=u&&(t=Object(o.a)(t,u)),Object(ie.a)(t,l,h,f)}const m=Object(d.a)(e,"x","conv2d"),b=Object(d.a)(n,"filter","conv2d");let g=m,y=!1;3===m.rank&&(y=!0,g=Object(M.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),p.b(4===g.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(g.rank,".")),p.b(4===b.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(b.rank,".")),null!=c&&p.b(p.v(a),()=>"Error in fused conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(c," but got pad ").concat(a,".")),p.b(g.shape[3]===b.shape[2],()=>"Error in conv2d: depth of input (".concat(g.shape[3],") must match ")+"input depth for filter ".concat(b.shape[2],".")),p.b(se.h(r,i),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(i,"'")),p.b("NHWC"===s,()=>"Error in conv2d: got dataFormat of ".concat(s," but only NHWC is currently supported."));const v=se.a(g.shape,b.shape,r,i,a,c);let O,x;null!=u&&(O=Object(d.a)(u,"bias","fused conv2d"),[O]=Object(ne.makeTypesMatch)(O,m),re.a(v.outShape,O.shape)),null!=h&&(x=Object(d.a)(h,"prelu weights","fused conv2d"));const w=(t,e)=>{const[n,o,s,c]=e,u=Object(ie.c)(t,s,l);p.b(se.i(i),()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(i,"'"));const d=[Object(oe.a)(o.shape,u,n,r,a),Object(ae.a)(o,u,n.shape,r,a)];if(null!=c){const t=Object(ie.b)(c,u);d.push(t)}return d},k={x:g,filter:b,bias:O,preluActivationWeights:x},j={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:c,activation:l,leakyreluAlpha:f};if(null==u){return Object(te.a)((t,e,n)=>{let r=Wt.a.runKernel(ee.jb,k,j);return n([e,t,r]),y&&(r=Object(M.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}})(g,b)}return Object(te.a)((t,e,n,r)=>{let a=Wt.a.runKernel(ee.jb,k,j);return r([e,t,a,n]),y&&(a=Object(M.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}})(g,b,O)}});var ue=n(237),le=n(236);const de=Object(f.a)({fusedDepthwiseConv2d_:function(t){let{x:e,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:c,bias:u,activation:l="linear",preluActivationWeights:h,leakyreluAlpha:f}=t;if(!1===Object(ie.d)(Wt.a.state.gradientDepth,l)){let t=Object(A.a)(e,n,r,a,s,i,c);return null!=u&&(t=Object(o.a)(t,u)),Object(ie.a)(t,l,h,f)}const m=Object(d.a)(e,"x","depthwiseConv2d"),b=Object(d.a)(n,"filter","depthwiseConv2d");let g=m,y=!1;3===m.rank&&(y=!0,g=Object(M.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),p.b(4===g.rank,()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(g.rank,".")),p.b(4===b.rank,()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(b.rank,".")),p.b(g.shape[3]===b.shape[2],()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(g.shape[3],") must match the inChannels dimension in ")+"filter ".concat(b.shape[2],".")),null==i&&(i=[1,1]),p.b(se.h(r,i),()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(r," and dilations '").concat(i,"'")),null!=c&&p.b(p.v(a),()=>"Error in fused depthwiseConv2d: pad must be an integer when "+"using dimRoundingMode ".concat(c," but got pad ").concat(a,"."));const v=se.a(g.shape,b.shape,r,i,a,c,!0);let O,x;null!=u&&(O=Object(d.a)(u,"bias","fused conv2d"),[O]=Object(ne.makeTypesMatch)(O,m),re.a(v.outShape,O.shape)),null!=h&&(x=Object(d.a)(h,"prelu weights","fused depthwiseConv2d"));const w=(t,e)=>{p.b(se.i(i),()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'"));const[n,o,s,u]=e,d=Object(ie.c)(t,s,l),h=Object(le.a)(o.shape,d,n,r,a,i,c),f=Object(ue.a)(o,d,n.shape,r,a,i,c);if(null!=u){return[h,f,Object(ie.b)(O,d)]}return[h,f]},k={x:g,filter:b,bias:O,preluActivationWeights:x},j={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:c,activation:l,leakyreluAlpha:f};if(null==u){return Object(te.a)((t,e,n)=>{let r=Wt.a.runKernel(ee.kb,k,j);return n([e,t,r]),y&&(r=Object(M.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}})(g,b)}return Object(te.a)((t,e,n,r)=>{let a=Wt.a.runKernel(ee.kb,k,j);return r([e,t,a,n]),y&&(a=Object(M.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}})(g,b,O)}});var pe=n(48);const he=Object(f.a)({fusedMatMul_:function(t){let{a:e,b:n,transposeA:r=!1,transposeB:a=!1,bias:s,activation:i="linear",preluActivationWeights:c,leakyreluAlpha:u}=t;if(!1===Object(ie.d)(Wt.a.state.gradientDepth,i)){let t=Object(pe.a)(e,n,r,a);return null!=s&&(t=Object(o.a)(t,s)),Object(ie.a)(t,i,c,u)}let l=Object(d.a)(e,"a","fused matMul"),h=Object(d.a)(n,"b","fused matMul");[l,h]=Object(ne.makeTypesMatch)(l,h);const f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=a?h.shape[h.rank-1]:h.shape[h.rank-2],b=r?l.shape[l.rank-1]:l.shape[l.rank-2],g=a?h.shape[h.rank-2]:h.shape[h.rank-1],y=l.shape.slice(0,-2),v=h.shape.slice(0,-2),O=p.N(y),x=p.N(v);p.b(l.rank>=2&&h.rank>=2&&l.rank===h.rank,()=>"Error in fused matMul: inputs must have the same rank of at "+"least 2, got ranks ".concat(l.rank," and ").concat(h.rank,".")),p.b(p.a(y,v),()=>"Error in fused matMul: outer dimensions (".concat(y,") and (")+"".concat(v,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(h.shape," must match.")),p.b(f===m,()=>"Error in fused matMul: inner shapes (".concat(f,") and (")+"".concat(m,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(h.shape," and transposeA=").concat(r)+" and transposeB=".concat(a," must match."));const w=l.shape.slice(0,-2).concat([b,g]),k=r?Object(M.a)(l,[O,f,b]):Object(M.a)(l,[O,b,f]),j=a?Object(M.a)(h,[x,g,m]):Object(M.a)(h,[x,m,g]);let N,S;null!=s&&(N=Object(d.a)(s,"bias","fused matMul"),[N]=Object(ne.makeTypesMatch)(N,l),re.a(w,N.shape)),null!=c&&(S=Object(d.a)(c,"prelu weights","fused matMul"));const I=(t,e)=>{const[n,o,c,u]=e,l=Object(ie.c)(Object(M.a)(t,c.shape),c,i);let d,p;if(r||a?!r&&a?(d=Object(pe.a)(l,o,!1,!1),p=Object(pe.a)(l,n,!0,!1)):r&&!a?(d=Object(pe.a)(o,l,!1,!0),p=Object(pe.a)(n,l,!1,!1)):(d=Object(pe.a)(o,l,!0,!0),p=Object(pe.a)(l,n,!0,!0)):(d=Object(pe.a)(l,o,!1,!0),p=Object(pe.a)(n,l,!0,!1)),null!=s){return[d,p,Object(ie.b)(u,l)]}return[d,p]},T={a:k,b:j,bias:N,preluActivationWeights:S},E={transposeA:r,transposeB:a,activation:i,leakyreluAlpha:u};if(null==s){return Object(te.a)((t,e,n)=>{const r=Wt.a.runKernel(ee.Zc,T,E);return n([t,e,r]),{value:Object(M.a)(r,w),gradFunc:I}})(k,j)}return Object(te.a)((t,e,n,r)=>{const a=Wt.a.runKernel(ee.Zc,T,E);return r([t,e,a,n]),{value:Object(M.a)(a,w),gradFunc:I}})(k,j,N)}});function fe(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function me(t,e,n){const r=1-t%2,a=new Float32Array(t);for(let o=0;o<t;++o){const s=2*Math.PI*o/(t+r-1);a[o]=e-n*Math.cos(s)}return Object(Lt.a)(a,"float32")}Object(f.a)({hammingWindow_:function(t){return me(t,.54,.46)}});const be=Object(f.a)({hannWindow_:function(t){return me(t,.5,.5)}});const ge=Object(f.a)({frame_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=0;const s=[];for(;o+e<=t.size;)s.push(Object(kt.a)(t,o,e)),o+=n;if(r)for(;o<t.size;){const r=o+e-t.size,i=Object(w.a)([Object(kt.a)(t,o,e-r),Object(P.a)([r],a)]);s.push(i),o+=n}return 0===s.length?Pt([],[0,e]):Object(M.a)(Object(w.a)(s),[s.length,e])}});Object(f.a)({stft_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:be;null==r&&(r=fe(e));const o=ge(t,e,n),s=Object(ot.a)(o,a(e)),i=[];for(let c=0;c<o.shape[0];c++)i.push(Object(Qt.a)(Object(kt.a)(s,[c,0],[1,e]),r));return Object(w.a)(i)}});const ye=Object(f.a)({cropAndResize_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=Object(d.a)(t,"image","cropAndResize"),i=Object(d.a)(e,"boxes","cropAndResize","float32"),c=Object(d.a)(n,"boxInd","cropAndResize","int32"),u=i.shape[0];p.b(4===s.rank,()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(s.rank,".")),p.b(2===i.rank&&4===i.shape[1],()=>"Error in cropAndResize: boxes must be have size [".concat(u,",4] ")+"but had shape ".concat(i.shape,".")),p.b(1===c.rank&&c.shape[0]===u,()=>"Error in cropAndResize: boxInd must be have size [".concat(u,"] ")+"but had shape ".concat(i.shape,".")),p.b(2===r.length,()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(r.length,".")),p.b(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was ".concat(r)),p.b("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was ".concat(a));const l={image:s,boxes:i,boxInd:c},h={method:a,extrapolationValue:o,cropSize:r},f=Wt.a.runKernel(ee.K,l,h);return f}});const ve=Object(f.a)({flipLeftRight_:function(t){const e=Object(d.a)(t,"image","flipLeftRight","float32");p.b(4===e.rank,()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,"."));const n={image:e};return Wt.a.runKernel(ee.eb,n,{})}});const Oe=Object(f.a)({rotateWithOffset_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=Object(d.a)(t,"image","rotateWithOffset","float32");p.b(4===a.rank,()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(a.rank,"."));const o={image:a},s={radians:e,fillValue:n,center:r},i=Wt.a.runKernel(ee.tc,o,s);return i}});function xe(t,e,n,r,a,o){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=t.shape[0];return n=Math.min(n,s),p.b(0<=r&&r<=1,()=>"iouThreshold must be in [0, 1], but was '".concat(r,"'")),p.b(2===t.rank,()=>"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'")),p.b(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1])),p.b(1===e.rank,()=>"scores must be a 1D tensor"),p.b(e.shape[0]===s,()=>"scores has incompatible shape with boxes. Expected ".concat(s,", ")+"but was ".concat(e.shape[0])),p.b(0<=o&&o<=1,()=>"softNmsSigma must be in [0, 1], but was '".concat(o,"'")),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:o}}const we=Object(f.a)({nonMaxSuppression_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=Object(d.a)(t,"boxes","nonMaxSuppression"),s=Object(d.a)(e,"scores","nonMaxSuppression"),i=xe(o,s,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return Wt.a.runKernel(ee.Wb,{boxes:o,scores:s},c)}});var ke=n(105);const je=async function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=Object(d.a)(t,"boxes","nonMaxSuppressionAsync"),s=Object(d.a)(e,"scores","nonMaxSuppressionAsync"),i=xe(o,s,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const c=await Promise.all([o.data(),s.data()]),u=c[0],l=c[1],{selectedIndices:p}=Object(ke.a)(u,l,n,r,a);return o!==t&&o.dispose(),s!==e&&s.dispose(),Object(Lt.a)(p,"int32")};const Ne=Object(f.a)({nonMaxSuppressionWithScore_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=Object(d.a)(t,"boxes","nonMaxSuppression"),i=Object(d.a)(e,"scores","nonMaxSuppression"),c=xe(s,i,n,r,a,o);n=c.maxOutputSize,r=c.iouThreshold,a=c.scoreThreshold,o=c.softNmsSigma;const u={boxes:s,scores:i},l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:o},p=Wt.a.runKernel(ee.Yb,u,l);return{selectedIndices:p[0],selectedScores:p[1]}}});const Se=async function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=Object(d.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(d.a)(e,"scores","nonMaxSuppressionAsync"),c=xe(s,i,n,r,a,o);n=c.maxOutputSize,r=c.iouThreshold,a=c.scoreThreshold,o=c.softNmsSigma;const u=await Promise.all([s.data(),i.data()]),l=u[0],p=u[1],{selectedIndices:h,selectedScores:f}=Object(ke.c)(l,p,n,r,a,o);return s!==t&&s.dispose(),i!==e&&i.dispose(),{selectedIndices:Object(Lt.a)(h,"int32"),selectedScores:Object(Lt.a)(f)}};const Ie=Object(f.a)({nonMaxSuppressionPadded_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=Object(d.a)(t,"boxes","nonMaxSuppression"),i=Object(d.a)(e,"scores","nonMaxSuppression"),c=xe(s,i,n,r,a,null),u=c.maxOutputSize,l=c.iouThreshold,p=c.scoreThreshold,h={boxes:s,scores:i},f={maxOutputSize:u,iouThreshold:l,scoreThreshold:p,padToMaxOutputSize:o},m=Wt.a.runKernel(ee.Xb,h,f);return{selectedIndices:m[0],validOutputs:m[1]}}});const Te=async function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=Object(d.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(d.a)(e,"scores","nonMaxSuppressionAsync"),c=xe(s,i,n,r,a,null),u=c.maxOutputSize,l=c.iouThreshold,p=c.scoreThreshold,[h,f]=await Promise.all([s.data(),i.data()]),{selectedIndices:m,validOutputs:b}=Object(ke.b)(h,f,u,l,p,o);return s!==t&&s.dispose(),i!==e&&i.dispose(),{selectedIndices:Object(Lt.a)(m,"int32"),validOutputs:Object(vt.a)(b,"int32")}};var Ee=n(235),Ce=n(234),Ae=n(79),_e=n(185);const Re=Object(f.a)({bandPart_:function(t,e,n){Object(p.b)(e%1===0,()=>"bandPart(): numLower must be an integer, got ".concat(e,".")),Object(p.b)(n%1===0,()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."));const r=Object(d.a)(t,"a","bandPart");Object(p.b)(r.rank>=2,()=>"bandPart(): Rank must be at least 2, got ".concat(r.rank,"."));const a=r.shape,[o,s]=r.shape.slice(-2);if(!(e<=o))throw new Error("bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(o,")."));if(!(n<=s))throw new Error("bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(s,")."));e<0&&(e=o),n<0&&(n=s);const i=Object(M.a)(Object(_e.a)(0,o,1,"int32"),[-1,1]),c=Object(_e.a)(0,s,1,"int32"),u=Object(rt.a)(i,c),l=Object(K.a)(Object(Ae.a)(u,Object(vt.a)(+e,"int32")),Object(U.a)(u,Object(vt.a)(-n,"int32"))),h=Object(Ht.a)([o,s],r.dtype);return Object(M.a)(Object(Rt.a)(Object(Vt.a)(Object(M.a)(r,[-1,o,s])).map(t=>Object(Gt.a)(l,t,h))),a)}});var De=n(164);const Fe=Object(f.a)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(p.b)(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(p.b)(t[e].shape[0]===n,()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(n,")"))}else e=!0,t=Object(Ct.a)(t,t.shape[0],0).map(t=>Object(_t.a)(t,[0]));Object(p.b)(t.length<=t[0].shape[0],()=>"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],")."));const n=[],r=t;for(let a=0;a<t.length;++a)n.push(Wt.a.tidy(()=>{let t=r[a];if(a>0)for(let e=0;e<a;++e){const r=Object(ot.a)(Object(Dt.a)(Object(ot.a)(n[e],t)),n[e]);t=Object(rt.a)(t,r)}return Object(_.a)(t,Object(De.a)(t,"euclidean"))}));return e?Object(Rt.a)(n,0):n}});var Me=n(30);function Le(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Wt.a.tidy(()=>{Object(p.b)(2===t.shape.length,()=>"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor."));const n=t.shape[0],r=t.shape[1];let a=z(n),o=Object(x.a)(t);const s=Pt([[1]],[1,1]);let i=Object(x.a)(s);const c=n>=r?r:n;for(let t=0;t<c;++t){const e=o,c=i,u=a;[i,o,a]=Wt.a.tidy(()=>{const e=Object(kt.a)(o,[t,t],[n-t,1]),c=Object(De.a)(e),u=Object(kt.a)(o,[t,t],[1,1]),l=Object(Gt.a)(Object(W.a)(u,0),Pt([[-1]]),Pt([[1]])),d=Object(rt.a)(u,Object(ot.a)(l,c)),p=Object(_.a)(e,d);i=1===p.shape[0]?Object(x.a)(s):Object(w.a)([s,Object(kt.a)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=Object(st.a)(Object(_.a)(Object(pe.a)(l,d),c)),f=Object(kt.a)(o,[t,0],[n-t,r]),m=Object(ot.a)(h,i),b=Object(Kt.a)(i);if(0===t)o=Object(rt.a)(f,Object(pe.a)(m,Object(pe.a)(b,f)));else{const e=Object(rt.a)(f,Object(pe.a)(m,Object(pe.a)(b,f)));o=Object(w.a)([Object(kt.a)(o,[0,0],[t,r]),e],0)}const g=Object(Kt.a)(m),y=Object(kt.a)(a,[0,t],[n,a.shape[1]-t]);if(0===t)a=Object(rt.a)(y,Object(pe.a)(Object(pe.a)(y,i),g));else{const e=Object(rt.a)(y,Object(pe.a)(Object(pe.a)(y,i),g));a=Object(w.a)([Object(kt.a)(a,[0,0],[n,t]),e],1)}return[i,o,a]}),Object(Me.c)([e,c,u])}return!e&&n>r&&(a=Object(kt.a)(a,[0,0],[n,r]),o=Object(kt.a)(o,[0,0],[r,r])),[a,o]})}const ze=Object(f.a)({qr_:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Object(p.b)(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank)),2===t.rank)return Le(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Object(Vt.a)(Object(M.a)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],o=[];r.forEach(t=>{const[n,r]=Le(t,e);a.push(n),o.push(r)});return[Object(M.a)(Object(Rt.a)(a,0),t.shape),Object(M.a)(Object(Rt.a)(o,0),t.shape)]}}});var Pe=n(57);const Be=Object(f.a)({computeWeightedLoss_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Pe.a.SUM_BY_NONZERO_WEIGHTS;const r=Object(d.a)(t,"losses","computeWeightedLoss");let a=null;null!=e&&(a=Object(d.a)(e,"weights","computeWeightedLoss"));const o=null==a?r:Object(ot.a)(r,a);if(n===Pe.a.NONE)return o;if(n===Pe.a.SUM)return Object(Dt.a)(o);if(n===Pe.a.MEAN){if(null==a)return Object(Z.a)(o);{const t=r.size/a.size,e=Object(_.a)(Object(Dt.a)(o),Object(Dt.a)(a));return t>1?Object(_.a)(e,Object(vt.a)(t)):e}}if(n===Pe.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(_.a)(Object(Dt.a)(o),Object(vt.a)(r.size));{const t=Object(ot.a)(a,Object(ut.a)(r.shape)),e=Object(v.a)(Object(Dt.a)(Object(it.a)(t,Object(vt.a)(0))),"float32");return Object(_.a)(Object(Dt.a)(o),e)}}throw Error("Unknown reduction: ".concat(n))}});Object(f.a)({absoluteDifference_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Pe.a.SUM_BY_NONZERO_WEIGHTS;const o=Object(d.a)(t,"labels","absoluteDifference"),s=Object(d.a)(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(d.a)(n,"weights","absoluteDifference")),Object(p.e)(o.shape,s.shape,"Error in absoluteDifference: ");const c=Object(a.a)(Object(rt.a)(o,s));return Be(c,i,r)}});Object(f.a)({cosineDistance_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pe.a.SUM_BY_NONZERO_WEIGHTS;const o=Object(d.a)(t,"labels","cosineDistance"),s=Object(d.a)(e,"predictions","cosineDistance");let i=null;null!=r&&(i=Object(d.a)(r,"weights","cosineDistance")),Object(p.e)(o.shape,s.shape,"Error in cosineDistance: ");const c=Object(vt.a)(1),u=Object(rt.a)(c,Object(Dt.a)(Object(ot.a)(o,s),n,!0));return Be(u,i,a)}});Object(f.a)({hingeLoss_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Pe.a.SUM_BY_NONZERO_WEIGHTS,a=Object(d.a)(t,"labels","hingeLoss");const o=Object(d.a)(e,"predictions","hingeLoss");let s=null;null!=n&&(s=Object(d.a)(n,"weights","hingeLoss")),Object(p.e)(a.shape,o.shape,"Error in hingeLoss: ");const i=Object(vt.a)(1);a=Object(rt.a)(Object(ot.a)(Object(vt.a)(2),a),i);const c=Object(gt.a)(Object(rt.a)(i,Object(ot.a)(a,o)));return Be(c,s,r)}});Object(f.a)({huberLoss_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pe.a.SUM_BY_NONZERO_WEIGHTS;const i=Object(d.a)(t,"labels","huberLoss"),c=Object(d.a)(e,"predictions","huberLoss");let u=null;null!=n&&(u=Object(d.a)(n,"weights","huberLoss")),Object(p.e)(i.shape,c.shape,"Error in huberLoss: ");const l=Object(vt.a)(r),h=Object(a.a)(Object(rt.a)(c,i)),f=Object(tt.a)(h,l),m=Object(rt.a)(h,f),b=Object(o.a)(Object(ot.a)(Object(vt.a)(.5),Object(nt.a)(f)),Object(ot.a)(l,m));return Be(b,u,s)}});Object(f.a)({logLoss_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pe.a.SUM_BY_NONZERO_WEIGHTS;const s=Object(d.a)(t,"labels","logLoss"),i=Object(d.a)(e,"predictions","logLoss");let c=null;null!=n&&(c=Object(d.a)(n,"weights","logLoss")),Object(p.e)(s.shape,i.shape,"Error in logLoss: ");const u=Object(vt.a)(1),l=Object(vt.a)(r),h=Object(st.a)(Object(ot.a)(s,Object(H.a)(Object(o.a)(i,l)))),f=Object(ot.a)(Object(rt.a)(u,s),Object(H.a)(Object(o.a)(Object(rt.a)(u,i),l))),m=Object(rt.a)(h,f);return Be(m,c,a)}});var Ve=n(132);Object(f.a)({meanSquaredError_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Pe.a.SUM_BY_NONZERO_WEIGHTS;const a=Object(d.a)(t,"labels","meanSquaredError"),o=Object(d.a)(e,"predictions","meanSquaredError");let s=null;null!=n&&(s=Object(d.a)(n,"weights","meanSquaredError")),Object(p.e)(a.shape,o.shape,"Error in meanSquaredError: ");const i=Object(Ve.a)(a,o);return Be(i,s,r)}});var We=n(63),Ue=n(214);function Ge(t,e){const n=Object(d.a)(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(d.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(p.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(gt.a)(r),i=Object(ot.a)(r,n),c=Object(Ue.a)(Object(We.a)(Object(st.a)(Object(a.a)(r))));return Object(o.a)(Object(rt.a)(s,i),c)}Object(f.a)({sigmoidCrossEntropy_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pe.a.SUM_BY_NONZERO_WEIGHTS,s=Object(d.a)(t,"multiClassLabels","sigmoidCrossEntropy");const i=Object(d.a)(e,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(d.a)(n,"weights","sigmoidCrossEntropy")),Object(p.e)(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(vt.a)(r),e=Object(vt.a)(1),n=Object(vt.a)(.5);s=Object(o.a)(Object(ot.a)(s,Object(rt.a)(e,t)),Object(ot.a)(n,t))}const u=Ge(s,i);return Be(u,c,a)}});var He=n(165);function qe(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(e.rank," ")+"and dim was ".concat(n));const r=Object(te.a)((t,e,r)=>{const a=Object(He.a)(e,[n],!0),o=Object(rt.a)(Object(v.a)(e,"float32"),a);r([t,o]);const s=Object(st.a)(Object(ot.a)(o,t));return{value:Object(Dt.a)(s,[n]),gradFunc:(t,e)=>{const[r,a]=e,o=Object(et.e)(t.shape,[n]);return[Object(ot.a)(Object(M.a)(t,o),Object(rt.a)(Object(v.a)(r,"float32"),Object(We.a)(a))),Object(ot.a)(Object(M.a)(t,o),Object(rt.a)(Object(We.a)(a),Object(v.a)(r,"float32")))]}}});return r(t,e)}Object(f.a)({softmaxCrossEntropy_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pe.a.SUM_BY_NONZERO_WEIGHTS,s=Object(d.a)(t,"onehotLabels","softmaxCrossEntropy");const i=Object(d.a)(e,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=Object(d.a)(n,"weights","softmaxCrossEntropy")),Object(p.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(vt.a)(r),e=Object(vt.a)(1),n=Object(vt.a)(s.shape[1]);s=Object(o.a)(Object(ot.a)(s,Object(rt.a)(e,t)),Object(_.a)(t,n))}const u=qe(s,i);return Be(u,c,a)}}),Jt.a,Zt.a,Qt.a,$t.a;const Ke={flipLeftRight:ve,resizeNearestNeighbor:Ce.a,resizeBilinear:Ee.a,rotateWithOffset:Oe,cropAndResize:ye,nonMaxSuppression:we,nonMaxSuppressionAsync:je,nonMaxSuppressionWithScore:Ne,nonMaxSuppressionWithScoreAsync:Se,nonMaxSuppressionPadded:Ie,nonMaxSuppressionPaddedAsync:Te},Xe={bandPart:Re,gramSchmidt:Fe,qr:ze}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(20),i=n(7);const c=Object(i.a)({sum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(o.a)(t,"x","sum");"bool"===i.dtype&&(i=Object(s.a)(i,"int32"));const c={x:i},u={axis:e,keepDims:n};return r.a.runKernel(a.Pc,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(8),a=n(11),o=n(34),s=n(2),i=n(6);const c=Object(i.b)({add_:function(t,e){let n=Object(s.a)(t,"a","add"),i=Object(s.a)(e,"b","add");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.d,c)}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return i})),n.d(e,"d",(function(){return c})),n.d(e,"f",(function(){return u})),n.d(e,"i",(function(){return l})),n.d(e,"c",(function(){return d})),n.d(e,"e",(function(){return p})),n.d(e,"h",(function(){return h})),n.d(e,"g",(function(){return f})),n.d(e,"a",(function(){return m}));var r=n(9),a=n(35),o=n(10),s=n(36);function i(t){Object(a.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function c(){return r.a}function u(){return r.a.memory()}function l(t,e){return r.a.tidy(t,e)}function d(t){Object(s.getTensorsInContainer)(t).forEach(t=>t.dispose())}function p(t){return r.a.keep(t)}function h(t){return r.a.setBackend(t)}function f(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return r.a.registerBackend(t,e,n)}function m(){return r.a.backend}Object(o.d)(i)},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({zerosLike_:function(t){const e={x:Object(o.a)(t,"x","zerosLike")};return r.a.runKernel(a.Yc,e)}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return i})),n.d(e,"a",(function(){return c})),n.d(e,"d",(function(){return u}));var r=n(21);class a{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(t,"."))),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Setting feature override from URL ".concat(t,": ").concat(e,".")),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Object(r.x)(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if("".concat(+e)===e)return+e;throw new Error("Could not parse value flag value ".concat(e," for flag ").concat(t,"."))}(e,n)})}}}function o(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return s(e,r[0],r[1]),r.join("=")})),e}function s(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function i(){return c}let c=null;function u(t){c=t}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(8),a=n(11),o=n(34),s=n(2),i=n(6);const c=Object(i.b)({sub_:function(t,e){let n=Object(s.a)(t,"a","sub"),i=Object(s.a)(e,"b","sub");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.ed,c)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return s})),n.d(e,"assertTypesMatch",(function(){return i})),n.d(e,"isTensorInList",(function(){return c})),n.d(e,"getTensorsInContainer",(function(){return u}));var r=n(42),a=n(126),o=n(21);function s(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(a.c)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function i(t,e){Object(o.b)(t.dtype===e.dtype,()=>"The dtypes of the first(".concat(t.dtype,") and")+" second(".concat(e.dtype,") input must match"))}function c(t,e){return e.some(e=>e.id===t.id)}function u(t){const e=[];return function t(e,n,a){if(null==e)return;if(e instanceof r.a)return void n.push(e);if(o=e,!Array.isArray(o)&&"object"!==typeof o)return;var o;const s=e;for(const r in s){const e=s[r];a.has(e)||(a.add(e),t(e,n,a))}}(t,e,new Set),e}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return c}));var r=n(12);class a{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,".")),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn("Setting feature override from URL ".concat(t,": ").concat(e,".")),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Object(r.x)(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return o(e,r[0],r[1]),r.join("=")})),e}(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if("".concat(+e)===e)return+e;throw new Error("Could not parse value flag value ".concat(e," for flag ").concat(t,"."))}(e,n)})}}}function o(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function s(){return i}let i=null;function c(t){i=t}},function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return s})),n.d(e,"assertTypesMatch",(function(){return i})),n.d(e,"isTensorInList",(function(){return c})),n.d(e,"getTensorsInContainer",(function(){return u}));var r=n(10),a=n(127),o=n(12);function s(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(a.b)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function i(t,e){Object(o.b)(t.dtype===e.dtype,()=>"The dtypes of the first(".concat(t.dtype,") and")+" second(".concat(e.dtype,") input must match"))}function c(t,e){return e.some(e=>e.id===t.id)}function u(t){const e=[];return function t(e,n,a){if(null==e)return;if(e instanceof r.a)return void n.push(e);if(o=e,!Array.isArray(o)&&"object"!==typeof o)return;var o;const s=e;for(const r in s){const e=s[r];a.has(e)||(a.add(e),t(e,n,a))}}(t,e,new Set),e}},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(9),a=n(5),o=n(7);const s=Object(o.a)({square_:function(t){const e=Object(a.a)(t,"x","square");return r.a.runKernel("Square",{x:e},{})}})},function(t,e,n){"use strict";n.d(e,"g",(function(){return i})),n.d(e,"f",(function(){return c})),n.d(e,"c",(function(){return u})),n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return p})),n.d(e,"m",(function(){return h})),n.d(e,"n",(function(){return f})),n.d(e,"t",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"l",(function(){return g})),n.d(e,"u",(function(){return y})),n.d(e,"r",(function(){return v})),n.d(e,"o",(function(){return O})),n.d(e,"k",(function(){return x})),n.d(e,"q",(function(){return w})),n.d(e,"i",(function(){return k})),n.d(e,"j",(function(){return j})),n.d(e,"p",(function(){return N})),n.d(e,"a",(function(){return S})),n.d(e,"s",(function(){return I}));var r=n(8),a=n(32),o=n(42),s=n(34);function i(){Object(a.c)().set("PROD",!0)}function c(){Object(a.c)().set("DEBUG",!0)}function u(){Object(a.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(t){Object(a.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.a.disposeVariables()}function p(){return r.a}function h(){return r.a.memory()}function f(t){return r.a.profile(t)}function m(t,e){return r.a.tidy(t,e)}function b(t){Object(s.getTensorsInContainer)(t).forEach(t=>t.dispose())}function g(t){return r.a.keep(t)}function y(t){return r.a.time(t)}function v(t){return r.a.setBackend(t)}function O(){return r.a.ready()}function x(){return r.a.backendName}function w(t){r.a.removeBackend(t)}function k(t){return r.a.findBackend(t)}function j(t){return r.a.findBackendFactory(t)}function N(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return r.a.registerBackend(t,e,n)}function S(){return r.a.backend}function I(t,e){Object(a.c)().setPlatform(t,e)}Object(o.d)(l)},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(21),a=n(72);function o(t,e){if((Object(r.A)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(r.A)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(t,[],[],e)}},function(t,e,n){"use strict";function r(t,e){const n=t.length,r=[];for(let a=0;a<n;a++){const o=n-1-a,s=t[o]||1;(e[e.length-1-a]||1)>1&&1===s&&r.unshift(o)}return r}function a(t,e){const n=[];for(let r=0;r<e.length;r++){const a=t[t.length-r-1],o=e.length-r-1,s=e[o];(null==a||1===a&&s>1)&&n.unshift(o)}return n}function o(t,e){const n=[],r=Math.max(t.length,e.length);for(let a=0;a<r;a++){let r=t[t.length-a-1];null==r&&(r=1);let o=e[e.length-a-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o){const n="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(n)}n.unshift(r)}}return n}n.r(e),n.d(e,"getBroadcastDims",(function(){return r})),n.d(e,"getReductionAxes",(function(){return a})),n.d(e,"assertAndGetBroadcastShape",(function(){return o}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(8),a=n(11),o=n(34),s=n(2),i=n(192),c=n(6);const u=Object(c.b)({div_:function(t,e){let n=Object(s.a)(t,"a","div"),c=Object(s.a)(e,"b","div");if([n,c]=Object(o.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return Object(i.a)(n,c);const u={a:n,b:c};return r.a.runKernel(a.rc,u,{})}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return l})),n.d(e,"f",(function(){return f})),n.d(e,"e",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"a",(function(){return g})),n.d(e,"c",(function(){return y}));var r=n(145),a=n(21);function o(t,e,n,r){const o=Object(a.j)(e),u=function(t,e,n,r){const o=Object(a.O)(e),i=r[r.length-1],u=new Array(i).fill(0),l=e.length,d="complex64"===n?c(t):t;if(l>1)for(let a=0;a<o/i;a++){const t=a*i;for(let e=0;e<i;e++)u[e]=Math.max(u[e],s(d[t+e],0,n).length)}return u}(t,e,n,o),l=e.length,d=function t(e,n,r,a,o){let u=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const l="complex64"===r?2:1,d=n[0],p=n.length;if(0===p){if("complex64"===r){return[s(c(e)[0],0,r)]}return"bool"===r?[i(e[0])]:[e[0].toString()]}if(1===p){if(d>20){const t=3*l;let n=Array.from(e.slice(0,t)),a=Array.from(e.slice((d-3)*l,d*l));return"complex64"===r&&(n=c(n),a=c(a)),["["+n.map((t,e)=>s(t,o[e],r)).join(", ")+", ..., "+a.map((t,e)=>s(t,o[d-3+e],r)).join(", ")+"]"]}return["["+("complex64"===r?c(e):Array.from(e)).map((t,e)=>s(t,o[e],r)).join(", ")+"]"]}const h=n.slice(1),f=a.slice(1),m=a[0]*l,b=[];if(d>20){for(let n=0;n<3;n++){const a=n*m,s=a+m;b.push(...t(e.slice(a,s),h,r,f,o,!1))}b.push("...");for(let n=d-3;n<d;n++){const a=n*m,s=a+m;b.push(...t(e.slice(a,s),h,r,f,o,n===d-1))}}else for(let s=0;s<d;s++){const n=s*m,a=n+m;b.push(...t(e.slice(n,a),h,r,f,o,s===d-1))}const g=2===p?",":"";b[0]="["+b[0]+g;for(let s=1;s<b.length-1;s++)b[s]=" "+b[s]+g;let y=",\n";for(let s=2;s<p;s++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(u?"":y),b}(t,e,n,o,u),p=["Tensor"];return r&&(p.push("  dtype: ".concat(n)),p.push("  rank: ".concat(l)),p.push("  shape: [".concat(e,"]")),p.push("  values:")),p.push(d.map(t=>"    "+t).join("\n")),p.join("\n")}function s(t,e,n){let r;return r=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(7))," + ")+"".concat(parseFloat(t[1].toFixed(7)),"j"):Object(a.z)(t)?"'".concat(t,"'"):"bool"===n?i(t):parseFloat(t.toFixed(7)).toString(),Object(a.L)(r,e)}function i(t){return 0===t?"false":"true"}function c(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var u=n(16);class l{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=a.O(t),null!=n){const t=n.length;a.b(t===this.size,()=>"Length of values '".concat(t,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'."))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(e,this.size),this.strides=Object(a.j)(t)}set(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),a.b(n.length===this.rank,()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")"));const o=this.locToIndex(n);this.values[o]=t}get(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];0===e.length&&(e=[0]);let r=0;for(const o of e){if(o<0||o>=this.shape[r]){const t="Requested out of range element at ".concat(e,". ")+"  Buffer shape=".concat(this.shape);throw new Error(t)}r++}let a=e[e.length-1];for(let o=0;o<e.length-1;++o)a+=this.strides[o]*e[o];return this.values[a]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,p=null,h=null;function f(t){d=t}function m(t){p=t}function b(t){h=t}class g{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=a.O(t),this.strides=Object(a.j)(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return p.buffer(this.shape,this.dtype,t)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(a.U)(this.shape,t,"complex64"===this.dtype)}arraySync(){return Object(a.U)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=d().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map(t=>u.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),d().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=d().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>u.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await d().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return p.print(this,t)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return o(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),p.cast(this,t)}variable(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),d().makeVariable(this,t,e,n)}}Object.defineProperty(g,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),Object(r.a)("Tensor",()=>g);class y extends g{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!a.a(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));d().disposeTensor(this),this.dataId=t.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(y,Symbol.hasInstance,{value:t=>t instanceof g&&null!=t.assign&&t.assign instanceof Function})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(8),a=n(11),o=n(2),s=n(21),i=n(6);const c=Object(i.b)({cast_:function(t,e){const n=Object(o.a)(t,"x","cast");if(!s.B(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:e};return r.a.runKernel(a.x,i,c)}})},function(t,e,n){"use strict";n.d(e,"e",(function(){return a})),n.d(e,"f",(function(){return o})),n.d(e,"g",(function(){return s})),n.d(e,"b",(function(){return i})),n.d(e,"c",(function(){return c})),n.d(e,"d",(function(){return u})),n.d(e,"j",(function(){return b})),n.d(e,"i",(function(){return g})),n.d(e,"h",(function(){return y})),n.d(e,"a",(function(){return v}));var r=n(21);function a(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",o=arguments.length>5?arguments[5]:void 0;const s=t[3],c=[...e,s],u=y(a);return i(t,c,n,o,r,null,null,u)}function o(t,e,n,r,a,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,u]=l(e);let d;if("channelsLast"===s)d=[c,u,t[3],t[3]];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));d=[c,u,t[1],t[1]]}return i(t,d,n,r,a,o,!1,s)}function s(t,e,n,r,a,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,u,l]=d(e);let p,h;if("NDHWC"===s)h="channelsLast",p=[i,u,l,t[4],t[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat ".concat(s));h="channelsFirst",p=[i,u,l,t[1],t[1]]}return c(t,p,n,r,a,!1,h,o)}function i(t,e,n,r,a,o){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,u,d,f]=[-1,-1,-1,-1];if("channelsLast"===i)[c,u,d,f]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,f,u,d]=t}const[m,b,,g]=e,[y,v]=l(n),[O,x]=l(r),w=p(m,O),k=p(b,x),{padInfo:j,outHeight:N,outWidth:S}=h(a,u,d,y,v,w,k,o,i),I=s?g*f:g;let T;return"channelsFirst"===i?T=[c,I,N,S]:"channelsLast"===i&&(T=[c,N,S,I]),{batchSize:c,dataFormat:i,inHeight:u,inWidth:d,inChannels:f,outHeight:N,outWidth:S,outChannels:I,padInfo:j,strideHeight:y,strideWidth:v,filterHeight:m,filterWidth:b,effectiveFilterHeight:w,effectiveFilterWidth:k,dilationHeight:O,dilationWidth:x,inShape:t,outShape:T,filterShape:e}}function c(t,e,n,r,a){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,l,h,m]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[c,u,l,h,m]=t;else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));[c,m,u,l,h]=t}const[b,g,y,,v]=e,[O,x,w]=d(n),[k,j,N]=d(r),S=p(b,k),I=p(g,j),T=p(y,N),{padInfo:E,outDepth:C,outHeight:A,outWidth:_}=f(a,u,l,h,O,x,w,S,I,T,i),R=o?v*m:v;let D;return"channelsFirst"===s?D=[c,R,C,A,_]:"channelsLast"===s&&(D=[c,C,A,_,R]),{batchSize:c,dataFormat:s,inDepth:u,inHeight:l,inWidth:h,inChannels:m,outDepth:C,outHeight:A,outWidth:_,outChannels:R,padInfo:E,strideDepth:O,strideHeight:x,strideWidth:w,filterDepth:b,filterHeight:g,filterWidth:y,effectiveFilterDepth:S,effectiveFilterHeight:I,effectiveFilterWidth:T,dilationDepth:k,dilationHeight:j,dilationWidth:N,inShape:t,outShape:D,filterShape:e}}function u(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const a=p(e,r);return Math.floor((t[0]*(n-1)-n+a)/2)}function l(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function d(t){return"number"===typeof t?[t,t,t]:t}function p(t,e){return e<=1?t:t+(t-1)*(e-1)}function h(t,e,n,r,a,o,s,i,c){let l,d,p;if("number"===typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,a){null==r&&(r=u(t,e,n));const o=t[0],s=t[1];return[m((o-e+2*r)/n+1,a),m((s-e+2*r)/n+1,a)]}([e,n],o,r,t,i);d=a[0],p=a[1]}else if("same"===t){d=Math.ceil(e/r),p=Math.ceil(n/a);const t=Math.max(0,(d-1)*r+o-e),i=Math.max(0,(p-1)*a+s-n),c=Math.floor(t/2),u=t-c,h=Math.floor(i/2);l={top:c,bottom:u,left:h,right:i-h,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-o+1)/r),p=Math.ceil((n-s+1)/a);else{if("object"!==typeof t)throw Error("Unknown padding parameter: ".concat(t));{const u="channelsLast"===c?t[1][0]:t[2][0],h="channelsLast"===c?t[1][1]:t[2][1],f="channelsLast"===c?t[2][0]:t[3][0],b="channelsLast"===c?t[2][1]:t[3][1];l={top:u,bottom:h,left:f,right:b,type:0===u&&0===h&&0===f&&0===b?"VALID":"EXPLICIT"},d=m((e-o+u+h)/r+1,i),p=m((n-s+f+b)/a+1,i)}}return{padInfo:l,outHeight:d,outWidth:p}}function f(t,e,n,r,a,o,s,i,c,l,d){let p,h,f,b;if("number"===typeof t){p={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const o=function(t,e,n,r,a,o){null==a&&(a=u(t,e,r));const s=t[0],i=t[1],c=t[2];return[m((s-e+2*a)/r+1,o),m((i-e+2*a)/r+1,o),m((c-e+2*a)/r+1,o),n]}([e,n,r,1],i,1,a,t,d);h=o[0],f=o[1],b=o[2]}else if("same"===t){h=Math.ceil(e/a),f=Math.ceil(n/o),b=Math.ceil(r/s);const t=(h-1)*a+i-e,u=(f-1)*o+c-n,d=(b-1)*s+l-r,m=Math.floor(t/2),g=t-m,y=Math.floor(u/2),v=u-y,O=Math.floor(d/2);p={top:y,bottom:v,left:O,right:d-O,front:m,back:g,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: ".concat(t));p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((e-i+1)/a),f=Math.ceil((n-c+1)/o),b=Math.ceil((r-l+1)/s)}return{padInfo:p,outDepth:h,outHeight:f,outWidth:b}}function m(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function b(t){const[e,n,r]=l(t);return 1===e&&1===n&&1===r}function g(t,e){return b(t)||b(e)}function y(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(t))}function v(t,e,n){if(null!=n){if("string"===typeof e)throw Error("Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,"."));if("number"===typeof e)r.b(r.v(e),()=>"Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,"."));else{if("object"!==typeof e)throw Error("Error in ".concat(t,": Unknown padding parameter: ").concat(e));e.forEach(e=>{e.forEach(e=>{r.b(r.v(e),()=>"Error in ".concat(t,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(e,"."))})})}}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({slice_:function(t,e,n){const s=Object(o.a)(t,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const i={x:s},c={begin:e,size:n};return r.a.runKernel(a.Dc,i,c)}})},function(t,e,n){"use strict";function r(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",o=arguments.length>5?arguments[5]:void 0;const i=t[3],c=[...e,i],u=g(a);return s(t,c,n,o,r,null,null,u)}function a(t,e,n,r,a,o){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(e);let d;if("channelsLast"===i)d=[c,l,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));d=[c,l,t[1],t[1]]}return s(t,d,n,r,a,o,!1,i)}function o(t,e,n,r,a,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[c,u,d]=l(e);let p,h;if("NDHWC"===s)h="channelsLast",p=[c,u,d,t[4],t[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat ".concat(s));h="channelsFirst",p=[c,u,d,t[1],t[1]]}return i(t,p,n,r,a,!1,h,o)}function s(t,e,n,r,a,o){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,h,f]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,h,f]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,f,l,h]=t}const[m,b,,g]=e,[y,v]=u(n),[O,x]=u(r),w=d(m,O),k=d(b,x),{padInfo:j,outHeight:N,outWidth:S}=p(a,l,h,y,v,w,k,o,i),I=s?g*f:g;let T;return"channelsFirst"===i?T=[c,I,N,S]:"channelsLast"===i&&(T=[c,N,S,I]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:h,inChannels:f,outHeight:N,outWidth:S,outChannels:I,padInfo:j,strideHeight:y,strideWidth:v,filterHeight:m,filterWidth:b,effectiveFilterHeight:w,effectiveFilterWidth:k,dilationHeight:O,dilationWidth:x,inShape:t,outShape:T,filterShape:e}}function i(t,e,n,r,a){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,p,f,m]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[c,u,p,f,m]=t;else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));[c,m,u,p,f]=t}const[b,g,y,,v]=e,[O,x,w]=l(n),[k,j,N]=l(r),S=d(b,k),I=d(g,j),T=d(y,N),{padInfo:E,outDepth:C,outHeight:A,outWidth:_}=h(a,u,p,f,O,x,w,S,I,T,i),R=o?v*m:v;let D;return"channelsFirst"===s?D=[c,R,C,A,_]:"channelsLast"===s&&(D=[c,C,A,_,R]),{batchSize:c,dataFormat:s,inDepth:u,inHeight:p,inWidth:f,inChannels:m,outDepth:C,outHeight:A,outWidth:_,outChannels:R,padInfo:E,strideDepth:O,strideHeight:x,strideWidth:w,filterDepth:b,filterHeight:g,filterWidth:y,effectiveFilterDepth:S,effectiveFilterHeight:I,effectiveFilterWidth:T,dilationDepth:k,dilationHeight:j,dilationWidth:N,inShape:t,outShape:D,filterShape:e}}function c(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const a=d(e,r);return Math.floor((t[0]*(n-1)-n+a)/2)}function u(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function l(t){return"number"===typeof t?[t,t,t]:t}function d(t,e){return e<=1?t:t+(t-1)*(e-1)}function p(t,e,n,r,a,o,s,i,u){let l,d,p;if("number"===typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,a){null==r&&(r=c(t,e,n));const o=t[0],s=t[1];return[f((o-e+2*r)/n+1,a),f((s-e+2*r)/n+1,a)]}([e,n],o,r,t,i);d=a[0],p=a[1]}else if("same"===t){d=Math.ceil(e/r),p=Math.ceil(n/a);const t=Math.max(0,(d-1)*r+o-e),i=Math.max(0,(p-1)*a+s-n),c=Math.floor(t/2),u=t-c,h=Math.floor(i/2);l={top:c,bottom:u,left:h,right:i-h,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-o+1)/r),p=Math.ceil((n-s+1)/a);else{if("object"!==typeof t)throw Error("Unknown padding parameter: ".concat(t));{const c="channelsLast"===u?t[1][0]:t[2][0],h="channelsLast"===u?t[1][1]:t[2][1],m="channelsLast"===u?t[2][0]:t[3][0],b="channelsLast"===u?t[2][1]:t[3][1];l={top:c,bottom:h,left:m,right:b,type:0===c&&0===h&&0===m&&0===b?"VALID":"EXPLICIT"},d=f((e-o+c+h)/r+1,i),p=f((n-s+m+b)/a+1,i)}}return{padInfo:l,outHeight:d,outWidth:p}}function h(t,e,n,r,a,o,s,i,u,l,d){let p,h,m,b;if("number"===typeof t){p={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const o=function(t,e,n,r,a,o){null==a&&(a=c(t,e,r));const s=t[0],i=t[1],u=t[2];return[f((s-e+2*a)/r+1,o),f((i-e+2*a)/r+1,o),f((u-e+2*a)/r+1,o),n]}([e,n,r,1],i,1,a,t,d);h=o[0],m=o[1],b=o[2]}else if("same"===t){h=Math.ceil(e/a),m=Math.ceil(n/o),b=Math.ceil(r/s);const t=(h-1)*a+i-e,c=(m-1)*o+u-n,d=(b-1)*s+l-r,f=Math.floor(t/2),g=t-f,y=Math.floor(c/2),v=c-y,O=Math.floor(d/2);p={top:y,bottom:v,left:O,right:d-O,front:f,back:g,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: ".concat(t));p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((e-i+1)/a),m=Math.ceil((n-u+1)/o),b=Math.ceil((r-l+1)/s)}return{padInfo:p,outDepth:h,outHeight:m,outWidth:b}}function f(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function m(t){const[e,n,r]=u(t);return 1===e&&1===n&&1===r}function b(t,e){return m(t)||m(e)}function g(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(t))}n.d(e,"d",(function(){return r})),n.d(e,"e",(function(){return a})),n.d(e,"f",(function(){return o})),n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return i})),n.d(e,"c",(function(){return c})),n.d(e,"i",(function(){return m})),n.d(e,"h",(function(){return b})),n.d(e,"g",(function(){return g}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(8),a=n(11),o=n(34),s=n(2),i=n(6);const c=Object(i.b)({matMul_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=Object(s.a)(t,"a","matMul"),u=Object(s.a)(e,"b","matMul");[c,u]=Object(o.makeTypesMatch)(c,u);const l={a:c,b:u},d={transposeA:n,transposeB:i};return r.a.runKernel(a.s,l,d)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(7);const c=Object(i.a)({matMul_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=Object(s.a)(t,"a","matMul"),u=Object(s.a)(e,"b","matMul");[c,u]=Object(o.makeTypesMatch)(c,u);const l={a:c,b:u},d={transposeA:n,transposeB:i};return r.a.runKernel(a.s,l,d)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({neg_:function(t){const e={x:Object(o.a)(t,"x","neg")};return r.a.runKernel(a.Vb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(8),a=n(11),o=n(2),s=n(43),i=n(6);const c=Object(i.b)({sum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(o.a)(t,"x","sum");"bool"===i.dtype&&(i=Object(s.a)(i,"int32"));const c={x:i},u={axis:e,keepDims:n};return r.a.runKernel(a.fd,c,u)}})},function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return i})),n.d(e,"e",(function(){return c})),n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return h})),n.d(e,"d",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"j",(function(){return b})),n.d(e,"h",(function(){return g})),n.d(e,"g",(function(){return y})),n.d(e,"i",(function(){return v})),n.d(e,"k",(function(){return O}));var r=n(74),a=n(116),o=n(21),s=n(186);async function i(t,e){const n=[],r=[],a=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let o=0;o<a.length;++o){const s=a[o],i=Array.isArray(t)?t[o].tensor:t[s];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(s,"': ").concat(i.dtype));const c={name:s,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise(async t=>{const e=await i.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let a=0;for(let o=0;o<e.length;o++){const t=e[o],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,a),a+=4,r.set(t,a),a+=t.length}t(r)});r.push(t)}else r.push(i.data());null!=e&&(c.group=e),n.push(c)}return{data:u(await Promise.all(r)),specs:n}}function c(t,e){const n={};let i,c=0;for(const u of e){const e=u.name,l=u.dtype,d=u.shape,p=Object(o.O)(d);let h;if("quantization"in u){const n=u.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error("Weight ".concat(u.name," with quantization ").concat(n.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==n.dtype)throw new Error("Weight ".concat(u.name," has unknown ")+"quantization dtype ".concat(n.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==l)throw new Error("Weight ".concat(u.name," is quantized with ").concat(n.dtype," ")+"which only supports weights of type float32 not ".concat(l,"."))}const r=s.a[n.dtype],a=t.slice(c,c+p*r),o="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){h=new Float32Array(o.length);for(let t=0;t<o.length;t++){const e=o[t];h[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type float32.");void 0===i&&(i=x()),h=i(o)}else{if("int32"!==l)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(l));if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type int32.");h=new Int32Array(o.length);for(let t=0;t<o.length;t++){const e=o[t];h[t]=Math.round(e*n.scale+n.min)}}c+=p*r}else if("string"===l){const e=Object(o.O)(u.shape);h=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(c,c+4))[0];c+=4;const n=new Uint8Array(t.slice(c,c+e));h.push(n),c+=e}}else{const o=s.a[l],i=t.slice(c,c+p*o);if("float32"===l)h=new Float32Array(i);else if("int32"===l)h=new Int32Array(i);else if("bool"===l)h=new Uint8Array(i);else{if("complex64"!==l)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(l));{h=new Float32Array(i);const t=new Float32Array(h.length/2),o=new Float32Array(h.length/2);for(let e=0;e<t.length;e++)t[e]=h[2*e],o[e]=h[2*e+1];const s=Object(a.a)(t,d,"float32"),c=Object(a.a)(o,d,"float32");n[e]=Object(r.a)(s,c),s.dispose(),c.dispose()}}c+=p*o}"complex64"!==l&&(n[e]=Object(a.a)(h,d,l))}return n}function u(t){if(null===t)throw new Error("Invalid input value: ".concat(JSON.stringify(t)));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(t.constructor.name))});const r=new Uint8Array(e);let a=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),a),a+=t.byteLength}),r.buffer}const l="undefined"!==typeof t&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function d(e){return l?t.byteLength(e):new Blob([e]).size}function p(e){if(l)return t.from(e).toString("base64");const n=new Uint8Array(e);let r="";for(let t=0,a=n.length;t<a;t++)r+=String.fromCharCode(n[t]);return btoa(r)}function h(e){if(l){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),r=new Uint8Array(n.length);for(let t=0;t<n.length;++t)r.set([n.charCodeAt(t)],t);return r.buffer}function f(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function m(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function b(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function g(t,e,n){const r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(r.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=n}return null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),r}async function y(t,e){let n,r;return null!=t.weightsManifest&&([n,r]=await e(t.weightsManifest)),g(t,n,r)}function v(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:d(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:d(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function O(t){const e=[];for(const n of t)e.push(...n.weights);return e}function x(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const a=new ArrayBuffer(4*r.length),o=new Uint32Array(a);for(let s=0;s<r.length;s++){const a=r[s],i=t[n[a>>10]+(1023&a)]+e[a>>10];o[s]=i}return new Float32Array(a)}}}).call(this,n(180).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(94),c=n(7);const u=Object(c.a)({concat_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;Object(s.b)(t.length>=1,()=>"Pass at least one tensor to concat");const n=Object(o.b)(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))}),1===n.length)return Object(i.a)(n[0]);const c=n,u={axis:e};return r.a.runKernel(a.B,c,u)}})},function(t,e){t.exports=function(){throw new Error("define cannot be used indirect")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return p})),n.d(e,"f",(function(){return d})),n.d(e,"d",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"b",(function(){return i})),n.d(e,"c",(function(){return c}));var r=n(8),a=n(42),o=n(2),s=n(21);function i(t){return s.b(s.u(t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const a=Object(o.a)(e,"x","tf.grad","string_or_numeric"),i=null!=n?Object(o.a)(n,"dy","tf.grad"):null;return r.a.tidy(()=>{const{value:e,grads:n}=r.a.gradients(()=>t(a),[a],i);return null!=i&&s.e(e.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),h(n),n[0]})}}function c(t){return s.b(s.u(t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{s.b(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const a=Object(o.b)(e,"args","tf.grads","string_or_numeric"),i=null!=n?Object(o.a)(n,"dy","tf.grads"):null;return r.a.tidy(()=>{const{value:e,grads:n}=r.a.gradients(()=>t(...a),a,i);return null!=i&&s.e(e.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(n),n})}}function u(t){return s.b(s.u(t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{s.b(e instanceof a.a,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),s.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:o,value:i}=r.a.gradients(()=>t(e),[e],n);return h(o),{grad:o[0],value:i}}}function l(t){return s.b(s.u(t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{s.b(Array.isArray(e)&&e.every(t=>t instanceof a.a),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),s.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const o=r.a.gradients(()=>t(...e),e,n);return null!=n&&s.e(o.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(o.grads),o}}function d(t,e){s.b(s.u(t),()=>"The f passed in variableGrads(f) must be a function"),s.b(null==e||Array.isArray(e)&&e.every(t=>t instanceof a.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in r.a.registeredVariables)e.push(r.a.registeredVariables[t])}const o=n?e.filter(t=>!t.trainable):null,i=e.length;e=e.filter(t=>t.trainable),s.b(e.length>0,()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable.");const{value:c,grads:u}=r.a.gradients(t,e,null,!0);s.b(u.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),s.b(0===c.rank,()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor"));const l={};return e.forEach((t,e)=>{null!=u[e]&&(l[t.name]=u[e])}),null!=o&&o.forEach(t=>l[t.name]=null),{value:c,grads:l}}function p(t){return r.a.customGrad(t)}function h(t){if(t.filter(t=>null==t).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return s}));var r=n(9),a=n(10),o=(n(5),n(12));function s(t,e){o.b(o.u(t),()=>"The f passed in variableGrads(f) must be a function"),o.b(null==e||Array.isArray(e)&&e.every(t=>t instanceof a.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in r.a.registeredVariables)e.push(r.a.registeredVariables[t])}const s=n?e.filter(t=>!t.trainable):null,i=e.length;e=e.filter(t=>t.trainable),o.b(e.length>0,()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable.");const{value:c,grads:u}=r.a.gradients(t,e,null,!0);o.b(u.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),o.b(0===c.rank,()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor"));const l={};return e.forEach((t,e)=>{null!=u[e]&&(l[t.name]=u[e])}),null!=s&&s.forEach(t=>l[t.name]=null),{value:c,grads:l}}function i(t){return r.a.customGrad(t)}},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(142),c=n(26),u=n(7);const l=Object(u.a)({where_:function(t,e,n){const u=Object(o.a)(e,"a","where"),l=Object(o.a)(n,"b","where"),d=Object(o.a)(t,"condition","where","bool"),p=Object(c.a)(u.shape,l.shape),h=Object(i.a)(u,p),f=Object(i.a)(l,p);1===d.rank&&Object(s.b)(d.shape[0]===u.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==d.rank&&Object(s.e)(d.shape,f.shape,"Error in where: ");const m={condition:d,t:h,e:f};return r.a.runKernel(a.xc,m)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({sqrt_:function(t){const e={x:Object(o.a)(t,"x","sqrt")};return r.a.runKernel(a.Jc,e)}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return o})),n.d(e,"d",(function(){return s})),n.d(e,"e",(function(){return i})),n.d(e,"a",(function(){return c})),n.d(e,"f",(function(){return u})),n.d(e,"h",(function(){return l})),n.d(e,"g",(function(){return d}));var r=n(12);function a(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function o(t,e,n){const r=t.length+e.length,a=[];let o=0,s=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(t[o++]):a.push(e[s++]);return a}function s(t,e){const n=[],r=t.length;for(let a=0;a<r;a++)-1===e.indexOf(a)&&n.push(t[a]);return[n,e.map(e=>t[e])]}function i(t,e){return o(t,e.map(t=>1),e)}function c(t,e,n){r.b(a(e,n),()=>"".concat(t," supports only inner-most axes for now. ")+"Got axes ".concat(e," and rank-").concat(n," input."))}function u(t,e){if(a(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function l(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function d(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return i})),n.d(e,"e",(function(){return c})),n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return h})),n.d(e,"d",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"g",(function(){return b}));var r=n(83),a=n(173),o=n(12),s=n(188);async function i(t,e){const n=[],r=[],a=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let o=0;o<a.length;++o){const s=a[o],i=Array.isArray(t)?t[o].tensor:t[s];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(s,"': ").concat(i.dtype));const c={name:s,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise(async t=>{const e=await i.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let a=0;for(let o=0;o<e.length;o++){const t=e[o],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,a),a+=4,r.set(t,a),a+=t.length}t(r)});r.push(t)}else r.push(i.data());null!=e&&(c.group=e),n.push(c)}return{data:u(await Promise.all(r)),specs:n}}function c(t,e){const n={};let i,c=0;for(const u of e){const e=u.name,l=u.dtype,d=u.shape,p=Object(o.N)(d);let h;if("quantization"in u){const n=u.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error("Weight ".concat(u.name," with quantization ").concat(n.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==n.dtype)throw new Error("Weight ".concat(u.name," has unknown ")+"quantization dtype ".concat(n.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==l)throw new Error("Weight ".concat(u.name," is quantized with ").concat(n.dtype," ")+"which only supports weights of type float32 not ".concat(l,"."))}const r=s.a[n.dtype],a=t.slice(c,c+p*r),o="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){h=new Float32Array(o.length);for(let t=0;t<o.length;t++){const e=o[t];h[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type float32.");void 0===i&&(i=g()),h=i(o)}else{if("int32"!==l)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(l));if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type int32.");h=new Int32Array(o.length);for(let t=0;t<o.length;t++){const e=o[t];h[t]=Math.round(e*n.scale+n.min)}}c+=p*r}else if("string"===l){const e=Object(o.N)(u.shape);h=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(c,c+4))[0];c+=4;const n=new Uint8Array(t.slice(c,c+e));h.push(n),c+=e}}else{const o=s.a[l],i=t.slice(c,c+p*o);if("float32"===l)h=new Float32Array(i);else if("int32"===l)h=new Int32Array(i);else if("bool"===l)h=new Uint8Array(i);else{if("complex64"!==l)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(l));{h=new Float32Array(i);const t=new Float32Array(h.length/2),o=new Float32Array(h.length/2);for(let e=0;e<t.length;e++)t[e]=h[2*e],o[e]=h[2*e+1];const s=Object(a.a)(t,d,"float32"),c=Object(a.a)(o,d,"float32");n[e]=Object(r.a)(s,c),s.dispose(),c.dispose()}}c+=p*o}"complex64"!==l&&(n[e]=Object(a.a)(h,d,l))}return n}function u(t){if(null===t)throw new Error("Invalid input value: ".concat(JSON.stringify(t)));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(t.constructor.name))});const r=new Uint8Array(e);let a=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),a),a+=t.byteLength}),r.buffer}const l="undefined"!==typeof t&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function d(e){return l?t.byteLength(e):new Blob([e]).size}function p(e){if(l)return t.from(e).toString("base64");const n=new Uint8Array(e);let r="";for(let t=0,a=n.length;t<a;t++)r+=String.fromCharCode(n[t]);return btoa(r)}function h(e){if(l){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),r=new Uint8Array(n.length);for(let t=0;t<n.length;++t)r.set([n.charCodeAt(t)],t);return r.buffer}function f(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function m(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function b(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:d(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:d(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function g(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const a=new ArrayBuffer(4*r.length),o=new Uint32Array(a);for(let s=0;s<r.length;s++){const a=r[s],i=t[n[a>>10]+(1023&a)]+e[a>>10];o[s]=i}return new Float32Array(a)}}}).call(this,n(180).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({zerosLike_:function(t){const e={x:Object(o.a)(t,"x","zerosLike")};return r.a.runKernel(a.qd,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({exp_:function(t){const e={x:Object(o.a)(t,"x","exp")};return r.a.runKernel(a.Z,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(8),a=n(2),o=n(6);const s=Object(o.b)({square_:function(t){const e=Object(a.a)(t,"x","square");return r.a.runKernel("Square",{x:e},{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({abs_:function(t){const e=Object(o.a)(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return r.a.runKernel(a.B,t)}{const t={x:e};return r.a.runKernel(a.a,t)}}})},function(t,e,n){"use strict";n.d(e,"c",(function(){return f})),n.d(e,"b",(function(){return m})),n.d(e,"a",(function(){return b})),n.d(e,"d",(function(){return g}));var r=n(40),a=n(194),o=n(195),s=n(19),i=n(196),c=n(129),u=n(197),l=n(15),d=n(117),p=n(198),h=n(50);function f(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Object(s.a)(t,Object(p.a)(e));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function m(t,e){let n=e;const a=r.getReductionAxes(t.shape,e.shape);return a.length>0&&(n=Object(h.a)(n,a)),Object(l.a)(n,t.shape)}function b(t,e,n,r){if("linear"===e)return t;if("relu"===e)return Object(c.a)(t);if("elu"===e)return Object(a.a)(t);if("relu6"===e)return Object(u.a)(t);if("prelu"===e)return Object(i.a)(t,n);if("leakyrelu"===e)return Object(o.a)(t,r);if("sigmoid"===e)return Object(d.a)(t);throw new Error("Unknown fused activation ".concat(e,"."))}const g=(t,e)=>!(t>0)||"linear"===e},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({abs_:function(t){const e=Object(o.a)(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return r.a.runKernel(a.A,t)}{const t={x:e};return r.a.runKernel(a.a,t)}}})},function(t,e,n){"use strict";n.d(e,"c",(function(){return h})),n.d(e,"b",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"d",(function(){return b}));var r=n(26),a=n(151),o=n(155),s=n(14),i=n(158),c=n(112),u=n(166),l=n(13),d=n(114),p=n(28);function h(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Object(s.a)(t,Object(d.a)(e));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function f(t,e){let n=e;const a=r.c(t.shape,e.shape);return a.length>0&&(n=Object(p.a)(n,a)),Object(l.a)(n,t.shape)}function m(t,e,n,r){if("linear"===e)return t;if("relu"===e)return Object(c.a)(t);if("elu"===e)return Object(a.a)(t);if("relu6"===e)return Object(u.a)(t);if("prelu"===e)return Object(i.a)(t,n);if("leakyrelu"===e)return Object(o.a)(t,r);throw new Error("Unknown fused activation ".concat(e,"."))}const b=(t,e)=>!(t>0)||"linear"===e},function(t,e,n){"use strict";n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return p})),n.d(e,"g",(function(){return h})),n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return N})),n.d(e,"c",(function(){return r}));var r,a=n(0),o=n(120),s=n(97);function i(t){return t instanceof a.Tc?{value:t.clone(),recurse:!1}:Object(s.e)(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class c{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class u extends c{constructor(){super(u.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;r<n;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function l(t){return new m(t)}function d(t){return new b(t)}function p(t,e){return new I(t,e)}function h(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.FAIL;return new T(t,e)}u.INITIAL_CAPACITY=32;class f{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new k(this,t)}filter(t){return new x(this,t)}map(t){return new w(this,t)}mapAsync(t){return new j(this,t)}serialMapAsync(t){return new j(this,t).serial()}flatmap(t){return new S(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t){return new O(this,t,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:s.f;return this.rowMajorBatch(t,e).map(t=>Object(s.d)(t,n))}concatenate(t,e){return new I(l([this,t]),e)}take(t){return t<0||null==t?this:new v(this,t)}skip(t){return t<0||null==t?this:new y(this,t)}prefetch(t){return new E(this,t)}shuffle(t,e){return new C(this,t,e)}serial(){return new g(this)}}class m extends f{constructor(t){super(),this.items=t,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Object(s.b)(e,i)),done:!1};var e}}class b extends f{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: ".concat(t.message),t}}}class g extends f{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;a.Fd(t.value)}return this.upstream.next()}}class v extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class O extends f{constructor(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class x extends f{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;a.Fd(t.value)}}}class w extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.cf.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.cf.getTensorsInContainer(n);for(const o of e)a.cf.isTensorInList(o,r)||o.dispose();return{value:n,done:!1}}}class k extends f{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class j extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.cf.getTensorsInContainer(t.value),n=await this.transform(t.value),r=a.cf.getTensorsInContainer(n);for(const o of e)a.cf.isTensorInList(o,r)||o.dispose();return{value:n,done:!1}}}class N extends f{constructor(){super(),this.outputQueue=new u,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class S extends N{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=a.cf.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.cf.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const o of e)a.cf.isTensorInList(o,r)||o.dispose();return!0}}class I extends f{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(r||(r={}));class T extends f{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.FAIL;super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{".concat("TODO: fill in upstream of zip summaries","} -> Zip")}async nextState(t){await t;let e=0,n=0;const a=await Object(s.c)(this.iterators,(function(t){if(t instanceof f){return{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}}return{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error("Zipped streams should have the same length. "+"Mismatched at element ".concat(this.count,"."));case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class E extends f{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new c(e)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class C extends E{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=o.alea(n||a.kf.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(26),c=n(7);const u=Object(c.a)({greater_:function(t,e){let n=Object(s.a)(t,"a","greater"),c=Object(s.a)(e,"b","greater");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.nb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(42),a=n(21);function o(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return e=e||"float32",a.c(t),new r.b(t,e,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(8),a=n(21),o=n(16);function s(t,e,n,s){if(null==s&&(s=Object(a.r)(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(a.c)(e);const t=Object(a.O)(e),r=Object(a.O)(n);Object(a.b)(t===r,()=>"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(t," values but has ").concat(r));for(let o=0;o<n.length;++o){const t=n[o],r=o!==n.length-1||t!==Object(a.O)(e.slice(o));Object(a.b)(n[o]===e[o]||!r,()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(e,"). "))}}return Object(a.A)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?Object(o.toTypedArray)(t,s):Object(a.m)(t,[],!0),r.a.makeTensor(t,e,s)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({neg_:function(t){const e={x:Object(o.a)(t,"x","neg")};return r.a.runKernel(a.ac,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(8),a=n(11),o=n(2),s=n(21),i=n(6);const c=Object(i.b)({complex_:function(t,e){const n=Object(o.a)(t,"real","complex"),i=Object(o.a)(e,"imag","complex");s.e(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return r.a.runKernel(a.A,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(10),a=n(12);function o(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return e=e||"float32",a.c(t),new r.b(t,e,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(7);const c=Object(i.a)({pow_:function(t,e){let n=Object(s.a)(t,"base","pow"),i=Object(s.a)(e,"exp","pow");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.ec,c)}})},,function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(26),c=n(7);const u=Object(c.a)({greaterEqual_:function(t,e){let n=Object(s.a)(t,"a","greaterEqual"),c=Object(s.a)(e,"b","greaterEqual");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.ob,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(26),c=n(7);const u=Object(c.a)({lessEqual_:function(t,e){let n=Object(s.a)(t,"a","lessEqual"),c=Object(s.a)(e,"b","lessEqual");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.zb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({transpose_:function(t,e){const n=Object(o.a)(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),s.b(n.rank===e.length,()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of perm ".concat(e,".")),e.forEach(t=>{s.b(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and ".concat(n.rank-1)+" but got ".concat(e))}),n.rank<=1)return n.clone();const i={x:n},c={perm:e};return r.a.runKernel(a.Uc,i,c)}})},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return S})),n.d(e,"i",(function(){return T})),n.d(e,"c",(function(){return E})),n.d(e,"f",(function(){return C})),n.d(e,"e",(function(){return R})),n.d(e,"d",(function(){return D})),n.d(e,"k",(function(){return M})),n.d(e,"g",(function(){return L})),n.d(e,"h",(function(){return z})),n.d(e,"j",(function(){return P})),n.d(e,"b",(function(){return B}));var r=n(18),a=n(103),o=n(138),s=n(1),i=n(285),c=n(286),u=n(287),l=n(288),d=n(289),p=n(290),h=n(291),f=n(292),m=n(293),b=n(294),g=n(295),y=n(296),v=n(297),O=n(298),x=n(299),w=n(300),k=n(301),j=n(302),N=n(303);class S{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[i,c,u,l,d,p,h,f,m,b,g,y,v,O,x,w,k,j,N].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=t.node,r=[],a=[],o=[],i=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?a.push(t[e.name]):null!=e.input&&0!==e.input.length||o.push(t[e.name]),t),{});let c=[];const u=[];let l={},d={};null!=e&&(l=this.mapSignatureEntries(e.inputs),d=this.mapSignatureEntries(e.outputs));const p=Object.keys(i);p.forEach(t=>{const e=i[t];e.inputNames.forEach((t,n)=>{const[r,,a]=Object(s.b)(t),o=i[r];if(null!=o.outputs){const t=o.outputs.indexOf(a);if(-1!==t){const a="".concat(r,":").concat(t);e.inputNames[n]=a}}e.inputs.push(o),o.children.push(e)})}),0===Object.keys(d).length?p.forEach(t=>{const e=i[t];0===e.children.length&&u.push(e)}):Object.keys(d).forEach(t=>{const[e]=Object(s.b)(t),n=i[e];null!=n&&(n.signatureKey=d[t],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=Object(s.b)(t),n=i[e];n&&(n.signatureKey=l[t],c.push(n))}):c=r;let h={};null!=t.library&&null!=t.library.function&&(h=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const f={nodes:i,inputs:c,outputs:u,weights:a,placeholders:r,signature:e,functions:h};return o.length>0&&(f.initNodes=o),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(o.a)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.slice(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=T(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=T(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=z(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=C(t.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=C(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=L(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=L(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=E(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=E(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=B(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=B(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=M(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=P(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=P(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=R(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=R(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=D(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=_(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(t.op))}return e[n.name]={value:a,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const a=[],o=[];t.signature.inputArg.forEach(t=>{const[e]=Object(s.b)(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:A(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,a.push(n),r[e]=n});Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach((t,n)=>{const[a,,o]=Object(s.b)(t),i=r[a];if(null!=i.outputs){const t=i.outputs.indexOf(o);if(-1!==t){const r="".concat(a,":").concat(t);e.inputNames[n]=r}}e.inputs.push(i),i.children.push(e)})});const i=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=Object(s.b)(i[t.name]),a=r[e];null!=a&&(a.defaultOutput=n,o.push(a))});const c=this.mapArgsToSignature(t);return{nodes:r,inputs:a,outputs:o,weights:n,placeholders:[],signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function I(e,n){const a=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const n=Object(r.env)().global;if("undefined"!==typeof n.atob)return n.atob(e);if("undefined"!==typeof t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return n?a:a.toLowerCase()}function T(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=t[e];return null!=a?I(a.s,r):n}function E(t,e,n){const r=t[e];return r?r.b:n}function C(t,e,n){const r=t[e]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function A(t){switch("string"===typeof t&&(t=a.a[t]),t){case a.a.DT_FLOAT:case a.a.DT_HALF:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function _(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function R(t,e,n){const r=t[e];return r&&r.type?A(r.type):n}function D(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>A(t)):n}function F(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"===typeof t.size?t.size:parseInt(t.size,10)):[]}function M(t,e,n){const r=t[e];return r&&r.shape?F(r.shape):n}function L(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"===typeof t?t:parseInt(t,10)):n}function z(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=t[e];return a&&a.list&&a.list.s?a.list.s.map(t=>I(t,r)):n}function P(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>F(t)):n}function B(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n(180).Buffer)},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return j})),n.d(e,"i",(function(){return S})),n.d(e,"c",(function(){return I})),n.d(e,"f",(function(){return T})),n.d(e,"e",(function(){return A})),n.d(e,"d",(function(){return _})),n.d(e,"k",(function(){return D})),n.d(e,"g",(function(){return F})),n.d(e,"h",(function(){return M})),n.d(e,"j",(function(){return L})),n.d(e,"b",(function(){return z}));var r=n(0),a=n(121),o=n(139),s=n(3),i=n(305),c=n(306),u=n(307),l=n(308),d=n(309),p=n(310),h=n(311),f=n(312),m=n(313),b=n(314),g=n(315),y=n(316),v=n(317),O=n(318),x=n(319),w=n(320),k=n(321);class j{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[i,c,u,l,d,p,h,g,b,f,y,v,O,x,w,k,m].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=t.node,r=[],a=[],o=[],i=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?a.push(t[e.name]):null!=e.input&&0!==e.input.length||o.push(t[e.name]),t),{});let c=[];const u=[];let l={},d={};null!=e&&(l=this.mapSignatureEntries(e.inputs),d=this.mapSignatureEntries(e.outputs));const p=Object.keys(i);p.forEach(t=>{const e=i[t];e.inputNames.forEach(t=>{const[n]=Object(s.b)(t);e.inputs.push(i[n]),i[n].children.push(e)})}),0===Object.keys(d).length?p.forEach(t=>{const e=i[t];0===e.children.length&&u.push(e)}):Object.keys(d).forEach(t=>{const[e]=Object(s.b)(t),n=i[e];null!=n&&(n.signatureKey=d[t],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=Object(s.b)(t),n=i[e];n&&(n.signatureKey=l[t],c.push(n))}):c=r;let h={};null!=t.library&&null!=t.library.function&&(h=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const f={nodes:i,inputs:c,outputs:u,weights:a,placeholders:r,signature:e,functions:h};return o.length>0&&(f.initNodes=o),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(o.a)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=S(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=S(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=M(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=T(t.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=T(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=F(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=F(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=I(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=I(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=z(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=D(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=L(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=L(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=A(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=_(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=C(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=C(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(t.op))}return e[n.name]={value:a,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const a=[],o=[];t.signature.inputArg.forEach(t=>{const[e]=Object(s.b)(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:E(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,a.push(n),r[e]=n});Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach(t=>{const[n]=Object(s.b)(t);e.inputs.push(r[n]),r[n].children.push(e)})});const i=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=Object(s.b)(i[t.name]),a=r[e];null!=a&&(a.defaultOutput=n,o.push(a))});const c=this.mapArgsToSignature(t);return{nodes:r,inputs:a,outputs:o,weights:n,placeholders:[],signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function N(e,n){const a=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const n=Object(r.Kd)().global;if("undefined"!==typeof n.atob)return n.atob(e);if("undefined"!==typeof t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return n?a:a.toLowerCase()}function S(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=t[e];return null!=a?N(a.s,r):n}function I(t,e,n){const r=t[e];return r?r.b:n}function T(t,e,n){const r=t[e]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function E(t){switch("string"===typeof t&&(t=a.a[t]),t){case a.a.DT_FLOAT:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function C(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function A(t,e,n){const r=t[e];return r&&r.type?E(r.type):n}function _(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>E(t)):n}function R(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"===typeof t.size?t.size:parseInt(t.size,10)):[]}function D(t,e,n){const r=t[e];return r&&r.shape?R(r.shape):n}function F(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"===typeof t?t:parseInt(t,10)):n}function M(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=t[e];return a&&a.list&&a.list.s?a.list.s.map(t=>N(t,r)):n}function L(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>R(t)):n}function z(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n(180).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({complex_:function(t,e){const n=Object(o.a)(t,"real","complex"),i=Object(o.a)(e,"imag","complex");s.e(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return r.a.runKernel(a.z,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(26),i=n(7);const c=Object(i.a)({logicalAnd_:function(t,e){const n=Object(o.a)(t,"a","logicalAnd","bool"),i=Object(o.a)(e,"b","logicalAnd","bool");Object(s.a)(n.shape,i.shape);const c={a:n,b:i};return r.a.runKernel(a.Eb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({stack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.b)(t,"tensors","stack","string_or_numeric");s.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&s.b(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const i=n,c={axis:e};return r.a.runKernel(a.cc,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({expandDims_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","expandDims","string_or_numeric");s.b(e<=n.rank,()=>"Axis must be <= rank of the tensor");const i={input:n},c={dim:e};return r.a.runKernel(a.ab,i,c)}})},function(t,e,n){"use strict";t.exports=n(348)},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e){(function(e){t.exports=e}).call(this,{})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(46),c=n(7),u=n(13);const l=Object(c.a)({conv2d_:function(t,e,n,c){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],p=arguments.length>6?arguments[6]:void 0;const h=Object(o.a)(t,"x","conv2d"),f=Object(o.a)(e,"filter","conv2d");let m=h,b=!1;3===h.rank&&(b=!0,m=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.b(4===m.rank,()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,".")),s.b(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")),null!=p&&s.b(s.v(c),()=>"Error in conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(p," but got pad ").concat(c,"."));const g="NHWC"===l?m.shape[3]:m.shape[1];s.b(g===f.shape[2],()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(f.shape[2],".")),s.b(i.h(n,d),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'"));const y={x:m,filter:f},v={strides:n,pad:c,dataFormat:l,dilations:d,dimRoundingMode:p},O=r.a.runKernel(a.C,y,v);return b?Object(u.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(9),a=n(12),o=n(83);function s(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){const e=s(t,"float32"),n=s(t,"float32");return Object(o.a)(e,n)}const n=Object(a.F)(Object(a.N)(t),e);return r.a.makeTensor(n,t,e)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({clone_:function(t){const e={x:Object(o.a)(t,"x","clone","string_or_numeric")};return r.a.runKernel(a.tb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({sqrt_:function(t){const e={x:Object(o.a)(t,"x","sqrt","float32")};return r.a.runKernel(a.Wc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({clone_:function(t){const e={x:Object(o.a)(t,"x","clone","string_or_numeric")};return r.a.runKernel(a.qb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({max_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Object(o.a)(t,"x","max"),i={x:s},c={reductionIndices:e,keepDims:n};return r.a.runKernel(a.Hb,i,c)}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return i})),n.d(e,"a",(function(){return c})),n.d(e,"c",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return d}));var r=n(35),a=n(187);const o=Object(a.a)("kernelRegistry",()=>new Map),s=Object(a.a)("gradRegistry",()=>new Map);function i(t,e){const n=p(t,e);return o.get(n)}function c(t){return s.get(t)}function u(t){const e=o.entries(),n=[];for(;;){const{done:r,value:a}=e.next();if(r)break;const[o,s]=a,[i]=o.split("_");i===t&&n.push(s)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=p(e,n);o.has(r)&&console.warn("The kernel '".concat(e,"' for backend ")+"'".concat(n,"' is already registered")),o.set(r,t)}function d(t){const{kernelName:e}=t;s.has(e)&&Object(r.b)().getBool("DEBUG")&&console.warn("Overriding the gradient for '".concat(e,"'")),s.set(e,t)}function p(t,e){return"".concat(e,"_").concat(t)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"d",(function(){return s})),n.d(e,"f",(function(){return c})),n.d(e,"c",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n(0);function a(t,e){return o(t,e)}function o(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(l(t)){const a=Array.isArray(t)?[]:{};r.add(t);for(const s in t){const i=o(t[s],e,n,r);a[s]=i}return r.delete(t),a}throw new Error("Can't recurse into non-iterable type: ".concat(t))}return n.set(t,a.value),a.value}function s(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c;return i(t,e)}function i(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(l(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const o in r){const r=i(t.map(t=>t[o]),e,n);a[o]=r}return n.delete(r),a}throw new Error("Can't recurse into non-iterable type: ".concat(r))}return a.value}function c(t){return null===t?null:l(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function u(t,e){const n=new Map;o(t,e,n);for(const a of Array.from(n.keys())){const t=n.get(a);if(r.kf.isPromise(t)){const e=await t;n.set(a,e)}}return o(t,e,n)}function l(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof r.Tc))}function d(t){return null==t||(null===(e=t)||"object"!==typeof e&&"function"!==typeof e)||Array.isArray(t)||"object"===typeof t&&t instanceof r.Tc||r.kf.isTypedArray(t);var e}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({log_:function(t){const e={x:Object(o.a)(t,"x","log")};return r.a.runKernel(a.Bb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({split_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s=Object(o.a)(t,"x","split"),i={x:s},c={numOrSizeSplits:e,axis:n};return r.a.runKernel(a.Ic,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(5),a=n(12),o=n(118);function s(t,e){Object(a.d)(t);const n=Object(r.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(o.a)(t,null,n,e)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"a",(function(){return o}));var r=n(32);function a(){Object(r.c)().getBool("IS_TEST")||Object(r.c)().getBool("PROD")||console.warn(...arguments)}function o(){Object(r.c)().getBool("IS_TEST")||Object(r.c)().getBool("PROD")||console.log(...arguments)}},function(t,e,n){"use strict";n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return u})),n.d(e,"d",(function(){return l})),n.d(e,"f",(function(){return d})),n.d(e,"e",(function(){return p})),n.d(e,"h",(function(){return h})),n.d(e,"g",(function(){return f})),n.d(e,"a",(function(){return m}));var r=n(32),a=n(145),o=n(101);const s=Object(a.a)("kernelRegistry",()=>new Map),i=Object(a.a)("gradRegistry",()=>new Map);function c(t,e){const n=b(t,e);return s.get(n)}function u(t){return i.get(t)}function l(t){const e=s.entries(),n=[];for(;;){const{done:r,value:a}=e.next();if(r)break;const[o,s]=a,[i]=o.split("_");i===t&&n.push(s)}return n}function d(t){const{kernelName:e,backendName:n}=t,r=b(e,n);s.has(r)&&o.b("The kernel '".concat(e,"' for backend ")+"'".concat(n,"' is already registered")),s.set(r,t)}function p(t){const{kernelName:e}=t;i.has(e)&&Object(r.c)().getBool("DEBUG")&&o.b("Overriding the gradient for '".concat(e,"'")),i.set(e,t)}function h(t,e){const n=b(t,e);if(!s.has(n))throw new Error("The kernel '".concat(t,"' for backend ")+"'".concat(e,"' is not registered"));s.delete(n)}function f(t){if(!i.has(t))throw new Error("The gradient '".concat(t,"' for backend is not registered"));i.delete(t)}function m(t,e){l(t).forEach(t=>{d(Object.assign({},t,{backendName:e}))})}function b(t,e){return"".concat(e,"_").concat(t)}},function(t,e,n){"use strict";var r,a;n.d(e,"a",(function(){return r})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(r||(r={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(a||(a={}))},function(t,e,n){"use strict";function r(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,a=t.length,o=0,s=!1;for(;r<a;){o=r+(a-r>>>1);const i=n(e,t[o]);i>0?r=o+1:(a=o,s=!i)}return s?r:-r-1}(t,e,n||a)}(t,e,n),o=r<0?-(r+1):r;t.splice(o,0,e)}function a(t,e){return t>e?1:t<e?-1:0}function o(t,e,n,r,a){return c(t,e,n,r,a,0)}function s(t,e,n,r,a,o){return c(t,e,n,r,a,0,!1,o,!0)}function i(t,e,n,r,a,o){return c(t,e,n,r,a,o,!0)}function c(t,e,n,a,o,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],p=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const h=[];for(let r=0;r<e.length;r++)e[r]>o&&h.push({score:e[r],boxIndex:r,suppressBeginIndex:0});h.sort(d);const f=s>0?-.5/s:0,m=[],b=[];for(;m.length<n&&h.length>0;){const e=h.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=e;if(n<o)break;let c=!1;for(let r=m.length-1;r>=i;--r){const n=u(t,s,m[r]);if(n>=a){c=!0;break}if(e.score=e.score*l(a,f,n),e.score<=o)break}e.suppressBeginIndex=m.length,c||(e.score===n?(m.push(s),b.push(e.score)):e.score>o&&r(h,e,d))}const g=m.length,y=n-g;c&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=b),p&&(v.validOutputs=g),v}function u(t,e,n){const r=t.subarray(4*e,4*e+4),a=t.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-o)*(c-s),f=(d-u)*(p-l);if(h<=0||f<=0)return 0;const m=Math.max(o,u),b=Math.max(s,l),g=Math.min(i,d),y=Math.min(c,p),v=Math.max(g-m,0)*Math.max(y-b,0);return v/(h+f-v)}function l(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function d(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return i}))},function(t,e,n){"use strict";function r(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,a=t.length,o=0,s=!1;for(;r<a;){o=r+(a-r>>>1);const i=n(e,t[o]);i>0?r=o+1:(a=o,s=!i)}return s?r:-r-1}(t,e,n||a)}(t,e,n),o=r<0?-(r+1):r;t.splice(o,0,e)}function a(t,e){return t>e?1:t<e?-1:0}function o(t,e,n,r,a){return c(t,e,n,r,a,0)}function s(t,e,n,r,a,o){return c(t,e,n,r,a,0,!1,o,!0)}function i(t,e,n,r,a,o){return c(t,e,n,r,a,o,!0)}function c(t,e,n,a,o,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],p=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const h=[];for(let r=0;r<e.length;r++)e[r]>o&&h.push({score:e[r],boxIndex:r,suppressBeginIndex:0});h.sort(d);const f=s>0?-.5/s:0,m=[],b=[];for(;m.length<n&&h.length>0;){const e=h.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=e;if(n<o)break;let c=!1;for(let r=m.length-1;r>=i;--r){const n=u(t,s,m[r]);if(n>=a){c=!0;break}if(e.score=e.score*l(a,f,n),e.score<=o)break}e.suppressBeginIndex=m.length,c||(e.score===n?(m.push(s),b.push(e.score)):e.score>o&&r(h,e,d))}const g=m.length,y=n-g;c&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=b),p&&(v.validOutputs=g),v}function u(t,e,n){const r=t.subarray(4*e,4*e+4),a=t.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-o)*(c-s),f=(d-u)*(p-l);if(h<=0||f<=0)return 0;const m=Math.max(o,u),b=Math.max(s,l),g=Math.min(i,d),y=Math.min(c,p),v=Math.max(g-m,0)*Math.max(y-b,0);return v/(h+f-v)}function l(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function d(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return i}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(8),a=n(11);function o(t,e,n){const o={shape:t,value:e,dtype:n};return r.a.runKernel(a.gb,{},o)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return o})),n.d(e,"d",(function(){return s})),n.d(e,"e",(function(){return i})),n.d(e,"a",(function(){return c})),n.d(e,"f",(function(){return u})),n.d(e,"h",(function(){return l})),n.d(e,"g",(function(){return d}));var r=n(21);function a(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function o(t,e,n){const r=t.length+e.length,a=[];let o=0,s=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(t[o++]):a.push(e[s++]);return a}function s(t,e){const n=[],r=t.length;for(let a=0;a<r;a++)-1===e.indexOf(a)&&n.push(t[a]);return[n,e.map(e=>t[e])]}function i(t,e){return o(t,e.map(t=>1),e)}function c(t,e,n){r.b(a(e,n),()=>"".concat(t," supports only inner-most axes for now. ")+"Got axes ".concat(e," and rank-").concat(n," input."))}function u(t,e){if(a(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function l(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function d(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7),c=n(13);const u=Object(i.a)({depthwiseConv2d_:function(t,e,n,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6?arguments[6]:void 0;const p=Object(o.a)(t,"x","depthwiseConv2d"),h=Object(o.a)(e,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s.b(4===f.rank,()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,".")),s.b(4===h.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(h.rank,".")),s.b(f.shape[3]===h.shape[2],()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(h.shape[2],".")),null!=d&&s.b(s.v(i),()=>"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(i,"."));const b={x:f,filter:h},g={strides:n,pad:i,dataFormat:u,dilations:l,dimRoundingMode:d},y=r.a.runKernel(a.O,b,g);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(26),c=n(7);const u=Object(c.a)({equal_:function(t,e){let n=Object(s.a)(t,"a","equal"),c=Object(s.a)(e,"b","equal");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.X,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(26),c=n(20),u=n(7);const l=Object(u.a)({maximum_:function(t,e){let n=Object(s.a)(t,"a","maximum"),u=Object(s.a)(e,"b","maximum");[n,u]=Object(o.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),u=Object(c.a)(u,"int32")),Object(i.a)(n.shape,u.shape);const l={a:n,b:u};return r.a.runKernel(a.Nb,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(12),o=n(83),s=n(91);function i(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){const e=i(t,"float32"),n=Object(s.a)(t,"float32");return Object(o.a)(e,n)}const n=Object(a.D)(Object(a.N)(t),e);return r.a.makeTensor(n,t,e)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({relu_:function(t){const e={x:Object(o.a)(t,"x","relu")};return r.a.runKernel(a.lc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({unstack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","unstack","string_or_numeric");s.b(e>=-n.shape.length&&e<n.shape.length,()=>"Axis = ".concat(e," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")"));const i={value:n},c={axis:e};return r.a.runKernel(a.Wc,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({step_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","step"),s={x:n},i={alpha:e};return r.a.runKernel(a.Mc,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(13);var c=n(7);const u=Object(c.a)({batchNorm_:function(t,e,n,c,u,l){null==l&&(l=.001);const d=Object(o.a)(t,"x","batchNorm"),p=Object(o.a)(e,"mean","batchNorm"),h=Object(o.a)(n,"variance","batchNorm");let f,m;null!=u&&(f=Object(o.a)(u,"scale","batchNorm")),null!=c&&(m=Object(o.a)(c,"offset","batchNorm")),s.b(p.rank===h.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s.b(null==m||p.rank===m.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s.b(null==f||p.rank===f.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const b={x:function(t){let e;return e=0===t.rank||1===t.rank?Object(i.a)(t,[1,1,1,t.size]):2===t.rank?Object(i.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(d),scale:f,offset:m,mean:p,variance:h},g={varianceEpsilon:l},y=r.a.runKernel(a.ib,b,g);return Object(i.a)(y,d.shape)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(2),a=n(72);function o(t,e,n){const o=Object(r.c)(t,n);return Object(a.a)(t,e,o,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({sigmoid_:function(t){const e={x:Object(o.a)(t,"x","sigmoid","float32")};return r.a.runKernel(a.Ic,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(9),a=n(12),o=n(17);function s(t,e,n,s){if(null==s&&(s=Object(a.r)(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(a.c)(e);const t=Object(a.N)(e),r=Object(a.N)(n);Object(a.b)(t===r,()=>"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(t," values but has ").concat(r));for(let o=0;o<n.length;++o){const t=n[o],r=o!==n.length-1||t!==Object(a.N)(e.slice(o));Object(a.b)(n[o]===e[o]||!r,()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(e,"). "))}}return Object(a.A)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?Object(o.toTypedArray)(t,s):Object(a.m)(t,[],!0),r.a.makeTensor(t,e,s)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({tile_:function(t,e){const n=Object(o.a)(t,"x","tile","string_or_numeric");s.b(n.rank===e.length,()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(e,"."));const i={x:n},c={reps:e};return r.a.runKernel(a.Sc,i,c)}})},function(t,e,n){var r=n(372),a=n(373),o=n(374),s=n(375),i=n(376),c=n(377),u=n(378);u.alea=r,u.xor128=a,u.xorwow=o,u.xorshift7=s,u.xor4096=i,u.tychei=c,t.exports=u},function(t,e,n){"use strict";var r,a;n.d(e,"a",(function(){return r})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(a||(a={}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(8),a=n(11),o=n(34),s=n(2),i=n(6);const c=Object(i.b)({pow_:function(t,e){let n=Object(s.a)(t,"base","pow"),i=Object(s.a)(e,"exp","pow");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.kc,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({real_:function(t){const e={input:Object(o.a)(t,"input","real")};return r.a.runKernel(a.qc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({mean_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Object(o.a)(t,"x","mean"),i={x:s},c={axis:e,keepDims:n};return r.a.runKernel(a.Ob,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({reverse_:function(t,e){const n={x:Object(o.a)(t,"x","reverse")},s={dims:e};return r.a.runKernel(a.sc,n,s)}})},function(t,e,n){"use strict";var r,a,o,s,i;n.d(e,"a",(function(){return r})),n.d(e,"c",(function(){return u})),n.d(e,"b",(function(){return l})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(o||(o={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(s||(s={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(i||(i={}));const c={float32:s,int32:a,bool:o,complex64:i};function u(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return c[t][e]}function l(t){return u(t,"int32")}},function(t,e,n){"use strict";var r,a,o,s,i;n.d(e,"b",(function(){return u})),n.d(e,"a",(function(){return l})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(o||(o={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(s||(s={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(i||(i={}));const c={float32:s,int32:a,bool:o,complex64:i};function u(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return c[t][e]}function l(t){return u(t,"int32")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({imag_:function(t){const e={input:Object(o.a)(t,"input","imag")};return r.a.runKernel(a.ub,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({relu_:function(t){const e={x:Object(o.a)(t,"x","relu")};return r.a.runKernel(a.tc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(26),c=n(20),u=n(7);const l=Object(u.a)({minimum_:function(t,e){let n=Object(s.a)(t,"a","minimum"),u=Object(s.a)(e,"b","minimum");[n,u]=Object(o.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),u=Object(c.a)(u,"int32")),Object(i.a)(n.shape,u.shape);const l={a:n,b:u};return r.a.runKernel(a.Qb,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(26),c=n(7);const u=Object(c.a)({notEqual_:function(t,e){let n=Object(s.a)(t,"a","notEqual"),c=Object(s.a)(e,"b","notEqual");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.Zb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(26),c=n(7);const u=Object(c.a)({squaredDifference_:function(t,e){let n=Object(s.a)(t,"a","squaredDifference"),c=Object(s.a)(e,"b","squaredDifference");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.Lc,u,{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({spaceToBatchND_:function(t,e,n){const i=Object(o.a)(t,"x","spaceToBatchND");s.b(i.rank>=1+e.length,()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(e.length)),s.b(n.length===e.length,()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(e.length)),s.b(i.shape.reduce((t,r,a)=>a>0&&a<=e.length?t&&(r+n[a-1][0]+n[a-1][1])%e[a-1]===0:t,!0),()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(e.toString()));const c={x:i},u={blockShape:e,paddings:n};return r.a.runKernel(a.Gc,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(26),c=n(7);const u=Object(c.a)({less_:function(t,e){let n=Object(s.a)(t,"a","less"),c=Object(s.a)(e,"b","less");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.yb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({logicalNot_:function(t){const e={x:Object(o.a)(t,"x","logicalNot","bool")};return r.a.runKernel(a.Fb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({batchToSpaceND_:function(t,e,n){const i=Object(o.a)(t,"x","batchToSpaceND"),c=e.reduce((t,e)=>t*e);s.b(i.rank>=1+e.length,()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(e.length)),s.b(n.length===e.length,()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(e.length)),s.b(i.shape[0]%c===0,()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(c));const u={x:i},l={blockShape:e,crops:n};return r.a.runKernel(a.t,u,l)}})},function(t,e){var n,r,a=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function i(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"===typeof setTimeout?setTimeout:o}catch(t){n=o}try{r="function"===typeof clearTimeout?clearTimeout:s}catch(t){r=s}}();var c,u=[],l=!1,d=-1;function p(){l&&c&&(l=!1,c.length?u=c.concat(u):d=-1,u.length&&h())}function h(){if(!l){var t=i(p);l=!0;for(var e=u.length;e;){for(c=u,u=[];++d<e;)c&&c[d].run();d=-1,e=u.length}c=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===s||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function m(){}a.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];u.push(new f(t,e)),1!==u.length||l||i(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(t){return[]},a.binding=function(t){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(t){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));const r={};function a(t){return r[t]}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));const r={};function a(t){return r[t]}},function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n(8),a=n(38),o=n(11),s=n(2),i=n(21),c=n(74),u=n(128),l=n(73),d=n(6),p=n(123);const h=Object(d.b)({transpose_:function(t,e,n){const d=Object(s.a)(t,"x","transpose");if(null==e&&(e=d.shape.map((t,e)=>e).reverse()),i.b(d.rank===e.length,()=>"Error in transpose: rank of input ".concat(d.rank," ")+"must match length of perm ".concat(e,".")),e.forEach(t=>{i.b(t>=0&&t<d.rank,()=>"All entries in 'perm' must be between 0 and ".concat(d.rank-1)+" but got ".concat(e))}),d.rank<=1)return d.clone();const h={x:d},f={perm:e};return"complex64"===d.dtype?Object(a.t)(()=>{let t=Object(p.a)(d),e=Object(u.a)(d);return t=r.a.runKernel(o.ld,{x:t},f),e=r.a.runKernel(o.ld,{x:e},f),n&&(e=Object(l.a)(e)),Object(c.a)(t,e)}):r.a.runKernel(o.ld,h,f)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({min_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Object(o.a)(t,"x","min"),i={x:s},c={axis:e,keepDims:n};return r.a.runKernel(a.Pb,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(5),s=n(94),i=n(7),c=n(13);const u=Object(i.a)({broadcastTo_:function(t,e){let n=Object(o.a)(t,"broadcastTo","x");const i=n.shape;if(e.some(t=>!(t>0)||t%1!==0))throw new Error("broadcastTo(): Invalid broadcast shape [".concat(e,"]."));if(e.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(n.rank,"."));if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Object(c.a)(n,t)}const u=n.shape,l=Array.from(e);for(let r=e.length-1;r>=0;r--)if(u[r]===e[r])l[r]=1;else if(1!==n.shape[r])throw new Error("broadcastTo(): [".concat(i,"] cannot be broadcast to [").concat(e,"]."));if(0===l.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return Object(s.a)(n);const d={x:n},p={reps:l};return r.a.runKernel(a.Sc,d,p)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(12),s=n(7);const i=Object(s.a)({ifft_:function(t){Object(o.b)("complex64"===t.dtype,()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,"."));const e={input:t};return r.a.runKernel(a.pb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({real_:function(t){const e={input:Object(o.a)(t,"input","real")};return r.a.runKernel(a.ic,e)}})},function(t,e,n){"use strict";(function(t,r){let a;function o(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof t)e=t;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function s(t,e){const n=function(){const t=o();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return s}))}).call(this,n(178),n(137))},function(t,e,n){"use strict";n.d(e,"b",(function(){return a.a})),n.d(e,"c",(function(){return u})),n.d(e,"d",(function(){return l})),n.d(e,"e",(function(){return d.a})),n.d(e,"f",(function(){return h})),n.d(e,"g",(function(){return f})),n.d(e,"h",(function(){return m})),n.d(e,"i",(function(){return b})),n.d(e,"j",(function(){return g})),n.d(e,"k",(function(){return y})),n.d(e,"l",(function(){return v})),n.d(e,"m",(function(){return O})),n.d(e,"n",(function(){return w})),n.d(e,"o",(function(){return k})),n.d(e,"p",(function(){return I})),n.d(e,"q",(function(){return T})),n.d(e,"r",(function(){return M})),n.d(e,"w",(function(){return L})),n.d(e,"s",(function(){return z})),n.d(e,"t",(function(){return P})),n.d(e,"u",(function(){return B})),n.d(e,"v",(function(){return V})),n.d(e,"x",(function(){return W})),n.d(e,"z",(function(){return U})),n.d(e,"A",(function(){return G})),n.d(e,"B",(function(){return H.a})),n.d(e,"C",(function(){return j.a})),n.d(e,"D",(function(){return q})),n.d(e,"E",(function(){return X})),n.d(e,"F",(function(){return E.a})),n.d(e,"G",(function(){return Y.a})),n.d(e,"H",(function(){return C})),n.d(e,"I",(function(){return Q})),n.d(e,"J",(function(){return J})),n.d(e,"K",(function(){return Z})),n.d(e,"L",(function(){return $})),n.d(e,"M",(function(){return et})),n.d(e,"N",(function(){return tt})),n.d(e,"O",(function(){return rt})),n.d(e,"P",(function(){return at})),n.d(e,"Q",(function(){return st})),n.d(e,"R",(function(){return it})),n.d(e,"S",(function(){return ct})),n.d(e,"U",(function(){return ut})),n.d(e,"V",(function(){return lt})),n.d(e,"W",(function(){return dt})),n.d(e,"X",(function(){return pt})),n.d(e,"Y",(function(){return ht})),n.d(e,"Z",(function(){return ft})),n.d(e,"ab",(function(){return mt})),n.d(e,"bb",(function(){return bt.a})),n.d(e,"cb",(function(){return xt})),n.d(e,"db",(function(){return wt})),n.d(e,"fb",(function(){return kt})),n.d(e,"gb",(function(){return jt.a})),n.d(e,"ib",(function(){return yt})),n.d(e,"jb",(function(){return Nt})),n.d(e,"kb",(function(){return Mt})),n.d(e,"lb",(function(){return Lt})),n.d(e,"mb",(function(){return zt})),n.d(e,"nb",(function(){return Pt})),n.d(e,"ob",(function(){return Vt})),n.d(e,"qb",(function(){return K.a})),n.d(e,"rb",(function(){return Wt})),n.d(e,"sb",(function(){return Ut.a})),n.d(e,"ub",(function(){return Gt})),n.d(e,"wb",(function(){return Ht})),n.d(e,"xb",(function(){return qt})),n.d(e,"zb",(function(){return Kt.a})),n.d(e,"Db",(function(){return Xt})),n.d(e,"Eb",(function(){return Yt})),n.d(e,"Fb",(function(){return Qt})),n.d(e,"Gb",(function(){return Jt.a})),n.d(e,"Hb",(function(){return Zt})),n.d(e,"Ib",(function(){return $t})),n.d(e,"Kb",(function(){return te})),n.d(e,"Lb",(function(){return ee})),n.d(e,"Mb",(function(){return ne})),n.d(e,"Nb",(function(){return re})),n.d(e,"Ob",(function(){return ie})),n.d(e,"Pb",(function(){return ue})),n.d(e,"Qb",(function(){return le})),n.d(e,"Rb",(function(){return de})),n.d(e,"Sb",(function(){return pe})),n.d(e,"Tb",(function(){return he})),n.d(e,"Ub",(function(){return fe})),n.d(e,"Wb",(function(){return be})),n.d(e,"Xb",(function(){return A.a})),n.d(e,"Yb",(function(){return It})),n.d(e,"Zb",(function(){return ge})),n.d(e,"ac",(function(){return ye})),n.d(e,"bc",(function(){return ve})),n.d(e,"cc",(function(){return Oe.a})),n.d(e,"dc",(function(){return xe})),n.d(e,"ec",(function(){return Ne})),n.d(e,"fc",(function(){return Tt})),n.d(e,"gc",(function(){return Se})),n.d(e,"hc",(function(){return Ie})),n.d(e,"ic",(function(){return Te})),n.d(e,"jc",(function(){return Ee})),n.d(e,"lc",(function(){return _.a})),n.d(e,"mc",(function(){return Ce})),n.d(e,"nc",(function(){return Ae})),n.d(e,"oc",(function(){return oe.a})),n.d(e,"qc",(function(){return _e})),n.d(e,"rc",(function(){return Re.a})),n.d(e,"sc",(function(){return ke})),n.d(e,"tc",(function(){return De})),n.d(e,"vc",(function(){return Fe})),n.d(e,"wc",(function(){return Me})),n.d(e,"xc",(function(){return Le})),n.d(e,"yc",(function(){return ze})),n.d(e,"zc",(function(){return Pe})),n.d(e,"Ac",(function(){return Be})),n.d(e,"Bc",(function(){return We})),n.d(e,"Cc",(function(){return Et.a})),n.d(e,"Dc",(function(){return Ue.a})),n.d(e,"Ec",(function(){return Ge.a})),n.d(e,"Fc",(function(){return He})),n.d(e,"Gc",(function(){return qe})),n.d(e,"Hc",(function(){return Ke})),n.d(e,"Ic",(function(){return Xe})),n.d(e,"Jc",(function(){return $e})),n.d(e,"Kc",(function(){return tn})),n.d(e,"Lc",(function(){return en})),n.d(e,"Mc",(function(){return nn})),n.d(e,"Nc",(function(){return rn})),n.d(e,"Oc",(function(){return an.a})),n.d(e,"Pc",(function(){return on})),n.d(e,"Qc",(function(){return sn.a})),n.d(e,"Rc",(function(){return cn.a})),n.d(e,"Sc",(function(){return S.a})),n.d(e,"Tc",(function(){return un})),n.d(e,"Uc",(function(){return ln})),n.d(e,"Vc",(function(){return dn})),n.d(e,"Wc",(function(){return pn})),n.d(e,"Xc",(function(){return hn})),n.d(e,"Zc",(function(){return fn})),n.d(e,"ad",(function(){return mn})),n.d(e,"bd",(function(){return Ct.a})),n.d(e,"ed",(function(){return bn})),n.d(e,"fd",(function(){return gn})),n.d(e,"gd",(function(){return yn})),n.d(e,"hd",(function(){return R.a})),n.d(e,"id",(function(){return vn})),n.d(e,"kd",(function(){return On})),n.d(e,"ld",(function(){return xn})),n.d(e,"md",(function(){return D})),n.d(e,"nd",(function(){return wn})),n.d(e,"od",(function(){return kn})),n.d(e,"pd",(function(){return jn})),n.d(e,"qd",(function(){return Nn})),n.d(e,"rd",(function(){return Sn})),n.d(e,"sd",(function(){return se})),n.d(e,"td",(function(){return Ve})),n.d(e,"pb",(function(){return In})),n.d(e,"yb",(function(){return Tn})),n.d(e,"Cb",(function(){return En})),n.d(e,"Yc",(function(){return An})),n.d(e,"xd",(function(){return Cn})),n.d(e,"yd",(function(){return At.a})),n.d(e,"zd",(function(){return _t.a})),n.d(e,"Ad",(function(){return _n})),n.d(e,"Bd",(function(){return Rn})),n.d(e,"Cd",(function(){return Dn})),n.d(e,"Dd",(function(){return Fn.a})),n.d(e,"Ed",(function(){return Mn})),n.d(e,"Gd",(function(){return ce.a})),n.d(e,"Hd",(function(){return Rt.a})),n.d(e,"Id",(function(){return Ln})),n.d(e,"Jd",(function(){return F})),n.d(e,"Kd",(function(){return zn.a})),n.d(e,"Ld",(function(){return Bn})),n.d(e,"Md",(function(){return Vn})),n.d(e,"Nd",(function(){return Wn.a})),n.d(e,"Od",(function(){return Un})),n.d(e,"Pd",(function(){return Gn})),n.d(e,"Qd",(function(){return Hn})),n.d(e,"Rd",(function(){return Bt})),n.d(e,"Sd",(function(){return qn})),n.d(e,"Ud",(function(){return Kn})),n.d(e,"Vd",(function(){return Xn})),n.d(e,"Wd",(function(){return Yn})),n.d(e,"Xd",(function(){return Qn})),n.d(e,"Yd",(function(){return Jn})),n.d(e,"Zd",(function(){return Zn})),n.d(e,"ae",(function(){return vt})),n.d(e,"be",(function(){return tr})),n.d(e,"ce",(function(){return we})),n.d(e,"de",(function(){return Ot.a})),n.d(e,"y",(function(){return er})),n.d(e,"Td",(function(){return nr.a})),n.d(e,"pc",(function(){return Ft})),n.d(e,"kc",(function(){return rr})),n.d(e,"cd",(function(){return or})),n.d(e,"dd",(function(){return me})),n.d(e,"vd",(function(){return ir})),n.d(e,"vb",(function(){return cr})),n.d(e,"eb",(function(){return ur})),n.d(e,"hb",(function(){return lr})),n.d(e,"T",(function(){return dr})),n.d(e,"Bb",(function(){return pr})),n.d(e,"uc",(function(){return c.b})),n.d(e,"a",(function(){return c.a})),n.d(e,"Ab",(function(){return ha})),n.d(e,"Jb",(function(){return fa})),n.d(e,"Vb",(function(){return ma})),n.d(e,"wd",(function(){return da})),n.d(e,"tb",(function(){return r})),n.d(e,"jd",(function(){return pa})),n.d(e,"ud",(function(){return ba})),n.d(e,"Fd",(function(){return ga}));var r={};n.r(r),n.d(r,"conv2d",(function(){return mr})),n.d(r,"depthwiseConv2d",(function(){return yr})),n.d(r,"matMul",(function(){return vr}));var a=n(65),o=n(8),s=n(11),i=n(2),c=n(6);const u=Object(c.b)({acos_:function(t){const e={x:Object(i.a)(t,"x","acos")};return o.a.runKernel(s.b,e)}});const l=Object(c.b)({acosh_:function(t){const e={x:Object(i.a)(t,"x","acosh")};return o.a.runKernel(s.c,e)}});var d=n(29),p=n(21);const h=Object(c.b)({addN_:function(t){p.b(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),p.b(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(t.length));const e=t.map((t,e)=>Object(i.a)(t,"tensors".concat(e),"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!p.a(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return o.a.runKernel(s.e,r)}});const f=Object(c.b)({all_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Object(i.a)(t,"x","all","bool"),a={x:r},c={axis:e,keepDims:n};return o.a.runKernel(s.f,a,c)}});const m=Object(c.b)({any_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Object(i.a)(t,"x","any","bool"),a={x:r},c={axis:e,keepDims:n};return o.a.runKernel(s.g,a,c)}});const b=Object(c.b)({argMax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(i.a)(t,"x","argMax"),r={x:n},a={axis:e};return o.a.runKernel(s.h,r,a)}});const g=Object(c.b)({argMin_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(i.a)(t,"x","argMin"),r={x:n},a={axis:e};return o.a.runKernel(s.i,r,a)}});const y=Object(c.b)({asin_:function(t){const e={x:Object(i.a)(t,"x","asin")};return o.a.runKernel(s.j,e)}});const v=Object(c.b)({asinh_:function(t){const e={x:Object(i.a)(t,"x","asinh")};return o.a.runKernel(s.k,e)}});const O=Object(c.b)({atan_:function(t){const e={x:Object(i.a)(t,"x","atan")};return o.a.runKernel(s.l,e)}});var x=n(34);const w=Object(c.b)({atan2_:function(t,e){let n=Object(i.a)(t,"a","atan2"),r=Object(i.a)(e,"b","atan2");[n,r]=Object(x.makeTypesMatch)(n,r);const a={a:n,b:r};return o.a.runKernel(s.m,a)}});const k=Object(c.b)({atanh_:function(t){const e={x:Object(i.a)(t,"x","atanh")};return o.a.runKernel(s.n,e)}});var j=n(43),N=n(44),S=n(15);const I=Object(c.b)({avgPool_:function(t,e,n,r,a){const c=Object(i.a)(t,"x","avgPool","float32");p.b(N.i(n,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"));let u=c,l=!1;3===c.rank&&(l=!0,u=Object(S.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),p.b(4===u.rank,()=>"Error in avgPool: x must be rank 4 but got rank ".concat(u.rank,".")),N.a("avgPool",r,a);const d={x:u},h={filterSize:e,strides:n,pad:r,dimRoundingMode:a};let f=o.a.runKernel(s.o,d,h);return f=Object(j.a)(f,c.dtype),l?Object(S.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const T=Object(c.b)({avgPool3d_:function(t,e,n,r,a){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const u=Object(i.a)(t,"x","avgPool3d","float32");let l=u,d=!1;4===u.rank&&(d=!0,l=Object(S.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),p.b(5===l.rank,()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(l.rank,".")),p.b("NDHWC"===c,()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(c)),Object(N.a)("avgPool3d",r,a);const h={x:l},f={filterSize:e,strides:n,pad:r,dimRoundingMode:a,dataFormat:c};let m=o.a.runKernel(s.p,h,f);return m=Object(j.a)(m,l.dtype),d?Object(S.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(92);const C=Object(c.b)({concat_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;Object(p.b)(t.length>=1,()=>"Pass at least one tensor to concat");const n=Object(i.b)(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))}),1===n.length)return Object(E.a)(n[0]);const r=n,a={axis:e};return o.a.runKernel(s.C,r,a)}});var A=n(47),_=n(19),R=n(117);const D=Object(c.b)({slice_:function(t,e,n){const r=Object(i.a)(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},c={begin:e,size:n};return o.a.runKernel(s.Mc,a,c)}});const F=Object(c.b)({tanh_:function(t){const e={x:Object(i.a)(t,"x","tanh","float32")};return o.a.runKernel(s.hd,e)}});const M=Object(c.b)({basicLSTMCell_:function(t,e,n,r,a,o){const s=Object(i.a)(t,"forgetBias","basicLSTMCell"),c=Object(i.a)(e,"lstmKernel","basicLSTMCell"),u=Object(i.a)(n,"lstmBias","basicLSTMCell"),l=Object(i.a)(r,"data","basicLSTMCell"),p=Object(i.a)(a,"c","basicLSTMCell"),h=Object(i.a)(o,"h","basicLSTMCell"),f=C([l,h],1),m=Object(A.a)(f,c),b=Object(d.a)(m,u),g=b.shape[0],y=b.shape[1]/4,v=[g,y],O=D(b,[0,0],v),x=D(b,[0,y],v),w=D(b,[0,2*y],v),k=D(b,[0,3*y],v),j=Object(d.a)(Object(_.a)(Object(R.a)(O),F(x)),Object(_.a)(p,Object(R.a)(Object(d.a)(s,w))));return[j,Object(_.a)(F(j),Object(R.a)(k))]}});const L=Object(c.b)({batchToSpaceND_:function(t,e,n){const r=Object(i.a)(t,"x","batchToSpaceND"),a=e.reduce((t,e)=>t*e);p.b(r.rank>=1+e.length,()=>"input rank is ".concat(r.rank," but should be > than blockShape.length ").concat(e.length)),p.b(n.length===e.length,()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(e.length)),p.b(r.shape[0]%a===0,()=>"input tensor batch is ".concat(r.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(a));const c={x:r},u={blockShape:e,crops:n};return o.a.runKernel(s.t,c,u)}});const z=Object(c.b)({batchNorm_:function(t,e,n,r,a,c){null==c&&(c=.001);const u=Object(i.a)(t,"x","batchNorm"),l=Object(i.a)(e,"mean","batchNorm"),d=Object(i.a)(n,"variance","batchNorm");let h,f;null!=a&&(h=Object(i.a)(a,"scale","batchNorm")),null!=r&&(f=Object(i.a)(r,"offset","batchNorm")),p.b(l.rank===d.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),p.b(null==f||l.rank===f.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),p.b(null==h||l.rank===h.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const m={x:function(t){let e;return e=0===t.rank||1===t.rank?Object(S.a)(t,[1,1,1,t.size]):2===t.rank?Object(S.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(S.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(u),scale:h,offset:f,mean:l,variance:d},b={varianceEpsilon:c},g=o.a.runKernel(s.lb,m,b);return Object(S.a)(g,u.shape)}});const P=Object(c.b)({batchNorm2d_:function(t,e,n,r,a,o){const s=Object(i.a)(t,"x","batchNorm"),c=Object(i.a)(e,"mean","batchNorm"),u=Object(i.a)(n,"variance","batchNorm");let l,d;return null!=a&&(l=Object(i.a)(a,"scale","batchNorm")),null!=r&&(d=Object(i.a)(r,"offset","batchNorm")),p.b(2===s.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(s.rank,".")),p.b(2===c.rank||1===c.rank,()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(c.rank,".")),p.b(2===u.rank||1===u.rank,()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&p.b(2===l.rank||1===l.rank,()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,".")),null!=d&&p.b(2===d.rank||1===d.rank,()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(d.rank,".")),z(s,c,u,d,l,o)}});const B=Object(c.b)({batchNorm3d_:function(t,e,n,r,a,o){const s=Object(i.a)(t,"x","batchNorm"),c=Object(i.a)(e,"mean","batchNorm"),u=Object(i.a)(n,"variance","batchNorm");let l,d;return null!=a&&(l=Object(i.a)(a,"scale","batchNorm")),null!=r&&(d=Object(i.a)(r,"offset","batchNorm")),p.b(3===s.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(s.rank,".")),p.b(3===c.rank||1===c.rank,()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(c.rank,".")),p.b(3===u.rank||1===u.rank,()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&p.b(3===l.rank||1===l.rank,()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,".")),null!=d&&p.b(3===d.rank||1===d.rank,()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(d.rank,".")),z(s,c,u,d,l,o)}});const V=Object(c.b)({batchNorm4d_:function(t,e,n,r,a,o){const s=Object(i.a)(t,"x","batchNorm"),c=Object(i.a)(e,"mean","batchNorm"),u=Object(i.a)(n,"variance","batchNorm");let l,d;return null!=a&&(l=Object(i.a)(a,"scale","batchNorm")),null!=r&&(d=Object(i.a)(r,"offset","batchNorm")),p.b(4===s.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(s.rank,".")),p.b(4===c.rank||1===c.rank,()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(c.rank,".")),p.b(4===u.rank||1===u.rank,()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&p.b(4===l.rank||1===l.rank,()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,".")),null!=d&&p.b(4===d.rank||1===d.rank,()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(d.rank,".")),z(s,c,u,d,l,o)}});const W=Object(c.b)({bincount_:function(t,e,n){const r=Object(i.a)(t,"x","bincount"),a=Object(i.a)(e,"weights","bincount");p.b("int32"===r.dtype,()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(r.dtype)),p.b(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),p.b(a.size===r.size||0===a.size,()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(r.shape,", weights shape: ")+"".concat(a.shape,"."));const c={x:r,weights:a},u={size:n};return o.a.runKernel(s.u,c,u)}});const U=Object(c.b)({broadcastArgs_:function(t,e){const n=Object(i.a)(t,"s0","broadcastArgs","int32"),r=Object(i.a)(e,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==r.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(r.rank));const a={s0:n,s1:r};return o.a.runKernel(s.v,a)}});const G=Object(c.b)({broadcastTo_:function(t,e){let n=Object(i.a)(t,"broadcastTo","x");const r=n.shape;if(e.some(t=>!(t>0)||t%1!==0))throw new Error("broadcastTo(): Invalid broadcast shape [".concat(e,"]."));if(e.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(n.rank,"."));if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Object(S.a)(n,t)}const a=n.shape,c=Array.from(e);for(let o=e.length-1;o>=0;o--)if(a[o]===e[o])c[o]=1;else if(1!==n.shape[o])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(e,"]."));if(0===c.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return Object(E.a)(n);const u={x:n},l={reps:c};return o.a.runKernel(s.id,u,l)}});var H=n(71);const q=Object(c.b)({ceil_:function(t){const e={x:Object(i.a)(t,"x","ceil","float32")};return o.a.runKernel(s.y,e)}});var K=n(106);const X=Object(c.b)({clipByValue_:function(t,e,n){const r=Object(i.a)(t,"x","clipByValue");if(p.b(e<=n,()=>"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(n,").")),e===n)return Object(K.a)(r.shape,e,r.dtype);const a={x:r},c={clipValueMin:e,clipValueMax:n};return o.a.runKernel(s.z,a,c)}});var Y=n(74);const Q=Object(c.b)({concat1d_:function(t){return C(t,0)}});const J=Object(c.b)({concat2d_:function(t,e){return C(t,e)}});const Z=Object(c.b)({concat3d_:function(t,e){return C(t,e)}});const $=Object(c.b)({concat4d_:function(t,e){return C(t,e)}});const tt=Object(c.b)({conv2d_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0;const l=Object(i.a)(t,"x","conv2d","float32"),d=Object(i.a)(e,"filter","conv2d","float32");let h=l,f=!1;3===l.rank&&(f=!0,h=Object(S.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),p.b(4===h.rank,()=>"Error in conv2d: input must be rank 4, but got rank ".concat(h.rank,".")),p.b(4===d.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(d.rank,".")),N.a("conv2d",r,u);const m="NHWC"===a?h.shape[3]:h.shape[1];p.b(m===d.shape[2],()=>"Error in conv2d: depth of input (".concat(m,") must match ")+"input depth for filter ".concat(d.shape[2],".")),p.b(N.i(n,c),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(c,"'"));const b={x:h,filter:d},g={strides:n,pad:r,dataFormat:a,dilations:c,dimRoundingMode:u},y=o.a.runKernel(s.D,b,g);return f?Object(S.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});const et=Object(c.b)({conv1d_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,s=arguments.length>6?arguments[6]:void 0;const c=Object(i.a)(t,"x","conv1d"),u=Object(i.a)(e,"filter","conv1d");let l=c,d=!1;2===c.rank&&(d=!0,l=Object(S.a)(c,[1,c.shape[0],c.shape[1]])),p.b(3===l.rank,()=>"Error in conv1d: input must be rank 3, but got rank ".concat(l.rank,".")),p.b(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(u.rank,".")),N.a("conv1d",r,s),p.b(l.shape[2]===u.shape[1],()=>"Error in conv1d: depth of input (".concat(l.shape[2],") must match ")+"input depth for filter ".concat(u.shape[1],".")),p.b(N.i(n,o),()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(o,"'")),p.b("NWC"===a,()=>"Error in conv1d: got dataFormat of ".concat(a," but only NWC is currently supported."));const h=Object(S.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]),f=Object(S.a)(l,[l.shape[0],1,l.shape[1],l.shape[2]]),m=[1,n],b=[1,o],g="NHWC",y=tt(f,h,m,r,g,b,s);return d?Object(S.a)(y,[y.shape[2],y.shape[3]]):Object(S.a)(y,[y.shape[0],y.shape[2],y.shape[3]])}});const nt=Object(c.b)({conv2DBackpropInput_:function(t,e,n,r,a){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",c=arguments.length>6?arguments[6]:void 0;p.b(t.length===e.rank,()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match"));let u=t,l=e,d=!1;3===e.rank&&(d=!0,l=Object(S.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),u=[1,t[0],t[1],t[2]]),p.b(4===u.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(u.length,".")),p.b(4===l.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(l.rank)),p.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank));const h="NHWC"===i?u[3]:u[1],f="NHWC"===i?l.shape[3]:l.shape[1];p.b(h===n.shape[2],()=>"Error in conv2dDerInput: depth of input (".concat(h,") must ")+"match input depth for filter ".concat(n.shape[2],".")),p.b(f===n.shape[3],()=>"Error in conv2dDerInput: depth of output (".concat(f,") must ")+"match output depth for filter ".concat(n.shape[3],".")),N.a("conv2dDerInput",a,c);const m={dy:l,filter:n},b={strides:r,pad:a,dataFormat:i,dimRoundingMode:c,inputShape:u},g=o.a.runKernel(s.F,m,b);return d?Object(S.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const rt=Object(c.b)({conv2dTranspose_:function(t,e,n,r,a,o){const s=Object(i.a)(t,"x","conv2dTranspose"),c=Object(i.a)(e,"filter","conv2dTranspose");return nt(n,s,c,r,a,"NHWC",o)}});const at=Object(c.b)({conv3d_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const u=Object(i.a)(t,"x","conv3d"),l=Object(i.a)(e,"filter","conv3d");let d=u,h=!1;4===u.rank&&(h=!0,d=Object(S.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),p.b(5===d.rank,()=>"Error in conv3d: input must be rank 5, but got rank ".concat(d.rank,".")),p.b(5===l.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(l.rank,".")),p.b(d.shape[4]===l.shape[3],()=>"Error in conv3d: depth of input (".concat(d.shape[4],") must match ")+"input depth for filter ".concat(l.shape[3],".")),p.b(Object(N.i)(n,c),()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(c,"'")),p.b("NDHWC"===a,()=>"Error in conv3d: got dataFormat of ".concat(a," but only NDHWC is currently supported."));const f={x:d,filter:l},m={strides:n,pad:r,dataFormat:a,dilations:c},b=o.a.runKernel(s.G,f,m);return h?Object(S.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}});const ot=Object(c.b)({conv3DBackpropInput_:function(t,e,n,r,a){p.b(t.length===e.rank,()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match"));let i=t,c=e,u=!1;4===e.rank&&(u=!0,c=Object(S.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],d=c.shape[4];p.b(5===i.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(i.length,".")),p.b(5===c.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(c.rank)),p.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank)),p.b(l===n.shape[3],()=>"Error in conv3dDerInput: depth of input (".concat(l,") must ")+"match input depth for filter ".concat(n.shape[3],".")),p.b(d===n.shape[4],()=>"Error in conv3dDerInput: depth of output (".concat(d,") must ")+"match output depth for filter ".concat(n.shape[4],"."));const h={dy:c,filter:n},f={pad:a,strides:r,inputShape:i},m=o.a.runKernel(s.I,h,f);return u?Object(S.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const st=Object(c.b)({conv3dTranspose_:function(t,e,n,r,a){const o=Object(i.a)(t,"x","conv3dTranspose"),s=Object(i.a)(e,"filter","conv3dTranspose");return ot(n,o,s,r,a)}});const it=Object(c.b)({cos_:function(t){const e={x:Object(i.a)(t,"x","cos","float32")};return o.a.runKernel(s.J,e)}});const ct=Object(c.b)({cosh_:function(t){const e={x:Object(i.a)(t,"x","cosh","float32")};return o.a.runKernel(s.K,e)}});const ut=Object(c.b)({cumprod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Object(i.a)(t,"x","cumprod"),c={x:a},u={axis:e,exclusive:n,reverse:r};return o.a.runKernel(s.M,c,u)}});const lt=Object(c.b)({cumsum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Object(i.a)(t,"x","cumsum"),c={x:a},u={axis:e,exclusive:n,reverse:r};return o.a.runKernel(s.N,c,u)}});const dt=Object(c.b)({denseBincount_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Object(i.a)(t,"x","denseBincount"),c=Object(i.a)(e,"weights","denseBincount");p.b("int32"===a.dtype,()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(a.dtype)),p.b(a.rank<=2,()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(a.rank,".")),p.b(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),p.b(c.size===a.size||0===c.size,()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(a.shape,", weights shape: ")+"".concat(c.shape,"."));const u={x:a,weights:c},l={size:n,binaryOutput:r};return o.a.runKernel(s.O,u,l)}});const pt=Object(c.b)({depthToSpace_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const r=Object(i.a)(t,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],c="NHWC"===n?r.shape[2]:r.shape[3],u="NHWC"===n?r.shape[3]:r.shape[1];p.b(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(e)),p.b(a*e>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(a," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(r.shape)),p.b(c*e>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(e," for depthToSpace with input shape\n        ").concat(r.shape)),p.b(u%(e*e)===0,()=>"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(u," for depthToSpace with input shape ").concat(r.shape));const l={x:r},d={blockSize:e,dataFormat:n};return o.a.runKernel(s.P,l,d)}});const ht=Object(c.b)({depthwiseConv2d_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0;const l=Object(i.a)(t,"x","depthwiseConv2d","float32"),d=Object(i.a)(e,"filter","depthwiseConv2d","float32");let h=l,f=!1;3===l.rank&&(f=!0,h=Object(S.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),p.b(4===h.rank,()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(h.rank,".")),p.b(4===d.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(d.rank,"."));const m="NHWC"===a?h.shape[3]:h.shape[1];p.b(m===d.shape[2],()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(m,") must match the inChannels dimension in ")+"filter ".concat(d.shape[2],".")),N.a("depthwiseConv2d",r,u);const b={x:h,filter:d},g={strides:n,pad:r,dataFormat:a,dilations:c,dimRoundingMode:u},y=o.a.runKernel(s.Q,b,g);return f?Object(S.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});const ft=Object(c.b)({diag_:function(t){const e={x:Object(i.a)(t,"x","diag")};return o.a.runKernel(s.T,e)}});const mt=Object(c.b)({dilation2d_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const u=Object(i.a)(t,"x","dilation2d"),l=Object(i.a)(e,"filter","dilation2d");p.b(3===u.rank||4===u.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(u.rank,".")),p.b(3===l.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(l.rank,".")),p.b("NHWC"===c,()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(c));let d=u,h=!1;3===u.rank&&(d=Object(S.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=!0);const f={x:d,filter:l},m={strides:n,pad:r,dilations:a},b=o.a.runKernel(s.U,f,m);return h?Object(S.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});var bt=n(41),gt=n(40);const yt=Object(c.b)({equal_:function(t,e){let n=Object(i.a)(t,"a","equal","string_or_numeric"),r=Object(i.a)(e,"b","equal","string_or_numeric");[n,r]=Object(x.makeTypesMatch)(n,r),Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return o.a.runKernel(s.ab,a)}});const vt=Object(c.b)({where_:function(t,e,n){const r=Object(i.a)(e,"a","where"),a=Object(i.a)(n,"b","where"),c=Object(i.a)(t,"condition","where","bool"),u=Object(gt.assertAndGetBroadcastShape)(Object(gt.assertAndGetBroadcastShape)(c.shape,r.shape),a.shape),l={condition:G(c,u),t:G(r,u),e:G(a,u)};return o.a.runKernel(s.Gc,l)}});var Ot=n(62);const xt=Object(c.b)({divNoNan_:function(t,e){let n=Object(i.a)(t,"a","div"),r=Object(i.a)(e,"b","div");[n,r]=Object(x.makeTypesMatch)(n,r);const a=Object(bt.a)(n,r),o=Object(Ot.a)(a),s=yt(r,o);return vt(s,o,a)}});const wt=Object(c.b)({dot_:function(t,e){const n=Object(i.a)(t,"t1","dot"),r=Object(i.a)(e,"t2","dot");p.b((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(r.rank,"."));const a=1===n.rank?n.size:n.shape[1],o=1===r.rank?r.size:r.shape[0];if(p.b(a===o,()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(a," and ").concat(o,".")),1===n.rank&&1===r.rank){const t=Object(S.a)(n,[1,-1]),e=Object(S.a)(r,[-1,1]),a=Object(A.a)(t,e);return Object(S.a)(a,[])}if(1===n.rank&&2===r.rank){const t=Object(S.a)(n,[1,-1]),e=Object(S.a)(r,[r.shape[0],r.shape[1]]),a=Object(A.a)(t,e);return Object(S.a)(a,[a.size])}if(2===n.rank&&1===r.rank){const t=Object(S.a)(r,[-1,1]),e=Object(A.a)(n,t);return Object(S.a)(e,[e.size])}{const t=Object(S.a)(r,[r.shape[0],r.shape[1]]);return Object(A.a)(n,t)}}});const kt=Object(c.b)({einsum_:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];const a=n.map((t,e)=>Object(i.a)(t,"tensors".concat(e),"einsum")),c={equation:t};return o.a.runKernel(s.X,a,c)}});var jt=n(194);const Nt=Object(c.b)({erf_:function(t){let e=Object(i.a)(t,"x","erf");p.b("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Object(j.a)(e,"float32"));const n={x:e};return o.a.runKernel(s.bb,n)}});var St=n(107);const It=Object(c.b)({max_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Object(i.a)(t,"x","max"),a={x:r},c={reductionIndices:e,keepDims:n};return o.a.runKernel(s.Mb,a,c)}});const Tt=Object(c.b)({min_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Object(i.a)(t,"x","min"),a={x:r},c={axis:e,keepDims:n};return o.a.runKernel(s.Ub,a,c)}});var Et=n(122),Ct=n(39),At=n(93),_t=n(64),Rt=n(50);function Dt(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===t.rank)return Object(a.a)(t);if(1!==t.rank&&null===n)return Dt(Object(S.a)(t,[-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Object(Rt.a)(Object(a.a)(t),n);if(e===1/0)return It(Object(a.a)(t),n);if(e===-1/0)return Tt(Object(a.a)(t),n);if("euclidean"===e||2===e)return Object(At.a)(Object(Rt.a)(Object(Et.a)(Object(a.a)(t),Object(Ct.a)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}if(Array.isArray(n)&&2===n.length){if(1===e)return It(Object(Rt.a)(Object(a.a)(t),n[0]),n[1]-1);if(e===1/0)return It(Object(Rt.a)(Object(a.a)(t),n[1]),n[0]);if(e===-1/0)return Tt(Object(Rt.a)(Object(a.a)(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Object(At.a)(Object(Rt.a)(Object(_t.a)(t),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}throw new Error("Error in norm: invalid axis: ".concat(n))}const Ft=Object(c.b)({norm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Dt(t=Object(i.a)(t,"x","norm"),e,n);let o=a.shape;if(r){const e=Object(p.I)(n,t.shape);o=St.e(a.shape,e)}return Object(S.a)(a,o)}});const Mt=Object(c.b)({euclideanNorm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Ft(t,"euclidean",e,n)}});const Lt=Object(c.b)({exp_:function(t){const e={x:Object(i.a)(t,"x","exp")};return o.a.runKernel(s.cb,e)}});const zt=Object(c.b)({expandDims_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(i.a)(t,"x","expandDims","string_or_numeric");p.b(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},a={dim:e};return o.a.runKernel(s.db,r,a)}});const Pt=Object(c.b)({expm1_:function(t){const e={x:Object(i.a)(t,"x","expm1")};return o.a.runKernel(s.eb,e)}});const Bt=Object(c.b)({tile_:function(t,e){const n=Object(i.a)(t,"x","tile","string_or_numeric");p.b(n.rank===e.length,()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(e,"."));const r={x:n},a={reps:e};return o.a.runKernel(s.id,r,a)}});const Vt=Object(c.b)({eye_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==e&&(e=t);const a=Object(H.a)([t,e],r),o=t<=e?t:e;for(let i=0;i<o;++i)a.set(1,i,i);const s=Object(S.a)(a.toTensor(),[t,e]);if(null==n)return s;if(1===n.length)return Bt(zt(s,0),[n[0],1,1]);if(2===n.length)return Bt(zt(zt(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Bt(zt(zt(zt(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const Wt=Object(c.b)({floor_:function(t){const e={x:Object(i.a)(t,"x","floor","float32")};return o.a.runKernel(s.ib,e)}});var Ut=n(192);const Gt=Object(c.b)({gather_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const a=Object(i.a)(t,"x","gather"),c=Object(i.a)(e,"indices","gather","int32"),u={x:a,indices:c},l={axis:n,batchDims:r};return o.a.runKernel(s.pb,u,l)}});const Ht=Object(c.b)({greater_:function(t,e){let n=Object(i.a)(t,"a","greater","string_or_numeric"),r=Object(i.a)(e,"b","greater","string_or_numeric");[n,r]=Object(x.makeTypesMatch)(n,r),Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return o.a.runKernel(s.qb,a)}});const qt=Object(c.b)({greaterEqual_:function(t,e){let n=Object(i.a)(t,"a","greaterEqual","string_or_numeric"),r=Object(i.a)(e,"b","greaterEqual","string_or_numeric");[n,r]=Object(x.makeTypesMatch)(n,r),Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return o.a.runKernel(s.rb,a)}});var Kt=n(128);const Xt=Object(c.b)({isFinite_:function(t){const e={x:Object(i.a)(t,"x","isFinite")};return o.a.runKernel(s.vb,e)}});const Yt=Object(c.b)({isInf_:function(t){const e={x:Object(i.a)(t,"x","isInf")};return o.a.runKernel(s.wb,e)}});const Qt=Object(c.b)({isNaN_:function(t){const e={x:Object(i.a)(t,"x","isNaN")};return o.a.runKernel(s.xb,e)}});var Jt=n(195);const Zt=Object(c.b)({less_:function(t,e){let n=Object(i.a)(t,"a","less","string_or_numeric"),r=Object(i.a)(e,"b","less","string_or_numeric");[n,r]=Object(x.makeTypesMatch)(n,r),Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return o.a.runKernel(s.Bb,a)}});const $t=Object(c.b)({lessEqual_:function(t,e){let n=Object(i.a)(t,"a","lessEqual","string_or_numeric"),r=Object(i.a)(e,"b","lessEqual","string_or_numeric");[n,r]=Object(x.makeTypesMatch)(n,r),Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return o.a.runKernel(s.Cb,a)}});function te(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return o.a.runKernel(s.Db,{},r)}const ee=Object(c.b)({localResponseNormalization_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const c=Object(i.a)(t,"x","localResponseNormalization");p.b(4===c.rank||3===c.rank,()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(c.rank,".")),p.b(p.v(e),()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,"."));let u=c,l=!1;3===c.rank&&(l=!0,u=Object(S.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const d={x:u},h={depthRadius:e,bias:n,alpha:r,beta:a},f=o.a.runKernel(s.yb,d,h);return l?Object(S.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const ne=Object(c.b)({log_:function(t){const e={x:Object(i.a)(t,"x","log","float32")};return o.a.runKernel(s.Eb,e)}});const re=Object(c.b)({log1p_:function(t){const e={x:Object(i.a)(t,"x","log1p")};return o.a.runKernel(s.Fb,e)}});var ae=n(54),oe=n(73);const se=Object(c.b)({softplus_:function(t){const e={x:Object(i.a)(t,"x","softplus")};return o.a.runKernel(s.Oc,e)}});const ie=Object(c.b)({logSigmoid_:function(t){const e=Object(i.a)(t,"x","logSigmoid");return Object(ae.a)(t=>({value:Object(oe.a)(se(Object(oe.a)(t))),gradFunc:e=>Object(_.a)(e,Object(R.a)(Object(oe.a)(t)))}))(e)}});var ce=n(33);const ue=Object(c.b)({logSoftmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Object(i.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(e));const r=Object(ae.a)((t,n)=>{const r=It(t,e,!0),a=Object(ce.a)(t,r),o=Object(ce.a)(Object(j.a)(a,"float32"),ne(Object(Rt.a)(Lt(a),e,!0)));n([o]);return{value:o,gradFunc:(t,n)=>{const[r]=n,a=Lt(r);return Object(ce.a)(t,Object(_.a)(Object(Rt.a)(t,e,!0),a))}}});return r(n)}});const le=Object(c.b)({logSumExp_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Object(i.a)(t,"x","logSumExp"),a=Object(p.I)(e,r.shape),o=It(r,a,!0),s=Object(ce.a)(r,o),c=Lt(s),u=Object(Rt.a)(c,a),l=ne(u),h=Object(d.a)(Object(S.a)(o,l.shape),l);if(n){const t=Object(St.e)(h.shape,a);return Object(S.a)(h,t)}return h}});const de=Object(c.b)({logicalAnd_:function(t,e){const n=Object(i.a)(t,"a","logicalAnd","bool"),r=Object(i.a)(e,"b","logicalAnd","bool");Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return o.a.runKernel(s.Hb,a)}});const pe=Object(c.b)({logicalNot_:function(t){const e={x:Object(i.a)(t,"x","logicalNot","bool")};return o.a.runKernel(s.Ib,e)}});const he=Object(c.b)({logicalOr_:function(t,e){const n=Object(i.a)(t,"a","logicalOr","bool"),r=Object(i.a)(e,"b","logicalOr","bool");Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return o.a.runKernel(s.Jb,a)}});const fe=Object(c.b)({logicalXor_:function(t,e){const n=Object(i.a)(t,"a","logicalXor","bool"),r=Object(i.a)(e,"b","logicalXor","bool");return Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape),de(he(t,e),pe(de(t,e)))}});const me=Object(c.b)({searchSorted_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const r=Object(i.a)(t,"sortedSequence","searchSorted"),a=Object(i.a)(e,"values","searchSorted"),c=r.shape[r.shape.length-1],u=a.shape[a.shape.length-1],l=Object(S.a)(r,[-1,c]),d=Object(S.a)(a,[-1,u]);if(l.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(l.shape[0]!==d.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Object(p.O)(d.shape)>=2147483648)throw new Error("values tensor size must less than ".concat(2147483648));if(l.shape[1]>=2147483648)throw new Error("trailing dim_size must less than ".concat(2147483648," for int32 output type, was ").concat(l.shape[1]));const h={sortedSequence:l,values:d},f={side:n};return o.a.runKernel(s.Fc,h,f)}});function be(t,e){return me(t,e,"left")}const ge=Object(c.b)({maxPool_:function(t,e,n,r,a){const c=Object(i.a)(t,"x","maxPool");let u=c,l=!1;3===c.rank&&(l=!0,u=Object(S.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),p.b(4===u.rank,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(u.rank,".")),p.b(N.i(n,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")),N.a("maxPool",r,a);const d={x:u},h={filterSize:e,strides:n,pad:r,dimRoundingMode:a},f=o.a.runKernel(s.Nb,d,h);return l?Object(S.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const ye=Object(c.b)({maxPool3d_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const u=Object(i.a)(t,"x","maxPool3d");let l=u,d=!1;4===u.rank&&(d=!0,l=Object(S.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),p.b(5===l.rank,()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(l.rank,".")),p.b("NDHWC"===c,()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(c)),Object(N.a)("maxPool3d",r,a);const h={x:l},f={filterSize:e,strides:n,pad:r,dimRoundingMode:a,dataFormat:c},m=o.a.runKernel(s.Ob,h,f);return d?Object(S.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const ve=Object(c.b)({maxPoolWithArgmax_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const c=Object(i.a)(t,"x","maxPoolWithArgmax"),u={x:c},l={filterSize:e,strides:n,pad:r,includeBatchInIndex:a},d=o.a.runKernel(s.Rb,u,l);return{result:d[0],indexes:d[1]}}});var Oe=n(193);const xe=Object(c.b)({mean_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Object(i.a)(t,"x","mean"),a={x:r},c={axis:e,keepDims:n};return o.a.runKernel(s.Tb,a,c)}});function we(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){const e=we(t,"float32"),n=we(t,"float32");return Object(Y.a)(e,n)}const n=Object(p.F)(Object(p.O)(t),e);return o.a.makeTensor(n,t,e)}function ke(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){const e=ke(t,"float32"),n=we(t,"float32");return Object(Y.a)(e,n)}const n=Object(p.D)(Object(p.O)(t),e);return o.a.makeTensor(n,t,e)}var je=n(42);function Ne(t,e){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===t)return[];let r=Object(i.a)(t,"x","meshgrid",t instanceof je.a?t.dtype:"float32");if(void 0===e)return[r];let a=Object(i.a)(e,"y","meshgrid",e instanceof je.a?e.dtype:"float32");const o=Object(p.O)(r.shape),s=Object(p.O)(a.shape);return"xy"===n?(r=Object(S.a)(r,[1,-1]),a=Object(S.a)(a,[-1,1]),[Object(A.a)(ke([s,1],r.dtype),r),Object(A.a)(a,ke([1,o],a.dtype))]):(r=Object(S.a)(r,[-1,1]),a=Object(S.a)(a,[1,-1]),[Object(A.a)(r,ke([1,s],r.dtype)),Object(A.a)(ke([o,1],a.dtype),a)])}const Se=Object(c.b)({minimum_:function(t,e){let n=Object(i.a)(t,"a","minimum"),r=Object(i.a)(e,"b","minimum");[n,r]=Object(x.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=Object(j.a)(n,"int32"),r=Object(j.a)(r,"int32")),Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return o.a.runKernel(s.Vb,a)}});const Ie=Object(c.b)({mirrorPad_:function(t,e,n){p.b("reflect"===n||"symmetric"===n,()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,"."));const r=Object(i.a)(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");p.b(e.length===r.rank,()=>"Padding doesn't match input. Must be ".concat(r.rank,". ")+"Got ".concat(e.length,"."));const a="reflect"===n?1:0;for(let o=0;o<r.rank;o++)p.b(2===e[o].length,()=>"Invalid number of paddings. Must be length of 2 each."),p.b(e[o][0]>=0&&e[o][0]<=r.shape[o]-a&&e[o][1]>=0&&e[o][1]<=r.shape[o]-a,()=>"Padding in dimension ".concat(o," cannot be greater than or equal ")+"to ".concat(r.shape[o]-a," or less than 0 for input of ")+"shape ".concat(r.shape));const c={paddings:e,mode:n},u={x:r};return o.a.runKernel(s.Wb,u,c)}});const Te=Object(c.b)({mod_:function(t,e){let n=Object(i.a)(t,"a","mod"),r=Object(i.a)(e,"b","mod");[n,r]=Object(x.makeTypesMatch)(n,r);const a={a:n,b:r};return o.a.runKernel(s.Xb,a)}});const Ee=Object(c.b)({moments_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t=Object(i.a)(t,"x","moments");const r=Object(p.I)(e,t.shape),a=xe(t,r,n);let o=a.shape;n||(o=Object(St.e)(a.shape,r));const s=Object(_t.a)(Object(ce.a)(Object(j.a)(t,"float32"),Object(S.a)(a,o))),c=xe(s,r,n);return{mean:a,variance:c}}});const Ce=Object(c.b)({multiRNNCell_:function(t,e,n,r){const a=Object(i.a)(e,"data","multiRNNCell"),o=Object(i.b)(n,"c","multiRNNCell"),s=Object(i.b)(r,"h","multiRNNCell");let c=a;const u=[];for(let i=0;i<t.length;i++){const e=t[i](c,o[i],s[i]);u.push(e[0]),u.push(e[1]),c=e[1]}const l=[],d=[];for(let i=0;i<u.length;i+=2)l.push(u[i]),d.push(u[i+1]);return[l,d]}});const Ae=Object(c.b)({multinomial_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Object(i.a)(t,"logits","multinomial"),c=a.size,u=a.rank;if(c<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(c,"."));if(u>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(u));n=n||Math.random();const l=1===u?Object(S.a)(a,[1,-1]):a,d={logits:l},p={numSamples:e,seed:n,normalized:r},h=o.a.runKernel(s.Yb,d,p);return 1===u?Object(S.a)(h,[h.size]):h}});const _e=Object(c.b)({notEqual_:function(t,e){let n=Object(i.a)(t,"a","notEqual","string_or_numeric"),r=Object(i.a)(e,"b","notEqual","string_or_numeric");[n,r]=Object(x.makeTypesMatch)(n,r),Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return o.a.runKernel(s.ec,a)}});var Re=n(184);const De=Object(c.b)({onesLike_:function(t){const e={x:Object(i.a)(t,"x","onesLike")};return o.a.runKernel(s.gc,e)}});const Fe=Object(c.b)({outerProduct_:function(t,e){const n=Object(i.a)(t,"v1","outerProduct"),r=Object(i.a)(e,"v2","outerProduct");p.b(1===n.rank&&1===r.rank,()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(r.rank,"."));const a=Object(S.a)(n,[-1,1]),o=Object(S.a)(r,[1,-1]);return Object(A.a)(a,o)}});const Me=Object(c.b)({pad_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=Object(i.a)(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:e,constantValue:n},c={x:r};return o.a.runKernel(s.ic,c,a)}});const Le=Object(c.b)({pad1d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(p.b)(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Me(t,[e],n)}});const ze=Object(c.b)({pad2d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(p.b)(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Me(t,e,n)}});const Pe=Object(c.b)({pad3d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(p.b)(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Me(t,e,n)}});const Be=Object(c.b)({pad4d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(p.b)(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Me(t,e,n)}});const Ve=Object(c.b)({spaceToBatchND_:function(t,e,n){const r=Object(i.a)(t,"x","spaceToBatchND");p.b(r.rank>=1+e.length,()=>"input rank ".concat(r.rank," should be > than [blockShape] ").concat(e.length)),p.b(n.length===e.length,()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(e.length)),p.b(r.shape.reduce((t,r,a)=>a>0&&a<=e.length?t&&(r+n[a-1][0]+n[a-1][1])%e[a-1]===0:t,!0),()=>"input spatial dimensions ".concat(r.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(e.toString()));const a={x:r},c={blockShape:e,paddings:n};return o.a.runKernel(s.Pc,a,c)}});const We=Object(c.b)({pool_:function(t,e,n,r,a,o,s){null==a&&(a=[1,1]),null==o&&(o=1),0===r&&(r="valid");const c=Object(i.a)(t,"x","maxPool");let u=c,l=!1;3===c.rank&&(l=!0,u=Object(S.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),p.b(N.i(o,a),()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(a,"'"));const d=N.f(u.shape,e,o,a,r),h=[d.dilationHeight,d.dilationWidth];let f;f="same"===r?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),a=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],a[e]])}([d.filterHeight,d.filterWidth],h):[[0,0],[0,0]];const m=1===h[0]&&1===h[1],[b,g]=function(t,e,n){const r=n.map(t=>t[0]),a=n.map(t=>t[1]),o=t.concat(r,a),s=e.map((t,e)=>(t-o[e]%t)%t),i=a.map((t,e)=>t+s[e]),c=e.map((t,e)=>[r[e],i[e]]),u=e.map((t,e)=>[0,s[e]]);return[c,u]}([d.inHeight,d.inWidth],h,f),y=m?r:"valid",v=m?u:Ve(u,h,b),O=("avg"===n?()=>I(v,e,o,y,s):()=>ge(v,e,o,y,s))(),x=m?O:L(O,h,g);return l?Object(S.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var Ue=n(196),Ge=n(191);const He=Object(c.b)({prod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Object(i.a)(t,"x","prod");"bool"===r.dtype&&(r=Object(j.a)(r,"int32"));const a={x:r},c={axis:e,keepDims:n};return o.a.runKernel(s.mc,a,c)}});const qe=Object(c.b)({raggedGather_:function(t,e,n,r){const a={paramsNestedSplits:t.map((t,e)=>Object(i.a)(t,"tensors".concat(e),"raggedGather","int32")),paramsDenseValues:Object(i.a)(e,"paramsDenseValues","raggedGather"),indices:Object(i.a)(n,"indices","raggedGather","int32")},c={outputRaggedRank:r},u=o.a.runKernel(s.nc,a,c);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}});const Ke=Object(c.b)({raggedTensorToTensor_:function(t,e,n,r,a){const c=Object(i.a)(t,"shape","raggedTensorToTensor","int32"),u=Object(i.a)(e,"values","raggedTensorToTensor"),l={shape:c,values:u,defaultValue:Object(i.a)(n,"defaultValue","raggedTensorToTensor",u.dtype),rowPartitionTensors:r.map((t,e)=>Object(i.a)(t,"tensors".concat(e),"raggedTensorToTensor","int32"))},d={rowPartitionTypes:a};return o.a.runKernel(s.oc,l,d)}});const Xe=Object(c.b)({rand_:function(t,e,n){const r=Object(p.O)(t);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));a=new Uint8Array(r)}for(let o=0;o<r;o++)a[o]=e();return o.a.makeTensor(a,t,n)}});var Ye=n(238);n(172);class Qe{constructor(t,e,n,r,a){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=a||Math.random();this.random=Ye.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,a,o;do{r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*s,e=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Je{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const a=r||Math.random();this.randu=Ye.alea(a.toString()),this.randn=new Qe(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,a,o;for(;;){do{r=this.randn.nextValue(),o=1+this.c*r}while(o<=0);if(o*=o*o,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-o+Math.log(o)),a=this.randu(),a<e||Math.log(a)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class Ze{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(t," - ").concat(e," <= 1 and dtype is not float"));this.random=Ye.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const $e=Object(c.b)({randomGamma_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type ".concat(r));const o=new Je(e,n,r,a),s=Object(H.a)(t,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const tn=Object(c.b)({randomNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error("Unsupported data type ".concat(r));const o=new Qe(e,n,r,!1,a),s=Object(H.a)(t,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const en=Object(c.b)({randomStandardNormal_:function(t,e,n){if(null!=e&&"bool"===e)throw new Error("Unsupported data type ".concat(e));return tn(t,0,1,e,n)}});const nn=Object(c.b)({randomUniform_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;const o=Object(H.a)(t,r),s=new Ze(e,n,null,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});function rn(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const a={start:t,stop:e,step:n,dtype:r};return o.a.runKernel(s.pc,{},a)}var an=n(123);const on=Object(c.b)({reciprocal_:function(t){const e={x:Object(i.a)(t,"x","reciprocal")};return o.a.runKernel(s.sc,e)}});var sn=n(129),cn=n(197);const un=Object(c.b)({reverse_:function(t,e){const n={x:Object(i.a)(t,"x","reverse")},r={dims:e};return o.a.runKernel(s.Ac,n,r)}});const ln=Object(c.b)({reverse1d_:function(t){const e=Object(i.a)(t,"x","reverse");return p.b(1===e.rank,()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(e.rank,".")),un(e,0)}});const dn=Object(c.b)({reverse2d_:function(t,e){const n=Object(i.a)(t,"x","reverse");return p.b(2===n.rank,()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,".")),un(n,e)}});const pn=Object(c.b)({reverse3d_:function(t,e){const n=Object(i.a)(t,"x","reverse");return p.b(3===n.rank,()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,".")),un(n,e)}});const hn=Object(c.b)({reverse4d_:function(t,e){const n=Object(i.a)(t,"x","reverse");return p.b(4===n.rank,()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,".")),un(n,e)}});const fn=Object(c.b)({round_:function(t){const e={x:Object(i.a)(t,"x","round")};return o.a.runKernel(s.Cc,e)}});const mn=Object(c.b)({rsqrt_:function(t){const e={x:Object(i.a)(t,"x","rsqrt","float32")};return o.a.runKernel(s.Dc,e)}});const bn=Object(c.b)({selu_:function(t){const e={x:Object(i.a)(t,"x","selu")};return o.a.runKernel(s.Hc,e)}});const gn=Object(c.b)({separableConv2d_:function(t,e,n,r,a){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const c=Object(i.a)(t,"x","separableConv2d"),u=Object(i.a)(e,"depthwiseFilter","separableConv2d"),l=Object(i.a)(n,"pointwiseFilter","separableConv2d");let d=c,h=!1;if(3===c.rank&&(h=!0,d=Object(S.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");p.b(4===d.rank,()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(d.rank,".")),p.b(4===u.rank,()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(u.rank,".")),p.b(4===l.rank,()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(u.rank,".")),p.b(1===l.shape[0],()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(l.shape[0],".")),p.b(1===l.shape[1],()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(l.shape[1],"."));const f=u.shape[2],m=u.shape[3];p.b(l.shape[2]===f*m,()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(f*m,", ")+"but got ".concat(l.shape[2],"."));const b=ht(d,u,r,a,s,o),g=1,y=tt(b,l,g,"valid",s);return h?Object(S.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});const yn=async function(t,e){const n=Object(i.a)(t,"x","setdiff1d"),r=Object(i.a)(e,"y","setdiff1d");p.b(n.dtype===r.dtype,()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(r.dtype,").")),p.b(1===n.rank,()=>"x should be 1D tensor, but got x (".concat(n.shape,").")),p.b(1===r.rank,()=>"y should be 1D tensor, but got y (".concat(r.shape,")."));const a=await n.data(),o=await r.data(),s=new Set(o);let c=0;for(let i=0;i<a.length;i++)s.has(a[i])||c++;const u=new je.b([c],n.dtype),l=new je.b([c],"int32");for(let i=0,d=0;i<a.length;i++)s.has(a[i])||(u.values[d]=a[i],l.values[d]=i,d++);return[u.toTensor(),l.toTensor()]};const vn=Object(c.b)({sign_:function(t){const e={x:Object(i.a)(t,"x","sign")};return o.a.runKernel(s.Jc,e)}});const On=Object(c.b)({sin_:function(t){const e={x:Object(i.a)(t,"x","sin","float32")};return o.a.runKernel(s.Kc,e)}});const xn=Object(c.b)({sinh_:function(t){const e={x:Object(i.a)(t,"x","sinh")};return o.a.runKernel(s.Lc,e)}});const wn=Object(c.b)({slice1d_:function(t,e,n){const r=Object(i.a)(t,"x","slice1d");return p.b(1===r.rank,()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(r.rank," tensor")),D(r,[e],[n])}});const kn=Object(c.b)({slice2d_:function(t,e,n){const r=Object(i.a)(t,"x","slice2d");return p.b(2===r.rank,()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(r.rank," tensor")),D(r,e,n)}});const jn=Object(c.b)({slice3d_:function(t,e,n){const r=Object(i.a)(t,"x","slice3d");return p.b(3===r.rank,()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(r.rank," tensor")),D(r,e,n)}});const Nn=Object(c.b)({slice4d_:function(t,e,n){const r=Object(i.a)(t,"x","slice4d");return p.b(4===r.rank,()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(r.rank," tensor")),D(r,e,n)}});const Sn=Object(c.b)({softmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Object(i.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(e));const r={logits:n},a={dim:e};return o.a.runKernel(s.Nc,r,a)}});const In=Object(c.b)({fft_:function(t){Object(p.b)("complex64"===t.dtype,()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,"."));const e={input:t};return o.a.runKernel(s.fb,e)}});const Tn=Object(c.b)({ifft_:function(t){Object(p.b)("complex64"===t.dtype,()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,"."));const e={input:t};return o.a.runKernel(s.sb,e)}});const En=Object(c.b)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const a=Object(S.a)(t,[n,e]);r=Tn(a)}else{const a=[n,2*(e-1)],o=Object(S.a)(Object(an.a)(t),[n,e]),s=Object(S.a)(Object(Kt.a)(t),[n,e]),i=un(D(o,[0,1],[n,e-2]),1),c=Object(_.a)(un(D(s,[0,1],[n,e-2]),1),Object(Ct.a)(-1)),u=C([o,i],1),l=C([s,c],1),d=Object(S.a)(Object(Y.a)(u,l),[a[0],a[1]]);r=Tn(d)}if(r=Object(an.a)(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=Object(S.a)(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}});const Cn=Object(c.b)({split_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=Object(i.a)(t,"x","split"),a={x:r},c={numOrSizeSplits:e,axis:n};return o.a.runKernel(s.Vc,a,c)}});const An=Object(c.b)({rfft_:function(t,e){Object(p.b)("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got ".concat(t.dtype));let n=t.shape[t.shape.length-1];const r=t.size/n;let a;if(null!=e&&e<n){const r=t.shape.map(t=>0),o=t.shape.map(t=>t);o[t.shape.length-1]=e,a=D(t,r,o),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,a=C([t,we(r)],t.shape.length-1),n=e}else a=t;const o=Object(Ot.a)(a),s=Object(S.a)(Object(Y.a)(a,o),[r,n]),i=In(s),c=Math.floor(n/2)+1,u=Object(an.a)(i),l=Object(Kt.a)(i),d=Cn(u,[c,n-c],u.shape.length-1),h=Cn(l,[c,n-c],l.shape.length-1),f=a.shape.slice();return f[a.shape.length-1]=c,Object(S.a)(Object(Y.a)(d[0],h[0]),f)}});const _n=Object(c.b)({squaredDifference_:function(t,e){let n=Object(i.a)(t,"a","squaredDifference"),r=Object(i.a)(e,"b","squaredDifference");[n,r]=Object(x.makeTypesMatch)(n,r),Object(gt.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return o.a.runKernel(s.Yc,a,{})}});const Rn=Object(c.b)({squeeze_:function(t,e){const n=Object(i.a)(t,"x","squeeze","string_or_numeric");return Object(S.a)(n,Object(p.Q)(n.shape,e).newShape)}});const Dn=Object(c.b)({stack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(i.b)(t,"tensors","stack","string_or_numeric");p.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&p.b(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,a={axis:e};return o.a.runKernel(s.hc,r,a)}});var Fn=n(198);const Mn=Object(c.b)({stridedSlice_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const p=Object(i.a)(t,"x","stridedSlice","string_or_numeric"),h={x:p},f={begin:e,end:n,strides:r,beginMask:a,endMask:c,ellipsisMask:u,newAxisMask:l,shrinkAxisMask:d};return o.a.runKernel(s.ad,h,f)}});const Ln=Object(c.b)({tan_:function(t){const e={x:Object(i.a)(t,"x","tan","float32")};return o.a.runKernel(s.gd,e)}});var zn=n(116),Pn=n(72);function Bn(t,e){Object(p.d)(t);const n=Object(i.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(Pn.a)(t,null,n,e)}function Vn(t,e,n){if(Object(p.d)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(i.c)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Pn.a)(t,e,r,n)}var Wn=n(199);function Un(t,e,n){if(Object(p.d)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(i.c)(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(Pn.a)(t,e,r,n)}function Gn(t,e,n){if(Object(p.d)(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(i.c)(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(Pn.a)(t,e,r,n)}function Hn(t,e,n){if(Object(p.d)(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(i.c)(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,Object(Pn.a)(t,e,r,n)}const qn=Object(c.b)({topk_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Object(i.a)(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(e<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(e));if(e>a)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(a,") ")+"but got ".concat(e));const c={x:r},u={k:e,sorted:n},[l,d]=o.a.runKernel(s.jd,c,u);return{values:l,indices:d}}});const Kn=Object(c.b)({truncatedNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const o=new Qe(e,n,r,!0,a),s=Object(H.a)(t,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Xn=Object(c.b)({unique_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(i.a)(t,"x","unique","string_or_numeric");Object(p.b)(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},a={axis:e},[c,u]=o.a.runKernel(s.md,r,a);return{values:c,indices:u}}});const Yn=Object(c.b)({unsortedSegmentSum_:function(t,e,n){const r=Object(i.a)(t,"x","unsortedSegmentSum"),a=Object(i.a)(e,"segmentIds","unsortedSegmentSum","int32");Object(p.b)(Object(p.v)(n),()=>"numSegments must be of dtype int");const c={x:r,segmentIds:a},u={numSegments:n};return o.a.runKernel(s.od,c,u)}});const Qn=Object(c.b)({unstack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(i.a)(t,"x","unstack","string_or_numeric");p.b(e>=-n.shape.length&&e<n.shape.length,()=>"Axis = ".concat(e," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")"));const r={value:n},a={axis:e};return o.a.runKernel(s.nd,r,a)}});function Jn(t,e){return me(t,e,"right")}function Zn(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return o.a.makeVariable(t,e,n,r)}var $n=n(200);const tr=async function(t){const e=Object(i.a)(t,"condition","whereAsync","bool"),n=await e.data(),r=Object($n.a)(e.shape,n);return t!==e&&e.dispose(),r};const er=async function(t,e,n){const r=Object(i.a)(t,"tensor","boolMask"),a=Object(i.a)(e,"mask","boolMask","bool"),o=null==n?0:n,s=a.rank,c=r.shape;p.b(s>0,()=>"mask cannot be scalar"),p.e(c.slice(o,o+s),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let i=o;i<o+s;i++)u*=c[i];const l=c.slice(0,o).concat([u],c.slice(o+s)),d=Object(S.a)(r,l),h=Object(S.a)(a,[-1]),f=await tr(h),m=Rn(f,[1]),b=Gt(d,m,o);return t!==r&&r.dispose(),e!==a&&a.dispose(),m.dispose(),d.dispose(),h.dispose(),f.dispose(),b};var nr=n(140);const rr=Object(c.b)({movingAverage_:function(t,e,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const o=Object(i.a)(t,"v","movingAverage"),s=Object(i.a)(e,"x","movingAverage"),c=Object(i.a)(n,"decay","movingAverage");Object(x.assertTypesMatch)(o,s),p.b(p.a(o.shape,s.shape),()=>"Shape mismatch in v and x");const u=Object(Ct.a)(1),l=Object(ce.a)(u,c);let h=Object(_.a)(Object(ce.a)(s,o),l);if(a){p.b(null!=r,()=>"When using zeroDebias: true, step is required.");const t=Object(i.a)(r,"step","movingAverage");h=Object(bt.a)(h,Object(ce.a)(u,Object(Et.a)(c,t)))}return Object(d.a)(o,h)}});var ar=n(147);const or=Object(c.b)({scatterND_:function(t,e,n){const r=Object(i.a)(t,"indices","scatterND","int32"),a=Object(i.a)(e,"updates","scatterND");ar.validateInput(a,r,n);const c={indices:r,updates:a},u={shape:n};return o.a.runKernel(s.Ec,c,u)}});function sr(t,e,n,r){if("int32"!==t.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(t.shape,"."));const a=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(o,"."));const s=e.size;if(0!==e.rank&&(1!==e.rank||s!==a))throw new Error("sparseValues has incorrect shape "+"".concat(e.shape,", should be [] or [").concat(a,"]"));if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}const ir=Object(c.b)({sparseToDense_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const a=Object(i.a)(t,"sparseIndices","sparseToDense","int32"),c=Object(i.a)(e,"sparseValues","sparseToDense","string_or_numeric"),u=Object(i.a)(r,"defaultValue","sparseToDense",c.dtype);sr(a,c,n,u);const l={sparseIndices:a,sparseValues:c,defaultValue:u},d={outputShape:n};return o.a.runKernel(s.Uc,l,d)}});const cr=Object(c.b)({gatherND_:function(t,e){const n=Object(i.a)(e,"indices","gatherND","int32"),r={params:Object(i.a)(t,"x","gatherND","string_or_numeric"),indices:n};return o.a.runKernel(s.ob,r)}});const ur=Object(c.b)({dropout_:function(t,e,n,r){const a=Object(i.a)(t,"x","dropout");if(p.b("float32"===a.dtype,()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(a.dtype," tensor instead.")),p.b(e>=0&&e<1,()=>"rate must be a float in the range [0, 1), but got ".concat(e,".")),0===e)return t instanceof je.a?a.clone():a;const o=function(t,e){if(null==e)return t.shape.slice();if(p.a(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(a,n),s=1-e,c=Object(bt.a)(Wt(Object(d.a)(nn(o,0,1,"float32",r),s)),s);return Object(_.a)(a,c)}});function lr(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function dr(t,e,n){const r=1-t%2,a=new Float32Array(t);for(let o=0;o<t;++o){const s=2*Math.PI*o/(t+r-1);a[o]=e-n*Math.cos(s)}return Bn(a,"float32")}const pr=async function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=Object(i.a)(t,"predictions","inTopK"),a=Object(i.a)(e,"targets","inTopK");Object(p.b)(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(r.rank)),Object(p.b)(r.rank-1===a.rank,()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(r.rank," and targets rank ").concat(a.rank)),Object(p.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];Object(p.b)(n>0&&n<=o,()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(o,"), but got ").concat(n));const s=await r.data(),c=await a.data(),[u,l]=[s.length/o,o],d=Object(p.o)("bool",u);for(let i=0;i<u;i++){const t=i*l,e=s.subarray(t,t+l),r=[];for(let n=0;n<e.length;n++)r.push({value:e[n],index:n});r.sort((t,e)=>e.value-t.value),d[i]=0;for(let a=0;a<n;a++)if(r[a].index===c[i]){d[i]=1;break}}return t!==r&&r.dispose(),e!==a&&a.dispose(),Object(zn.a)(d,a.shape,"bool")};const hr=Object(c.b)({conv2DBackpropFilter_:function(t,e,n,r,a){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",c=arguments.length>6?arguments[6]:void 0,u=t;3===t.rank&&(u=Object(S.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=Object(S.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),p.b(4===u.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(u.shape,".")),p.b(4===l.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(l.shape,".")),p.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,"."));const d="NHWC"===i?u.shape[3]:u.shape[1],h="NHWC"===i?l.shape[3]:l.shape[1];p.b(d===n[2],()=>"Error in conv2dDerFilter: depth of input ".concat(d,") must ")+"match input depth in filter (".concat(n[2],".")),p.b(h===n[3],()=>"Error in conv2dDerFilter: depth of dy (".concat(h,") must ")+"match output depth for filter (".concat(n[3],").")),N.a("conv2dDerFilter",a,c);const f={x:u,dy:l},m={strides:r,pad:a,dataFormat:i,dimRoundingMode:c,filterShape:n};return o.a.runKernel(s.E,f,m)}});var fr=n(66);const mr=Object(c.b)({fusedConv2d_:function(t){let{x:e,filter:n,strides:r,pad:a,dataFormat:c="NHWC",dilations:u=[1,1],dimRoundingMode:l,bias:h,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:b}=t;if(f=f||"linear",!1===Object(fr.d)(o.a.state.gradientDepth,f)){p.b("NHWC"===c,()=>"Error in fused conv2d: got dataFormat of ".concat(c," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.");let t=tt(e,n,r,a,c,u,l);return null!=h&&(t=Object(d.a)(t,h)),Object(fr.a)(t,f,m,b)}const g=Object(i.a)(e,"x","conv2d","float32"),y=Object(i.a)(n,"filter","conv2d","float32");let v=g,O=!1;3===g.rank&&(O=!0,v=Object(S.a)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),p.b(4===v.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(v.rank,".")),p.b(4===y.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(y.rank,".")),N.a("fused conv2d",a,l);const w="NHWC"===c?v.shape[3]:v.shape[1];p.b(y.shape[2]===w,()=>"Error in conv2d: depth of input (".concat(w,") must match ")+"input depth for filter ".concat(y.shape[2],".")),p.b(N.i(r,u),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(u,"'"));const k=N.b(v.shape,y.shape,r,u,a,l);let j,I;if(null!=h&&(j=Object(i.a)(h,"bias","fused conv2d"),[j]=Object(x.makeTypesMatch)(j,g),"NHWC"===c?gt.assertAndGetBroadcastShape(k.outShape,j.shape):(p.b(j.shape.length<=1,()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(j.shape.length,".")),p.b(0===j.shape.length||j.shape[0]===k.outChannels||1===j.shape[0],()=>"Error in fused conv2d: bias shape (".concat(j.shape,") is not ")+"compatible with the number of output channels "+"(".concat(k.outChannels,")")))),null!=m){const t=m.shape;if(p.b(t.length<=1||3===t.length,()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(t.length,".")),1===t.length)p.b(1===t[0]||t[0]===k.outChannels,()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(t,") is not compatible with the number of output ")+"channels (".concat(k.outChannels,")."));else if(3===t.length)try{gt.assertAndGetBroadcastShape(t,k.outShape)}catch(A){const e="Error in fused conv2d: PReLU activation weights (".concat(t,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(k.outShape,").");throw Error(e)}I=Object(i.a)(m,"prelu weights","fused conv2d")}const T=(t,e)=>{p.b("NHWC"===c,()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(c," but only NHWC is currently supported."));const[n,o,s,i]=e,l=Object(fr.c)(t,s,f);p.b(N.j(u),()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(u,"'"));const d=[nt(o.shape,l,n,r,a),hr(o,l,n.shape,r,a)];if(null!=i){const t=Object(fr.b)(i,l);d.push(t)}return d},E={x:v,filter:y,bias:j,preluActivationWeights:I},C={strides:r,pad:a,dataFormat:c,dilations:u,dimRoundingMode:l,activation:f,leakyreluAlpha:b};if(null==h){return Object(ae.a)((t,e,n)=>{let r=o.a.runKernel(s.mb,E,C);return n([e,t,r]),O&&(r=Object(S.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:T}})(v,y)}return Object(ae.a)((t,e,n,r)=>{let a=o.a.runKernel(s.mb,E,C);return r([e,t,a,n]),O&&(a=Object(S.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:T}})(v,y,j)}});const br=Object(c.b)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,a){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],c=arguments.length>6?arguments[6]:void 0,u=t;3===t.rank&&(u=Object(S.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=Object(S.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={x:u,dy:l},p={strides:r,pad:a,dimRoundingMode:c,dilations:i,filterShape:n};return o.a.runKernel(s.R,d,p)}});const gr=Object(c.b)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,a){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],c=arguments.length>6?arguments[6]:void 0,u=e,l=!1;3===e.rank&&(l=!0,u=Object(S.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={dy:u,filter:n},p={strides:r,pad:a,dimRoundingMode:c,dilations:i,inputShape:t},h=o.a.runKernel(s.S,d,p);return l?Object(S.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const yr=Object(c.b)({fusedDepthwiseConv2d_:function(t){let{x:e,filter:n,strides:r,pad:a,dataFormat:c="NHWC",dilations:u=[1,1],dimRoundingMode:l,bias:h,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:b}=t;if(!1===Object(fr.d)(o.a.state.gradientDepth,f)){let t=ht(e,n,r,a,c,u,l);return null!=h&&(t=Object(d.a)(t,h)),Object(fr.a)(t,f,m,b)}const g=Object(i.a)(e,"x","depthwiseConv2d","float32"),y=Object(i.a)(n,"filter","depthwiseConv2d","float32");let v=g,O=!1;3===g.rank&&(O=!0,v=Object(S.a)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),p.b(4===v.rank,()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(v.rank,".")),p.b(4===y.rank,()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(y.rank,".")),p.b(v.shape[3]===y.shape[2],()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(v.shape[3],") must match the inChannels dimension in ")+"filter ".concat(y.shape[2],".")),null==u&&(u=[1,1]),p.b(N.i(r,u),()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(r," and dilations '").concat(u,"'")),N.a("fused depthwiseConv2d",a,l);const w=N.b(v.shape,y.shape,r,u,a,l,!0);let k,j;null!=h&&(k=Object(i.a)(h,"bias","fused conv2d"),[k]=Object(x.makeTypesMatch)(k,g),gt.assertAndGetBroadcastShape(w.outShape,k.shape)),null!=m&&(j=Object(i.a)(m,"prelu weights","fused depthwiseConv2d"));const I=(t,e)=>{p.b(N.j(u),()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(u,"'"));const[n,o,s,i]=e,c=Object(fr.c)(t,s,f),d=gr(o.shape,c,n,r,a,u,l),h=br(o,c,n.shape,r,a,u,l);if(null!=i){return[d,h,Object(fr.b)(k,c)]}return[d,h]},T={x:v,filter:y,bias:k,preluActivationWeights:j},E={strides:r,pad:a,dataFormat:c,dilations:u,dimRoundingMode:l,activation:f,leakyreluAlpha:b};if(null==h){return Object(ae.a)((t,e,n)=>{let r=o.a.runKernel(s.nb,T,E);return n([e,t,r]),O&&(r=Object(S.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:I}})(v,y)}return Object(ae.a)((t,e,n,r)=>{let a=o.a.runKernel(s.nb,T,E);return r([e,t,a,n]),O&&(a=Object(S.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:I}})(v,y,k)}});const vr=Object(c.b)({fusedMatMul_:function(t){let{a:e,b:n,transposeA:r=!1,transposeB:a=!1,bias:c,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:h=.2}=t;if(!1===Object(fr.d)(o.a.state.gradientDepth,u)){let t=Object(A.a)(e,n,r,a);return null!=c&&(t=Object(d.a)(t,c)),Object(fr.a)(t,u,l,h)}let f=Object(i.a)(e,"a","fused matMul"),m=Object(i.a)(n,"b","fused matMul");[f,m]=Object(x.makeTypesMatch)(f,m);const b=r?f.shape[f.rank-2]:f.shape[f.rank-1],g=a?m.shape[m.rank-1]:m.shape[m.rank-2],y=r?f.shape[f.rank-1]:f.shape[f.rank-2],v=a?m.shape[m.rank-2]:m.shape[m.rank-1],O=f.shape.slice(0,-2),w=m.shape.slice(0,-2),k=p.O(O),j=p.O(w);p.b(b===g,()=>"Error in fused matMul: inner shapes (".concat(b,") and (")+"".concat(g,") of Tensors with shapes ").concat(f.shape," and ")+"".concat(m.shape," and transposeA=").concat(r)+" and transposeB=".concat(a," must match."));const N=gt.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([y,v]),I=r?Object(S.a)(f,[k,b,y]):Object(S.a)(f,[k,y,b]),T=a?Object(S.a)(m,[j,v,g]):Object(S.a)(m,[j,g,v]);let E,C;null!=c&&(E=Object(i.a)(c,"bias","fused matMul"),[E]=Object(x.makeTypesMatch)(E,f),gt.assertAndGetBroadcastShape(N,E.shape)),null!=l&&(C=Object(i.a)(l,"prelu weights","fused matMul"));const _=(t,e)=>{const[n,o,s,i]=e,l=Object(fr.c)(Object(S.a)(t,s.shape),s,u);let d,p;if(r||a?!r&&a?(d=Object(A.a)(l,o,!1,!1),p=Object(A.a)(l,n,!0,!1)):r&&!a?(d=Object(A.a)(o,l,!1,!0),p=Object(A.a)(n,l,!1,!1)):(d=Object(A.a)(o,l,!0,!0),p=Object(A.a)(l,n,!0,!0)):(d=Object(A.a)(l,o,!1,!0),p=Object(A.a)(n,l,!0,!1)),null!=c){return[d,p,Object(fr.b)(i,l)]}return[d,p]},R={a:I,b:T,bias:E,preluActivationWeights:C},D={transposeA:r,transposeB:a,activation:u,leakyreluAlpha:h};if(null==c){return Object(ae.a)((t,e,n)=>{const r=o.a.runKernel(s.rd,R,D);return n([t,e,r]),{value:Object(S.a)(r,N),gradFunc:_}})(I,T)}return Object(ae.a)((t,e,n,r)=>{const a=o.a.runKernel(s.rd,R,D);return r([t,e,a,n]),{value:Object(S.a)(a,N),gradFunc:_}})(I,T,E)}});const Or=Object(c.b)({hammingWindow_:function(t){return dr(t,.54,.46)}});const xr=Object(c.b)({hannWindow_:function(t){return dr(t,.5,.5)}});const wr=Object(c.b)({frame_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=0;const s=[];for(;o+e<=t.size;)s.push(D(t,o,e)),o+=n;if(r)for(;o<t.size;){const r=o+e-t.size,i=C([D(t,o,e-r),Object(K.a)([r],a)]);s.push(i),o+=n}return 0===s.length?Vn([],[0,e]):Object(S.a)(C(s),[s.length,e])}});const kr=Object(c.b)({stft_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:xr;null==r&&(r=lr(e));const o=wr(t,e,n),s=Object(_.a)(o,a(e));return An(s,r)}});const jr=Object(c.b)({cropAndResize_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const u=Object(i.a)(t,"image","cropAndResize"),l=Object(i.a)(e,"boxes","cropAndResize","float32"),d=Object(i.a)(n,"boxInd","cropAndResize","int32"),h=l.shape[0];p.b(4===u.rank,()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(u.rank,".")),p.b(2===l.rank&&4===l.shape[1],()=>"Error in cropAndResize: boxes must be have size [".concat(h,",4] ")+"but had shape ".concat(l.shape,".")),p.b(1===d.rank&&d.shape[0]===h,()=>"Error in cropAndResize: boxInd must be have size [".concat(h,"] ")+"but had shape ".concat(l.shape,".")),p.b(2===r.length,()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(r.length,".")),p.b(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was ".concat(r)),p.b("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was ".concat(a));const f={image:u,boxes:l,boxInd:d},m={method:a,extrapolationValue:c,cropSize:r},b=o.a.runKernel(s.L,f,m);return b}});const Nr=Object(c.b)({flipLeftRight_:function(t){const e=Object(i.a)(t,"image","flipLeftRight","float32");p.b(4===e.rank,()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,"."));const n={image:e};return o.a.runKernel(s.hb,n,{})}});const Sr=Object(c.b)({grayscaleToRGB_:function(t){const e=Object(i.a)(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];p.b(e.rank>=2,()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(e.rank,".")),p.b(1===r,()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(r,"."));const a=new Array(e.rank);return a.fill(1,0,n),a[n]=3,Bt(e,a)}});const Ir=Object(c.b)({rotateWithOffset_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=Object(i.a)(t,"image","rotateWithOffset","float32");p.b(4===a.rank,()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(a.rank,"."));const c={image:a},u={radians:e,fillValue:n,center:r},l=o.a.runKernel(s.Bc,c,u);return l}});function Tr(t,e,n,r,a,o){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=t.shape[0];return n=Math.min(n,s),p.b(0<=r&&r<=1,()=>"iouThreshold must be in [0, 1], but was '".concat(r,"'")),p.b(2===t.rank,()=>"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'")),p.b(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1])),p.b(1===e.rank,()=>"scores must be a 1D tensor"),p.b(e.shape[0]===s,()=>"scores has incompatible shape with boxes. Expected ".concat(s,", ")+"but was ".concat(e.shape[0])),p.b(0<=o&&o<=1,()=>"softNmsSigma must be in [0, 1], but was '".concat(o,"'")),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:o}}const Er=Object(c.b)({nonMaxSuppression_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const c=Object(i.a)(t,"boxes","nonMaxSuppression","float32"),u=Object(i.a)(e,"scores","nonMaxSuppression","float32"),l=Tr(c,u,n,r,a);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold;const d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return o.a.runKernel(s.bc,{boxes:c,scores:u},d)}});var Cr=n(104);const Ar=async function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=Object(i.a)(t,"boxes","nonMaxSuppressionAsync"),s=Object(i.a)(e,"scores","nonMaxSuppressionAsync"),c=Tr(o,s,n,r,a);n=c.maxOutputSize,r=c.iouThreshold,a=c.scoreThreshold;const u=await Promise.all([o.data(),s.data()]),l=u[0],d=u[1],{selectedIndices:p}=Object(Cr.a)(l,d,n,r,a);return o!==t&&o.dispose(),s!==e&&s.dispose(),Bn(p,"int32")};const _r=Object(c.b)({nonMaxSuppressionWithScore_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const u=Object(i.a)(t,"boxes","nonMaxSuppression"),l=Object(i.a)(e,"scores","nonMaxSuppression"),d=Tr(u,l,n,r,a,c);n=d.maxOutputSize,r=d.iouThreshold,a=d.scoreThreshold,c=d.softNmsSigma;const p={boxes:u,scores:l},h={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:c},f=o.a.runKernel(s.dc,p,h);return{selectedIndices:f[0],selectedScores:f[1]}}});const Rr=async function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=Object(i.a)(t,"boxes","nonMaxSuppressionAsync"),c=Object(i.a)(e,"scores","nonMaxSuppressionAsync"),u=Tr(s,c,n,r,a,o);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,o=u.softNmsSigma;const l=await Promise.all([s.data(),c.data()]),d=l[0],p=l[1],{selectedIndices:h,selectedScores:f}=Object(Cr.c)(d,p,n,r,a,o);return s!==t&&s.dispose(),c!==e&&c.dispose(),{selectedIndices:Bn(h,"int32"),selectedScores:Bn(f)}};const Dr=Object(c.b)({nonMaxSuppressionPadded_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,c=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const u=Object(i.a)(t,"boxes","nonMaxSuppression"),l=Object(i.a)(e,"scores","nonMaxSuppression"),d=Tr(u,l,n,r,a,null),p=d.maxOutputSize,h=d.iouThreshold,f=d.scoreThreshold,m={boxes:u,scores:l},b={maxOutputSize:p,iouThreshold:h,scoreThreshold:f,padToMaxOutputSize:c},g=o.a.runKernel(s.cc,m,b);return{selectedIndices:g[0],validOutputs:g[1]}}});const Fr=async function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=Object(i.a)(t,"boxes","nonMaxSuppressionAsync"),c=Object(i.a)(e,"scores","nonMaxSuppressionAsync"),u=Tr(s,c,n,r,a,null),l=u.maxOutputSize,d=u.iouThreshold,p=u.scoreThreshold,[h,f]=await Promise.all([s.data(),c.data()]),{selectedIndices:m,validOutputs:b}=Object(Cr.b)(h,f,l,d,p,o);return s!==t&&s.dispose(),c!==e&&c.dispose(),{selectedIndices:Bn(m,"int32"),validOutputs:Object(Ct.a)(b,"int32")}};const Mr=Object(c.b)({resizeBilinear_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Object(i.a)(t,"images","resizeBilinear");p.b(3===a.rank||4===a.rank,()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(a.rank,".")),p.b(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,".")),p.b(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let c=a,u=!1;3===a.rank&&(u=!0,c=Object(S.a)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=e,l={images:c},d={alignCorners:n,halfPixelCenters:r,size:e},h=o.a.runKernel(s.wc,l,d);return u?Object(S.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Lr=Object(c.b)({resizeNearestNeighbor_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Object(i.a)(t,"images","resizeNearestNeighbor");p.b(3===a.rank||4===a.rank,()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(a.rank,".")),p.b(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,".")),p.b("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),p.b(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let c=a,u=!1;3===a.rank&&(u=!0,c=Object(S.a)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=e,l={images:c},d={alignCorners:n,halfPixelCenters:r,size:e},h=o.a.runKernel(s.yc,l,d);return u?Object(S.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});function zr(t,e){let n,r,a,o,s,i,c=Bn([-1]),u=Bn([0]),l=Bn([0]);for(let p=0;p<t.size-1;p++){n=D(t,0,p+1),r=D(t,p+1),s=Object(bt.a)(Object(Rt.a)(n),e),i=Object(bt.a)(Object(Rt.a)(r),e);const h=Object(Rt.a)(Object(_.a)(n,rn(0,n.size)));a=Object(bt.a)(h,Object(Rt.a)(n));const f=Object(K.a)(r.shape,n.size),m=Object(d.a)(rn(0,r.size),f),b=Object(_.a)(r,m);o=Object(bt.a)(Object(Rt.a)(b),Object(Rt.a)(r));const g=Object(ce.a)(a,o),y=Object(ce.a)(a,o),v=Object(_.a)(s,i);l=Object(_.a)(Object(_.a)(v,g),y);const O=Ht(l,u);u=vt(O,l,u),c=vt(O,Bn([p]),c)}return c}const Pr=Object(c.b)({threshold_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=Object(i.a)(t,"image","threshold"),o=.2989,s=.587,c=.114,u=a.shape[0]*a.shape[1];let l,h,f,m,b=Object(_.a)(Bn([r]),255);if(p.b(3===a.rank,()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(a.rank,".")),p.b(3===a.shape[2]||1===a.shape[2],()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(a.shape[2],".")),p.b("int32"===a.dtype||"float32"===a.dtype,()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(a.dtype,".")),p.b("otsu"===e||"binary"===e,()=>"Method must be binary or otsu, but was ".concat(e)),3===a.shape[2]){[l,h,f]=Cn(a,[1,1,1],-1);const t=Object(_.a)(l,o),e=Object(_.a)(h,s),n=Object(_.a)(f,c);m=Object(d.a)(Object(d.a)(t,e),n)}else m=t;if("otsu"===e){b=zr(W(Object(j.a)(fn(m),"int32"),Object(zn.a)([]),256),u)}const g=n?$t(m,b):Ht(m,b),y=Object(j.a)(Object(_.a)(g,255),"int32");return y}});const Br=Object(c.b)({transform_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5?arguments[5]:void 0;const u=Object(i.a)(t,"image","transform","float32"),l=Object(i.a)(e,"transforms","transform","float32");p.b(4===u.rank,()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(u.rank,".")),p.b(2===l.rank&&(l.shape[0]===u.shape[0]||1===l.shape[0])&&8===l.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),p.b(null==c||2===c.length,()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(c,"."));const d={image:u,transforms:l},h={interpolation:n,fillMode:r,fillValue:a,outputShape:c};return o.a.runKernel(s.kd,d,h)}});const Vr=Object(c.b)({bandPart_:function(t,e,n){Object(p.b)(e%1===0,()=>"bandPart(): numLower must be an integer, got ".concat(e,".")),Object(p.b)(n%1===0,()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."));const r=Object(i.a)(t,"a","bandPart");Object(p.b)(r.rank>=2,()=>"bandPart(): Rank must be at least 2, got ".concat(r.rank,"."));const a=r.shape,[o,s]=r.shape.slice(-2);if(!(e<=o))throw new Error("bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(o,")."));if(!(n<=s))throw new Error("bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(s,")."));e<0&&(e=o),n<0&&(n=s);const c=Object(S.a)(rn(0,o,1,"int32"),[-1,1]),u=rn(0,s,1,"int32"),l=Object(ce.a)(c,u),d=de($t(l,Object(Ct.a)(+e,"int32")),qt(l,Object(Ct.a)(-n,"int32"))),h=we([o,s],r.dtype);return Object(S.a)(Dn(Qn(Object(S.a)(r,[-1,o,s])).map(t=>vt(d,t,h))),a)}});const Wr=Object(c.b)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(p.b)(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(p.b)(t[e].shape[0]===n,()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(n,")"))}else e=!0,t=Cn(t,t.shape[0],0).map(t=>Rn(t,[0]));Object(p.b)(t.length<=t[0].shape[0],()=>"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],")."));const n=[],r=t;for(let a=0;a<t.length;++a)n.push(o.a.tidy(()=>{let t=r[a];if(a>0)for(let e=0;e<a;++e){const r=Object(_.a)(Object(Rt.a)(Object(_.a)(n[e],t)),n[e]);t=Object(ce.a)(t,r)}return Object(bt.a)(t,Ft(t,"euclidean"))}));return e?Dn(n,0):n}});var Ur=n(38);function Gr(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return o.a.tidy(()=>{Object(p.b)(2===t.shape.length,()=>"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor."));const n=t.shape[0],r=t.shape[1];let a=Vt(n),s=Object(E.a)(t);const i=Vn([[1]],[1,1]);let c=Object(E.a)(i);const u=n>=r?r:n;for(let t=0;t<u;++t){const e=s,u=c,l=a;[c,s,a]=o.a.tidy(()=>{const e=D(s,[t,t],[n-t,1]),o=Ft(e),u=D(s,[t,t],[1,1]),l=vt(Ht(u,0),Vn([[-1]]),Vn([[1]])),d=Object(ce.a)(u,Object(_.a)(l,o)),p=Object(bt.a)(e,d);c=1===p.shape[0]?Object(E.a)(i):C([i,D(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=Object(oe.a)(Object(bt.a)(Object(A.a)(l,d),o)),f=D(s,[t,0],[n-t,r]),m=Object(_.a)(h,c),b=Object(nr.a)(c);if(0===t)s=Object(ce.a)(f,Object(A.a)(m,Object(A.a)(b,f)));else{const e=Object(ce.a)(f,Object(A.a)(m,Object(A.a)(b,f)));s=C([D(s,[0,0],[t,r]),e],0)}const g=Object(nr.a)(m),y=D(a,[0,t],[n,a.shape[1]-t]);if(0===t)a=Object(ce.a)(y,Object(A.a)(Object(A.a)(y,c),g));else{const e=Object(ce.a)(y,Object(A.a)(Object(A.a)(y,c),g));a=C([D(a,[0,0],[n,t]),e],1)}return[c,s,a]}),Object(Ur.d)([e,u,l])}return!e&&n>r&&(a=D(a,[0,0],[n,r]),s=D(s,[0,0],[r,r])),[a,s]})}const Hr=Object(c.b)({qr_:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Object(p.b)(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank)),2===t.rank)return Gr(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Qn(Object(S.a)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],o=[];r.forEach(t=>{const[n,r]=Gr(t,e);a.push(n),o.push(r)});return[Object(S.a)(Dn(a,0),t.shape),Object(S.a)(Dn(o,0),t.shape)]}}});var qr=n(56);const Kr=Object(c.b)({computeWeightedLoss_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:qr.a.SUM_BY_NONZERO_WEIGHTS;const r=Object(i.a)(t,"losses","computeWeightedLoss");let a=null;null!=e&&(a=Object(i.a)(e,"weights","computeWeightedLoss"));const o=null==a?r:Object(_.a)(r,a);if(n===qr.a.NONE)return o;if(n===qr.a.SUM)return Object(Rt.a)(o);if(n===qr.a.MEAN){if(null==a)return xe(o);{const t=r.size/a.size,e=Object(bt.a)(Object(Rt.a)(o),Object(Rt.a)(a));return t>1?Object(bt.a)(e,Object(Ct.a)(t)):e}}if(n===qr.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(bt.a)(Object(Rt.a)(o),Object(Ct.a)(r.size));{const t=Object(_.a)(a,ke(r.shape)),e=Object(j.a)(Object(Rt.a)(_e(t,Object(Ct.a)(0))),"float32");return Object(bt.a)(Object(Rt.a)(o),e)}}throw Error("Unknown reduction: ".concat(n))}});const Xr=Object(c.b)({absoluteDifference_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:qr.a.SUM_BY_NONZERO_WEIGHTS;const o=Object(i.a)(t,"labels","absoluteDifference"),s=Object(i.a)(e,"predictions","absoluteDifference");let c=null;null!=n&&(c=Object(i.a)(n,"weights","absoluteDifference")),Object(p.e)(o.shape,s.shape,"Error in absoluteDifference: ");const u=Object(a.a)(Object(ce.a)(o,s));return Kr(u,c,r)}});const Yr=Object(c.b)({cosineDistance_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:qr.a.SUM_BY_NONZERO_WEIGHTS;const o=Object(i.a)(t,"labels","cosineDistance"),s=Object(i.a)(e,"predictions","cosineDistance");let c=null;null!=r&&(c=Object(i.a)(r,"weights","cosineDistance")),Object(p.e)(o.shape,s.shape,"Error in cosineDistance: ");const u=Object(Ct.a)(1),l=Object(ce.a)(u,Object(Rt.a)(Object(_.a)(o,s),n,!0));return Kr(l,c,a)}});const Qr=Object(c.b)({hingeLoss_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:qr.a.SUM_BY_NONZERO_WEIGHTS,a=Object(i.a)(t,"labels","hingeLoss");const o=Object(i.a)(e,"predictions","hingeLoss");let s=null;null!=n&&(s=Object(i.a)(n,"weights","hingeLoss")),Object(p.e)(a.shape,o.shape,"Error in hingeLoss: ");const c=Object(Ct.a)(1);a=Object(ce.a)(Object(_.a)(Object(Ct.a)(2),a),c);const u=Object(sn.a)(Object(ce.a)(c,Object(_.a)(a,o)));return Kr(u,s,r)}});const Jr=Object(c.b)({huberLoss_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:qr.a.SUM_BY_NONZERO_WEIGHTS;const s=Object(i.a)(t,"labels","huberLoss"),c=Object(i.a)(e,"predictions","huberLoss");let u=null;null!=n&&(u=Object(i.a)(n,"weights","huberLoss")),Object(p.e)(s.shape,c.shape,"Error in huberLoss: ");const l=Object(Ct.a)(r),h=Object(a.a)(Object(ce.a)(c,s)),f=Se(h,l),m=Object(ce.a)(h,f),b=Object(d.a)(Object(_.a)(Object(Ct.a)(.5),Object(_t.a)(f)),Object(_.a)(l,m));return Kr(b,u,o)}});const Zr=Object(c.b)({logLoss_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:qr.a.SUM_BY_NONZERO_WEIGHTS;const o=Object(i.a)(t,"labels","logLoss"),s=Object(i.a)(e,"predictions","logLoss");let c=null;null!=n&&(c=Object(i.a)(n,"weights","logLoss")),Object(p.e)(o.shape,s.shape,"Error in logLoss: ");const u=Object(Ct.a)(1),l=Object(Ct.a)(r),h=Object(oe.a)(Object(_.a)(o,ne(Object(d.a)(s,l)))),f=Object(_.a)(Object(ce.a)(u,o),ne(Object(d.a)(Object(ce.a)(u,s),l))),m=Object(ce.a)(h,f);return Kr(m,c,a)}});const $r=Object(c.b)({meanSquaredError_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:qr.a.SUM_BY_NONZERO_WEIGHTS;const a=Object(i.a)(t,"labels","meanSquaredError"),o=Object(i.a)(e,"predictions","meanSquaredError");let s=null;null!=n&&(s=Object(i.a)(n,"weights","meanSquaredError")),Object(p.e)(a.shape,o.shape,"Error in meanSquaredError: ");const c=_n(a,o);return Kr(c,s,r)}});function ta(t,e){const n=Object(i.a)(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(i.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(p.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=Object(sn.a)(r),s=Object(_.a)(r,n),c=re(Lt(Object(oe.a)(Object(a.a)(r))));return Object(d.a)(Object(ce.a)(o,s),c)}const ea=Object(c.b)({sigmoidCrossEntropy_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:qr.a.SUM_BY_NONZERO_WEIGHTS,o=Object(i.a)(t,"multiClassLabels","sigmoidCrossEntropy");const s=Object(i.a)(e,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(i.a)(n,"weights","sigmoidCrossEntropy")),Object(p.e)(o.shape,s.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(Ct.a)(r),e=Object(Ct.a)(1),n=Object(Ct.a)(.5);o=Object(d.a)(Object(_.a)(o,Object(ce.a)(e,t)),Object(_.a)(n,t))}const u=ta(o,s);return Kr(u,c,a)}});function na(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(e.rank," ")+"and dim was ".concat(n));const r=Object(ae.a)((t,e,r)=>{const a=le(e,[n],!0),o=Object(ce.a)(Object(j.a)(e,"float32"),a);r([t,o]);const s=Object(oe.a)(Object(_.a)(o,t));return{value:Object(Rt.a)(s,[n]),gradFunc:(t,e)=>{const[r,a]=e,o=Object(St.e)(t.shape,[n]);return[Object(_.a)(Object(S.a)(t,o),Object(ce.a)(Object(j.a)(r,"float32"),Lt(a))),Object(_.a)(Object(S.a)(t,o),Object(ce.a)(Lt(a),Object(j.a)(r,"float32")))]}}});return r(t,e)}const ra=Object(c.b)({softmaxCrossEntropy_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:qr.a.SUM_BY_NONZERO_WEIGHTS,o=Object(i.a)(t,"onehotLabels","softmaxCrossEntropy");const s=Object(i.a)(e,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=Object(i.a)(n,"weights","softmaxCrossEntropy")),Object(p.e)(o.shape,s.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(Ct.a)(r),e=Object(Ct.a)(1),n=Object(Ct.a)(o.shape[1]);o=Object(d.a)(Object(_.a)(o,Object(ce.a)(e,t)),Object(bt.a)(t,n))}const u=na(o,s);return Kr(u,c,a)}});const aa=Object(c.b)({sparseFillEmptyRows_:function(t,e,n,r){const a=Object(i.a)(t,"indices","sparseFillEmptyRows","int32"),c=Object(i.a)(e,"values","sparseFillEmptyRows"),u=Object(i.a)(n,"denseShape","sparseFillEmptyRows","int32"),l=Object(i.a)(r,"defaultValue","sparseFillEmptyRows",c.dtype);if(2!==a.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==c.rank)throw new Error("Values should be Tensor1D but received shape ".concat(c.shape));if(1!==u.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(u.shape));if(0!==l.rank)throw new Error("Default value should be a scalar but received shape ".concat(l.shape));const d={indices:a,values:c,denseShape:u,defaultValue:l},p=o.a.runKernel(s.Qc,d);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}});const oa=Object(c.b)({sparseReshape_:function(t,e,n){const r=Object(i.a)(t,"inputIndices","sparseReshape","int32"),a=Object(i.a)(e,"inputShape","sparseReshape","int32"),c=Object(i.a)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==a.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(a.shape));if(1!==c.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(c.shape));const u={inputIndices:r,inputShape:a,newShape:c},l=o.a.runKernel(s.Rc,u);return{outputIndices:l[0],outputShape:l[1]}}});const sa=Object(c.b)({sparseSegmentMean_:function(t,e,n){const r=Object(i.a)(t,"data","sparseSegmentMean"),a=Object(i.a)(e,"indices","sparseSegmentMean","int32"),c=Object(i.a)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(a.shape));if(1!==c.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(c.shape));const u={data:r,indices:a,segmentIds:c};return o.a.runKernel(s.Sc,u)}});const ia=Object(c.b)({sparseSegmentSum_:function(t,e,n){const r=Object(i.a)(t,"data","sparseSegmentSum"),a=Object(i.a)(e,"indices","sparseSegmentSum","int32"),c=Object(i.a)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(a.shape));if(1!==c.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(c.shape));const u={data:r,indices:a,segmentIds:c};return o.a.runKernel(s.Tc,u)}});const ca=Object(c.b)({stringNGrams_:function(t,e,n,r,a,c,u,l){const d=Object(i.a)(t,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error("Data must be a vector, saw: ".concat(d.shape));const p=Object(i.a)(e,"dataSplits","stringNGrams");if("int32"!==p.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:r,leftPad:a,rightPad:c,padWidth:u,preserveShortSequences:l},f={data:d,dataSplits:p},m=o.a.runKernel(s.bd,f,h);return{nGrams:m[0],nGramsSplits:m[1]}}});const ua=Object(c.b)({stringSplit_:function(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Object(i.a)(t,"input","stringSplit","string"),a=Object(i.a)(e,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape ".concat(r.shape));if(0!==a.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(a.shape));const c={skipEmpty:n},u={input:r,delimiter:a},l=o.a.runKernel(s.cd,u,c);return{indices:l[0],values:l[1],shape:l[2]}}});const la=Object(c.b)({stringToHashBucketFast_:function(t,e){const n=Object(i.a)(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return o.a.runKernel(s.dd,a,r)}}),da={fft:In,ifft:Tn,rfft:An,irfft:En},pa={hammingWindow:Or,hannWindow:xr,frame:wr,stft:kr},ha={flipLeftRight:Nr,grayscaleToRGB:Sr,resizeNearestNeighbor:Lr,resizeBilinear:Mr,rotateWithOffset:Ir,cropAndResize:jr,nonMaxSuppression:Er,nonMaxSuppressionAsync:Ar,nonMaxSuppressionWithScore:_r,nonMaxSuppressionWithScoreAsync:Rr,nonMaxSuppressionPadded:Dr,nonMaxSuppressionPaddedAsync:Fr,threshold:Pr,transform:Br},fa={bandPart:Vr,gramSchmidt:Wr,qr:Hr},ma={absoluteDifference:Xr,computeWeightedLoss:Kr,cosineDistance:Yr,hingeLoss:Qr,huberLoss:Jr,logLoss:Zr,meanSquaredError:$r,sigmoidCrossEntropy:ea,softmaxCrossEntropy:ra},ba={sparseFillEmptyRows:aa,sparseReshape:oa,sparseSegmentMean:sa,sparseSegmentSum:ia},ga={stringNGrams:ca,stringSplit:ua,stringToHashBucketFast:la}},function(t,e,n){"use strict";n.r(e),n.d(e,"validateUpdateShape",(function(){return a})),n.d(e,"validateInput",(function(){return o})),n.d(e,"calculateShapes",(function(){return s}));var r=n(21);function a(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(r,", and batchDim: ").concat(a,".");if(n.rank<a)throw new Error(o+" update.rank < ".concat(a,". "));if(t.length<r+(n.rank-a))throw new Error(o+" Output shape length < ".concat(r+(n.rank-a)));if(n.rank!==a+t.length-r)throw new Error(o+" update.rank != ".concat(a+t.length-r));for(let s=0;s<a;++s)if(n.shape[s]!==e.shape[s])throw new Error(o+" updates.shape[".concat(s,"] (").concat(n.shape[s],") != indices.shape[").concat(s,"] (").concat(e.shape[s],")."));for(let s=0;s<n.rank-a;++s)if(n.shape[s+a]!==t[s+r])throw new Error(o+" updates.shape[".concat(s+a,"] (").concat(n.shape[s+a],") != shape[").concat(s+a,"] (").concat(t[s+a],")"))}function o(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}a(n,e,t)}function s(t,e,n){const a=e.shape.length,o=a>1?e.shape[a-1]:1,s=n.length;let i=1;for(let r=o;r<s;++r)i*=n[r];const c=o<1?1:o;return{sliceRank:o,numUpdates:Object(r.O)(e.shape)/c,sliceSize:i,strides:[...Object(r.j)(n.slice(0,o)),1],outputSize:Object(r.O)(n)}}},function(t,e,n){"use strict";n.d(e,"c",(function(){return a})),n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return s}));var r=n(12);function a(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(r,", and batchDim: ").concat(a,".");if(n.rank<a)throw new Error(o+" update.rank < ".concat(a,". "));if(t.length<r+(n.rank-a))throw new Error(o+" Output shape length < ".concat(r+(n.rank-a)));if(n.rank!==a+t.length-r)throw new Error(o+" update.rank != ".concat(a+t.length-r));for(let s=0;s<a;++s)if(n.shape[s]!==e.shape[s])throw new Error(o+" updates.shape[".concat(s,"] (").concat(n.shape[s],") != indices.shape[").concat(s,"] (").concat(e.shape[s],")."));for(let s=0;s<n.rank-a;++s)if(n.shape[s+a]!==t[s+r])throw new Error(o+" updates.shape[".concat(s+a,"] (").concat(n.shape[s+a],") != shape[").concat(s+a,"] (").concat(t[s+a],")"))}function o(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}a(n,e,t)}function s(t,e,n){const a=e.shape.length,o=a>1?e.shape[a-1]:1,s=n.length;let i=1;for(let r=o;r<s;++r)i*=n[r];const c=o<1?1:o;return{sliceRank:o,numUpdates:Object(r.N)(e.shape)/c,sliceSize:i,strides:[...Object(r.j)(n.slice(0,o)),1],outputSize:Object(r.N)(n)}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(20),c=n(46),u=n(7),l=n(13);const d=Object(u.a)({avgPool_:function(t,e,n,u,d){const p=Object(o.a)(t,"x","avgPool","float32");s.b(c.h(n,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"));let h=p,f=!1;3===p.rank&&(f=!0,h=Object(l.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s.b(4===h.rank,()=>"Error in avgPool: x must be rank 4 but got rank ".concat(h.rank,".")),null!=d&&s.b(s.v(u),()=>"Error in avgPool: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(u,"."));const m={x:h},b={filterSize:e,strides:n,pad:u,dimRoundingMode:d};let g=r.a.runKernel(a.o,m,b);return g=Object(i.a)(g,p.dtype),f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(7);const c=Object(i.a)({floorDiv_:function(t,e){let n=Object(s.a)(t,"a","floorDiv"),i=Object(s.a)(e,"b","floorDiv");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.gb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({elu_:function(t){const e={x:Object(o.a)(t,"x","elu")};return r.a.runKernel(a.V,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(9),a=n(4);function o(t,e,n){const o={shape:t,value:e,dtype:n};return r.a.runKernel(a.db,{},o)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({floor_:function(t){const e={x:Object(o.a)(t,"x","floor")};return r.a.runKernel(a.fb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({gather_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i=Object(o.a)(t,"x","gather"),c=Object(o.a)(e,"indices","gather","int32"),u={x:i,indices:c},l={axis:n,batchDims:s};return r.a.runKernel(a.mb,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({leakyRelu_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n=Object(o.a)(t,"x","leakyRelu"),s={x:n},i={alpha:e};return r.a.runKernel(a.xb,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(46),c=n(7),u=n(13);const l=Object(c.a)({maxPool_:function(t,e,n,c,l){const d=Object(o.a)(t,"x","maxPool");let p=d,h=!1;3===d.rank&&(h=!0,p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),s.b(4===p.rank,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(p.rank,".")),s.b(i.h(n,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")),null!=l&&s.b(s.v(c),()=>"Error in maxPool: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(c,"."));const f={x:p},m={filterSize:e,strides:n,pad:c,dimRoundingMode:l},b=r.a.runKernel(a.Ib,f,m);return h?Object(u.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({pad_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s=Object(o.a)(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:n},c={x:s};return r.a.runKernel(a.dc,c,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({prelu_:function(t,e){const n={x:Object(o.a)(t,"x","prelu"),alpha:Object(o.a)(e,"alpha","prelu")};return r.a.runKernel(a.fc,n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({sigmoid_:function(t){const e={x:Object(o.a)(t,"x","sigmoid")};return r.a.runKernel(a.zc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(12),o=n(7),s=n(13);const i=Object(o.a)({squeeze_:function(t,e){const n=Object(r.a)(t,"x","squeeze");return Object(s.a)(n,Object(a.P)(n.shape,e).newShape)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(12),s=n(7);const i=Object(s.a)({fft_:function(t){Object(o.b)("complex64"===t.dtype,()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,"."));const e={input:t};return r.a.runKernel(a.cb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var r=n(12),a=n(83),o=n(52),s=n(163),i=n(7),c=n(144),u=n(13),l=n(45),d=n(99),p=n(91),h=n(31),f=n(161);const m=Object(i.a)({rfft_:function(t,e){Object(r.b)("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got ".concat(t.dtype));let n=t.shape[t.shape.length-1];const i=t.size/n;let m;if(null!=e&&e<n){const r=t.shape.map(t=>0),a=t.shape.map(t=>t);a[t.shape.length-1]=e,m=Object(l.a)(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,m=Object(o.a)([t,Object(p.a)(r)],t.shape.length-1),n=e}else m=t;const b=Object(h.a)(m),g=Object(u.a)(Object(a.a)(m,b),[i,n]),y=Object(f.a)(g),v=Math.floor(n/2)+1,O=Object(c.a)(y),x=Object(s.a)(y),w=Object(d.a)(O,[v,n-v],O.shape.length-1),k=Object(d.a)(x,[v,n-v],x.shape.length-1),j=m.shape.slice();return j[m.shape.length-1]=v,Object(u.a)(Object(a.a)(w[0],k[0]),j)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({imag_:function(t){const e={input:Object(o.a)(t,"input","imag")};return r.a.runKernel(a.rb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return g}));var r=n(5),a=n(12),o=n(67),s=n(60),i=n(95),c=n(141),u=n(7),l=n(76),d=n(13),p=n(25),h=n(59),f=n(37),m=n(28);function b(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===t.rank)return Object(o.a)(t);if(1!==t.rank&&null===n)return b(Object(d.a)(t,[-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Object(m.a)(Object(o.a)(t),n);if(e===1/0)return Object(i.a)(Object(o.a)(t),n);if(e===-1/0)return Object(c.a)(Object(o.a)(t),n);if("euclidean"===e||2===e)return Object(h.a)(Object(m.a)(Object(l.a)(Object(o.a)(t),Object(p.a)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}if(Array.isArray(n)&&2===n.length){if(1===e)return Object(i.a)(Object(m.a)(Object(o.a)(t),n[0]),n[1]-1);if(e===1/0)return Object(i.a)(Object(m.a)(Object(o.a)(t),n[1]),n[0]);if(e===-1/0)return Object(c.a)(Object(m.a)(Object(o.a)(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Object(h.a)(Object(m.a)(Object(f.a)(t),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}throw new Error("Error in norm: invalid axis: ".concat(n))}const g=Object(u.a)({norm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=b(t=Object(r.a)(t,"x","norm"),e,n);let c=i.shape;if(o){const e=Object(a.I)(n,t.shape);c=s.e(i.shape,e)}return Object(d.a)(i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n(5),a=n(12),o=n(23),s=n(60),i=n(63),c=n(98),u=n(95),l=n(7),d=n(13),p=n(22),h=n(28);const f=Object(l.a)({logSumExp_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const l=Object(r.a)(t,"x","logSumExp"),f=Object(a.I)(e,l.shape),m=Object(u.a)(l,f,!0),b=Object(p.a)(l,m),g=Object(i.a)(b),y=Object(h.a)(g,f),v=Object(c.a)(y),O=Object(o.a)(Object(d.a)(m,v.shape),v);if(n){const t=Object(s.e)(O.shape,f);return Object(d.a)(O,t)}return O}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({relu6_:function(t){const e={x:Object(o.a)(t,"x","relu6")};return r.a.runKernel(a.mc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({cumsum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=Object(o.a)(t,"x","cumsum"),c={x:i},u={axis:e,exclusive:n,reverse:s};return r.a.runKernel(a.L,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({unsortedSegmentSum_:function(t,e,n){const i=Object(o.a)(t,"x","unsortedSegmentSum"),c=Object(o.a)(e,"segmentIds","unsortedSegmentSum","int32");Object(s.b)(Object(s.v)(n),()=>"numSegments must be of dtype int");const u={x:i,segmentIds:c},l={numSegments:n};return r.a.runKernel(a.Xc,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({cos_:function(t){const e={x:Object(o.a)(t,"x","cos")};return r.a.runKernel(a.I,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(7);const c=Object(i.a)({mod_:function(t,e){let n=Object(s.a)(t,"a","mod"),i=Object(s.a)(e,"b","mod");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.Sb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(26),i=n(7);const c=Object(i.a)({logicalOr_:function(t,e){const n=Object(o.a)(t,"a","logicalOr","bool"),i=Object(o.a)(e,"b","logicalOr","bool");Object(s.a)(n.shape,i.shape);const c={a:n,b:i};return r.a.runKernel(a.Gb,c)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"TEST_EPSILON_FLOAT16",(function(){return i})),n.d(e,"expectArraysClose",(function(){return c})),n.d(e,"testEpsilon",(function(){return u})),n.d(e,"expectPromiseToFail",(function(){return d})),n.d(e,"expectArraysEqual",(function(){return p})),n.d(e,"expectNumbersClose",(function(){return h})),n.d(e,"expectValuesInRange",(function(){return m})),n.d(e,"expectArrayBuffersEqual",(function(){return b})),n.d(e,"encodeStrings",(function(){return g})),n.d(e,"createVideoElement",(function(){return y})),n.d(e,"play",(function(){return v}));var r=n(8),a=n(2),o=n(21),s=n(16);const i=.1;function c(t,e,n){return null==n&&(n=u()),l(t,e,(t,e)=>f(t,e,n))}function u(){return 32===r.a.backend.floatPrecision()?.001:i}function l(t,e,n){let r=!0;if((Object(o.A)(t)||Object(o.A)(e))&&(r=!1),Object(o.A)(t)&&Object(o.A)(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error("Arrays are of different type. Actual: ".concat(n,". ")+"Expected: ".concat(r))}if(Array.isArray(t)&&Array.isArray(e)){const n=Object(a.c)(t),r=Object(a.c)(e);if(!Object(o.a)(n,r))throw new Error("Arrays have different shapes. "+"Actual: [".concat(n,"]. Expected: [").concat(r,"]"))}const s=Object(o.A)(t)?t:Object(o.m)(t),i=Object(o.A)(e)?e:Object(o.m)(e);if(s.length!==i.length)throw new Error("Arrays have different lengths actual: ".concat(s.length," vs ")+"expected: ".concat(i.length,".\n")+"Actual:   ".concat(s,".\n")+"Expected: ".concat(i,"."));for(let a=0;a<i.length;++a){const t=s[a],e=i[a];if(!n(t,e))throw new Error("Arrays differ: actual[".concat(a,"] = ").concat(t,", expected[").concat(a,"] = ").concat(e,".\n")+"Actual:   ".concat(s,".\n")+"Expected: ".concat(i,"."))}"undefined"!==typeof expect&&expect().nothing()}function d(t,e){t().then(()=>e.fail(),()=>e()),"undefined"!==typeof expect&&expect().nothing()}function p(t,e){const n="string"===typeof e||"number"===typeof e||"boolean"===typeof e?[e]:e;return Object(o.z)(t)||Object(o.z)(t[0])||Object(o.z)(e)||Object(o.z)(e[0])?l(t,n,(t,e)=>t==e):l(t,e,(t,e)=>f(t,e,0))}function h(t,e,n){if(null==n&&(n=u()),!f(t,e,n))throw new Error("Numbers differ: actual === ".concat(t,", expected === ").concat(e));"undefined"!==typeof expect&&expect().nothing()}function f(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function m(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error("Value out of range:".concat(t[r]," low: ").concat(e,", high: ").concat(n))}function b(t,e){const n=new Float32Array(t),r=new Float32Array(e);if(n.length!==r.length)throw new Error("Expected ArrayBuffer to be of length "+"".concat(r.length,", but it was ").concat(n.length));for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error("Expected ArrayBuffer value at ".concat(a," to be ")+"".concat(r[a]," but got ").concat(n[a]," instead"))}function g(t){for(let e=0;e<t.length;e++){const n=t[e];Array.isArray(n)?g(n):t[e]=Object(s.encodeString)(n)}return t}function y(t){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(t),new Promise(t=>{e.addEventListener("loadeddata",n=>t(e)),e.load()})}async function v(t){await t.play(),"requestVideoFrameCallback"in t&&await new Promise(e=>{t.requestVideoFrameCallback(e)})}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(5),a=n(118);function o(t,e,n){const o=Object(r.c)(t,n);return Object(a.a)(t,e,o,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(12),s=n(7),i=n(13);const c=Object(s.a)({conv2DBackpropInput_:function(t,e,n,s,c){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",l=arguments.length>6?arguments[6]:void 0;o.b(t.length===e.rank,()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match"));let d=t,p=e,h=!1;3===e.rank&&(h=!0,p=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),d=[1,t[0],t[1],t[2]]),o.b(4===d.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(d.length,".")),o.b(4===p.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank)),o.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank));const f="NHWC"===u?d[3]:d[1],m="NHWC"===u?p.shape[3]:p.shape[1];o.b(f===n.shape[2],()=>"Error in conv2dDerInput: depth of input (".concat(f,") must ")+"match input depth for filter ".concat(n.shape[2],".")),o.b(m===n.shape[3],()=>"Error in conv2dDerInput: depth of output (".concat(m,") must ")+"match output depth for filter ".concat(n.shape[3],".")),null!=l&&o.b(o.v(c),()=>"Error in conv2dDerInput: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(c,"."));const b={dy:p,filter:n},g={strides:s,pad:c,dataFormat:u,dimRoundingMode:l,inputShape:d},y=r.a.runKernel(a.E,b,g);return h?Object(i.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return o}));var r=n(120);n(176);class a{constructor(t,e,n,a,o){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=o||Math.random();this.random=r.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,a,o;do{r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*s,e=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class o{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(t," - ").concat(e," <= 1 and dtype is not float"));this.random=r.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"a",(function(){return o}));var r=n(9);n(5),n(12),n(17);function a(){return 32===r.a.backend.floatPrecision()?.001:.1}function o(t,e,n){if(null==n&&(n=a()),!s(t,e,n))throw new Error("Numbers differ: actual === ".concat(t,", expected === ").concat(e))}function s(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(12),s=n(7),i=n(13);const c=Object(s.a)({conv2DBackpropFilter_:function(t,e,n,s,c){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",l=arguments.length>6?arguments[6]:void 0,d=t;3===t.rank&&(d=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p=e;3===p.rank&&(p=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),o.b(4===d.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(d.shape,".")),o.b(4===p.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,".")),o.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,"."));const h="NHWC"===u?d.shape[3]:d.shape[1],f="NHWC"===u?p.shape[3]:p.shape[1];o.b(h===n[2],()=>"Error in conv2dDerFilter: depth of input ".concat(h,") must ")+"match input depth in filter (".concat(n[2],".")),o.b(f===n[3],()=>"Error in conv2dDerFilter: depth of dy (".concat(f,") must ")+"match output depth for filter (".concat(n[3],").")),null!=l&&o.b(o.v(c),()=>"Error in conv2dDerFilter: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(c,"."));const m={x:d,dy:p},b={strides:s,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:n};return r.a.runKernel(a.D,m,b)}})},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(r){"object"===typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";(function(t){n(8);var e=n(190),r=n(32);const a=Object(r.c)();a.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>e.isBrowser()),a.registerFlag("IS_NODE",()=>"undefined"!==typeof t&&"undefined"!==typeof t.versions&&"undefined"!==typeof t.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),a.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),a.registerFlag("ENGINE_COMPILE_ONLY",()=>!1),a.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),a.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1)}).call(this,n(137))},function(t,e,n){"use strict";(function(t){var r=n(354),a=n(355),o=n(356);function s(){return c.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(t,e){if(s()<e)throw new RangeError("Invalid typed array length");return c.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=c.prototype:(null===t&&(t=new c(e)),t.length=e),t}function c(t,e,n){if(!c.TYPED_ARRAY_SUPPORT&&!(this instanceof c))return new c(t,e,n);if("number"===typeof t){if("string"===typeof e)throw new Error("If encoding is specified then the first argument must be a string");return d(this,t)}return u(this,t,e,n)}function u(t,e,n,r){if("number"===typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r);c.TYPED_ARRAY_SUPPORT?(t=e).__proto__=c.prototype:t=p(t,e);return t}(t,e,n,r):"string"===typeof e?function(t,e,n){"string"===typeof n&&""!==n||(n="utf8");if(!c.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(e,n),a=(t=i(t,r)).write(e,n);a!==r&&(t=t.slice(0,a));return t}(t,e,n):function(t,e){if(c.isBuffer(e)){var n=0|h(e.length);return 0===(t=i(t,n)).length||e.copy(t,0,0,n),t}if(e){if("undefined"!==typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!==typeof e.length||(r=e.length)!==r?i(t,0):p(t,e);if("Buffer"===e.type&&o(e.data))return p(t,e.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function l(t){if("number"!==typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function d(t,e){if(l(e),t=i(t,e<0?0:0|h(e)),!c.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function p(t,e){var n=e.length<0?0:0|h(e.length);t=i(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function h(t){if(t>=s())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s().toString(16)+" bytes");return 0|t}function f(t,e){if(c.isBuffer(t))return t.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!==typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return B(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return V(t).length;default:if(r)return B(t).length;e=(""+e).toLowerCase(),r=!0}}function m(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return E(this,e,n);case"utf8":case"utf-8":return S(this,e,n);case"ascii":return I(this,e,n);case"latin1":case"binary":return T(this,e,n);case"base64":return N(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function b(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function g(t,e,n,r,a){if(0===t.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(a)return-1;n=t.length-1}else if(n<0){if(!a)return-1;n=0}if("string"===typeof e&&(e=c.from(e,r)),c.isBuffer(e))return 0===e.length?-1:y(t,e,n,r,a);if("number"===typeof e)return e&=255,c.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):y(t,[e],n,r,a);throw new TypeError("val must be string, number or Buffer")}function y(t,e,n,r,a){var o,s=1,i=t.length,c=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;s=2,i/=2,c/=2,n/=2}function u(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(a){var l=-1;for(o=n;o<i;o++)if(u(t,o)===u(e,-1===l?0:o-l)){if(-1===l&&(l=o),o-l+1===c)return l*s}else-1!==l&&(o-=o-l),l=-1}else for(n+c>i&&(n=i-c),o=n;o>=0;o--){for(var d=!0,p=0;p<c;p++)if(u(t,o+p)!==u(e,p)){d=!1;break}if(d)return o}return-1}function v(t,e,n,r){n=Number(n)||0;var a=t.length-n;r?(r=Number(r))>a&&(r=a):r=a;var o=e.length;if(o%2!==0)throw new TypeError("Invalid hex string");r>o/2&&(r=o/2);for(var s=0;s<r;++s){var i=parseInt(e.substr(2*s,2),16);if(isNaN(i))return s;t[n+s]=i}return s}function O(t,e,n,r){return W(B(e,t.length-n),t,n,r)}function x(t,e,n,r){return W(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function w(t,e,n,r){return x(t,e,n,r)}function k(t,e,n,r){return W(V(e),t,n,r)}function j(t,e,n,r){return W(function(t,e){for(var n,r,a,o=[],s=0;s<t.length&&!((e-=2)<0);++s)n=t.charCodeAt(s),r=n>>8,a=n%256,o.push(a),o.push(r);return o}(e,t.length-n),t,n,r)}function N(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function S(t,e,n){n=Math.min(t.length,n);for(var r=[],a=e;a<n;){var o,s,i,c,u=t[a],l=null,d=u>239?4:u>223?3:u>191?2:1;if(a+d<=n)switch(d){case 1:u<128&&(l=u);break;case 2:128===(192&(o=t[a+1]))&&(c=(31&u)<<6|63&o)>127&&(l=c);break;case 3:o=t[a+1],s=t[a+2],128===(192&o)&&128===(192&s)&&(c=(15&u)<<12|(63&o)<<6|63&s)>2047&&(c<55296||c>57343)&&(l=c);break;case 4:o=t[a+1],s=t[a+2],i=t[a+3],128===(192&o)&&128===(192&s)&&128===(192&i)&&(c=(15&u)<<18|(63&o)<<12|(63&s)<<6|63&i)>65535&&c<1114112&&(l=c)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=4096));return n}(r)}e.Buffer=c,e.SlowBuffer=function(t){+t!=t&&(t=0);return c.alloc(+t)},e.INSPECT_MAX_BYTES=50,c.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"===typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(e){return!1}}(),e.kMaxLength=s(),c.poolSize=8192,c._augment=function(t){return t.__proto__=c.prototype,t},c.from=function(t,e,n){return u(null,t,e,n)},c.TYPED_ARRAY_SUPPORT&&(c.prototype.__proto__=Uint8Array.prototype,c.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&c[Symbol.species]===c&&Object.defineProperty(c,Symbol.species,{value:null,configurable:!0})),c.alloc=function(t,e,n){return function(t,e,n,r){return l(e),e<=0?i(t,e):void 0!==n?"string"===typeof r?i(t,e).fill(n,r):i(t,e).fill(n):i(t,e)}(null,t,e,n)},c.allocUnsafe=function(t){return d(null,t)},c.allocUnsafeSlow=function(t){return d(null,t)},c.isBuffer=function(t){return!(null==t||!t._isBuffer)},c.compare=function(t,e){if(!c.isBuffer(t)||!c.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,a=0,o=Math.min(n,r);a<o;++a)if(t[a]!==e[a]){n=t[a],r=e[a];break}return n<r?-1:r<n?1:0},c.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(t,e){if(!o(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return c.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=c.allocUnsafe(e),a=0;for(n=0;n<t.length;++n){var s=t[n];if(!c.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(r,a),a+=s.length}return r},c.byteLength=f,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)b(this,e,e+1);return this},c.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)b(this,e,e+3),b(this,e+1,e+2);return this},c.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)b(this,e,e+7),b(this,e+1,e+6),b(this,e+2,e+5),b(this,e+3,e+4);return this},c.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?S(this,0,t):m.apply(this,arguments)},c.prototype.equals=function(t){if(!c.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===c.compare(this,t)},c.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},c.prototype.compare=function(t,e,n,r,a){if(!c.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),e<0||n>t.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&e>=n)return 0;if(r>=a)return-1;if(e>=n)return 1;if(this===t)return 0;for(var o=(a>>>=0)-(r>>>=0),s=(n>>>=0)-(e>>>=0),i=Math.min(o,s),u=this.slice(r,a),l=t.slice(e,n),d=0;d<i;++d)if(u[d]!==l[d]){o=u[d],s=l[d];break}return o<s?-1:s<o?1:0},c.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},c.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},c.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},c.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"===typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-e;if((void 0===n||n>a)&&(n=a),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return v(this,t,e,n);case"utf8":case"utf-8":return O(this,t,e,n);case"ascii":return x(this,t,e,n);case"latin1":case"binary":return w(this,t,e,n);case"base64":return k(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return j(this,t,e,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function I(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(127&t[a]);return r}function T(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(t[a]);return r}function E(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var a="",o=e;o<n;++o)a+=P(t[o]);return a}function C(t,e,n){for(var r=t.slice(e,n),a="",o=0;o<r.length;o+=2)a+=String.fromCharCode(r[o]+256*r[o+1]);return a}function A(t,e,n){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function _(t,e,n,r,a,o){if(!c.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>a||e<o)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function R(t,e,n,r){e<0&&(e=65535+e+1);for(var a=0,o=Math.min(t.length-n,2);a<o;++a)t[n+a]=(e&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function D(t,e,n,r){e<0&&(e=4294967295+e+1);for(var a=0,o=Math.min(t.length-n,4);a<o;++a)t[n+a]=e>>>8*(r?a:3-a)&255}function F(t,e,n,r,a,o){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(t,e,n,r,o){return o||F(t,0,n,4),a.write(t,e,n,r,23,4),n+4}function L(t,e,n,r,o){return o||F(t,0,n,8),a.write(t,e,n,r,52,8),n+8}c.prototype.slice=function(t,e){var n,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),c.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=c.prototype;else{var a=e-t;n=new c(a,void 0);for(var o=0;o<a;++o)n[o]=this[o+t]}return n},c.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t],a=1,o=0;++o<e&&(a*=256);)r+=this[t+o]*a;return r},c.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t+--e],a=1;e>0&&(a*=256);)r+=this[t+--e]*a;return r},c.prototype.readUInt8=function(t,e){return e||A(t,1,this.length),this[t]},c.prototype.readUInt16LE=function(t,e){return e||A(t,2,this.length),this[t]|this[t+1]<<8},c.prototype.readUInt16BE=function(t,e){return e||A(t,2,this.length),this[t]<<8|this[t+1]},c.prototype.readUInt32LE=function(t,e){return e||A(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},c.prototype.readUInt32BE=function(t,e){return e||A(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},c.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t],a=1,o=0;++o<e&&(a*=256);)r+=this[t+o]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*e)),r},c.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=e,a=1,o=this[t+--r];r>0&&(a*=256);)o+=this[t+--r]*a;return o>=(a*=128)&&(o-=Math.pow(2,8*e)),o},c.prototype.readInt8=function(t,e){return e||A(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},c.prototype.readInt16LE=function(t,e){e||A(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(t,e){e||A(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(t,e){return e||A(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},c.prototype.readInt32BE=function(t,e){return e||A(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},c.prototype.readFloatLE=function(t,e){return e||A(t,4,this.length),a.read(this,t,!0,23,4)},c.prototype.readFloatBE=function(t,e){return e||A(t,4,this.length),a.read(this,t,!1,23,4)},c.prototype.readDoubleLE=function(t,e){return e||A(t,8,this.length),a.read(this,t,!0,52,8)},c.prototype.readDoubleBE=function(t,e){return e||A(t,8,this.length),a.read(this,t,!1,52,8)},c.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||_(this,t,e,n,Math.pow(2,8*n)-1,0);var a=1,o=0;for(this[e]=255&t;++o<n&&(a*=256);)this[e+o]=t/a&255;return e+n},c.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||_(this,t,e,n,Math.pow(2,8*n)-1,0);var a=n-1,o=1;for(this[e+a]=255&t;--a>=0&&(o*=256);)this[e+a]=t/o&255;return e+n},c.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,1,255,0),c.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},c.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},c.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},c.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):D(this,t,e,!0),e+4},c.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},c.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);_(this,t,e,n,a-1,-a)}var o=0,s=1,i=0;for(this[e]=255&t;++o<n&&(s*=256);)t<0&&0===i&&0!==this[e+o-1]&&(i=1),this[e+o]=(t/s>>0)-i&255;return e+n},c.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);_(this,t,e,n,a-1,-a)}var o=n-1,s=1,i=0;for(this[e+o]=255&t;--o>=0&&(s*=256);)t<0&&0===i&&0!==this[e+o+1]&&(i=1),this[e+o]=(t/s>>0)-i&255;return e+n},c.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,1,127,-128),c.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},c.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},c.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},c.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,2147483647,-2147483648),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):D(this,t,e,!0),e+4},c.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},c.prototype.writeFloatLE=function(t,e,n){return M(this,t,e,!0,n)},c.prototype.writeFloatBE=function(t,e,n){return M(this,t,e,!1,n)},c.prototype.writeDoubleLE=function(t,e,n){return L(this,t,e,!0,n)},c.prototype.writeDoubleBE=function(t,e,n){return L(this,t,e,!1,n)},c.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var a,o=r-n;if(this===t&&n<e&&e<r)for(a=o-1;a>=0;--a)t[a+e]=this[a+n];else if(o<1e3||!c.TYPED_ARRAY_SUPPORT)for(a=0;a<o;++a)t[a+e]=this[a+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+o),e);return o},c.prototype.fill=function(t,e,n,r){if("string"===typeof t){if("string"===typeof e?(r=e,e=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===t.length){var a=t.charCodeAt(0);a<256&&(t=a)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!c.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var o;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"===typeof t)for(o=e;o<n;++o)this[o]=t;else{var s=c.isBuffer(t)?t:B(new c(t,r).toString()),i=s.length;for(o=0;o<n-e;++o)this[o+e]=s[o%i]}return this};var z=/[^+\/0-9A-Za-z-_]/g;function P(t){return t<16?"0"+t.toString(16):t.toString(16)}function B(t,e){var n;e=e||1/0;for(var r=t.length,a=null,o=[],s=0;s<r;++s){if((n=t.charCodeAt(s))>55295&&n<57344){if(!a){if(n>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===r){(e-=3)>-1&&o.push(239,191,189);continue}a=n;continue}if(n<56320){(e-=3)>-1&&o.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(e-=3)>-1&&o.push(239,191,189);if(a=null,n<128){if((e-=1)<0)break;o.push(n)}else if(n<2048){if((e-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function V(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(z,"")).length<2)return"";for(;t.length%4!==0;)t+="=";return t}(t))}function W(t,e,n,r){for(var a=0;a<r&&!(a+n>=e.length||a>=t.length);++a)e[a+n]=t[a];return a}}).call(this,n(178))},function(t,e,n){"use strict";(function(t){n(9);var e=n(201),r=n(35);const a=Object(r.b)();a.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>e.isBrowser()),a.registerFlag("IS_NODE",()=>"undefined"!==typeof t&&"undefined"!==typeof t.versions&&"undefined"!==typeof t.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0)}).call(this,n(137))},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a}));class r{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{refCount(t){return o("refCount")}incRef(t){return o("incRef")}timerAvailable(){return!0}time(t){return o("time")}read(t){return o("read")}readSync(t){return o("readSync")}readToGPU(t,e){return o("readToGPU")}numDataIds(){return o("numDataIds")}disposeData(t,e){return o("disposeData")}write(t,e,n){return o("write")}move(t,e,n,r,a){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return o("dispose")}}function o(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a}));class r{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{decComplexRef(t){}time(t){return o("time")}read(t){return o("read")}readSync(t){return o("readSync")}numDataIds(){return o("numDataIds")}disposeData(t){return o("disposeData")}write(t,e,n){return o("write")}move(t,e,n,r){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return o("batchMatMul")}fusedBatchMatMul(t){let{a:e,b:n,transposeA:r,transposeB:a,bias:s,activation:i,preluActivationWeights:c}=t;return o("fusedBatchMatMul")}slice(t,e,n){return o("slice")}stridedSlice(t,e,n,r){return o("stridedSlice")}unstack(t,e){return o("unstack")}reverse(t,e){return o("reverse")}concat(t,e){return o("concat")}neg(t){return o("neg")}add(t,e){return o("add")}addN(t){return o("addN")}subtract(t,e){return o("subtract")}multiply(t,e){return o("multiply")}realDivide(t,e){return o("realDivide")}floorDiv(t,e){return o("floorDiv")}sum(t,e){return o("sum")}prod(t,e){return o("prod")}unsortedSegmentSum(t,e,n){return o("unsortedSegmentSum")}argMin(t,e){return o("argMin")}argMax(t,e){return o("argMax")}equal(t,e){return o("equal")}notEqual(t,e){return o("notEqual")}less(t,e){return o("less")}lessEqual(t,e){return o("lessEqual")}greater(t,e){return o("greater")}greaterEqual(t,e){return o("greaterEqual")}logicalNot(t){return o("logicalNot")}logicalAnd(t,e){return o("logicalAnd")}logicalOr(t,e){return o("logicalOr")}where(t){return o("where")}select(t,e,n){return o("select")}topk(t,e,n){return o("topk")}min(t,e){return o("min")}minimum(t,e){return o("minimum")}mod(t,e){return o("mod")}max(t,e){return o("max")}maximum(t,e){return o("maximum")}all(t,e){return o("all")}any(t,e){return o("any")}squaredDifference(t,e){return o("squaredDifference")}ceil(t){return o("ceil")}floor(t){return o("floor")}round(t){return o("round")}sign(t){return o("sign")}isNaN(t){return o("isNaN")}isInf(t){return o("isInf")}isFinite(t){return o("isFinite")}pow(t,e){return o("pow")}exp(t){return o("exp")}expm1(t){return o("expm1")}softmax(t,e){return o("softmax")}log(t){return o("log")}log1p(t){return o("log1p")}sqrt(t){return o("sqrt")}rsqrt(t){return o("rsqrt")}square(t){return o("square")}reciprocal(t){return o("reciprocal")}relu(t){return o("relu")}relu6(t){return o("relu6")}prelu(t,e){return o("prelu")}elu(t){return o("elu")}eluDer(t,e){return o("eluDer")}selu(t){return o("selu")}int(t){return o("int")}clip(t,e,n){return o("clip")}abs(t){return o("abs")}complexAbs(t){return o("complexAbs")}sigmoid(t){return o("sigmoid")}softplus(t){return o("softplus")}sin(t){return o("sin")}cos(t){return o("cos")}tan(t){return o("tan")}asin(t){return o("asin")}acos(t){return o("acos")}atan(t){return o("atan")}atan2(t,e){return o("atan2")}sinh(t){return o("sinh")}cosh(t){return o("cosh")}tanh(t){return o("tanh")}asinh(t){return o("asinh")}acosh(t){return o("acosh")}atanh(t){return o("atanh")}erf(t){return o("erf")}step(t,e){return o("step")}fusedConv2d(t){let{input:e,filter:n,convInfo:r,bias:a,activation:s,preluActivationWeights:i}=t;return o("fusedConv2d")}conv2d(t,e,n){return o("conv2d")}conv2dDerInput(t,e,n){return o("conv2dDerInput")}conv2dDerFilter(t,e,n){return o("conv2dDerFilter")}fusedDepthwiseConv2D(t){let{input:e,filter:n,convInfo:r,bias:a,activation:s,preluActivationWeights:i}=t;return o("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return o("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return o("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return o("depthwiseConv2DDerFilter")}conv3d(t,e,n){return o("conv3d")}conv3dDerInput(t,e,n){return o("conv3dDerInput")}conv3dDerFilter(t,e,n){return o("conv3dDerFilter")}maxPool(t,e){return o("maxPool")}maxPoolBackprop(t,e,n,r){return o("maxPoolBackprop")}avgPool(t,e){return o("avgPool")}avgPoolBackprop(t,e,n){return o("avgPoolBackprop")}avgPool3d(t,e){return o("avgPool3d")}avgPool3dBackprop(t,e,n){return o("avgPool3dBackprop")}maxPool3d(t,e){return o("maxPool3d")}maxPool3dBackprop(t,e,n,r){return o("maxPool3dBackprop")}reshape(t,e){return o("reshape")}cast(t,e){return o("cast")}tile(t,e){return o("tile")}pad(t,e,n){return o("pad")}transpose(t,e){return o("transpose")}gather(t,e,n){return o("gather")}gatherND(t,e){return o("gatherND")}scatterND(t,e,n){return o("scatterND")}batchToSpaceND(t,e,n){return o("batchToSpaceND")}spaceToBatchND(t,e,n){return o("spaceToBatchND")}resizeBilinear(t,e,n,r,a){return o("resizeBilinear")}resizeBilinearBackprop(t,e,n){return o("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r,a){return o("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return o("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,a,s){return o("batchNorm")}localResponseNormalization4D(t,e,n,r,a){return o("localResponseNormalization4D")}LRNGrad(t,e,n,r,a,s,i){return o("LRNGrad")}multinomial(t,e,n,r){return o("multinomial")}oneHot(t,e,n,r){return o("oneHot")}cumsum(t,e,n,r){return o("cumsum")}nonMaxSuppression(t,e,n,r,a){return o("nonMaxSuppression")}fft(t){return o("fft")}ifft(t){return o("ifft")}complex(t,e){return o("complex")}real(t){return o("real")}imag(t){return o("imag")}cropAndResize(t,e,n,r,a,s){return o("cropAndResize")}depthToSpace(t,e,n){return o("depthToSpace")}split(t,e,n){return o("split")}sparseToDense(t,e,n,r){return o("sparseToDense")}diag(t){return o("diag")}fill(t,e,n){return o("fill")}onesLike(t){return o("onesLike")}zerosLike(t){return o("zerosLike")}linspace(t,e,n){return o("linspace")}dispose(){return o("dispose")}}function o(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({oneHot_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));const c=Object(o.a)(t,"indices","oneHot","int32"),u={indices:c},l={dtype:i,depth:e,onValue:n,offValue:s};return r.a.runKernel(a.fc,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(9),a=n(4);function o(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:o};return r.a.runKernel(a.hc,{},s)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(t,e,n){"use strict";(function(t,r){let a;function o(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof t)e=t;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function s(t,e){const n=function(){const t=o();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return s}))}).call(this,n(178),n(137))},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(t,e,n){"use strict";n.d(e,"c",(function(){return re})),n.d(e,"a",(function(){return Dt})),n.d(e,"b",(function(){return Lt}));var r={};n.r(r),n.d(r,"abs",(function(){return u.b})),n.d(r,"acos",(function(){return u.c})),n.d(r,"acosh",(function(){return u.d})),n.d(r,"add",(function(){return u.e})),n.d(r,"addN",(function(){return u.f})),n.d(r,"all",(function(){return u.g})),n.d(r,"any",(function(){return u.h})),n.d(r,"argMax",(function(){return u.i})),n.d(r,"argMin",(function(){return u.j})),n.d(r,"asin",(function(){return u.k})),n.d(r,"asinh",(function(){return u.l})),n.d(r,"atan",(function(){return u.m})),n.d(r,"atan2",(function(){return u.n})),n.d(r,"atanh",(function(){return u.o})),n.d(r,"avgPool",(function(){return u.p})),n.d(r,"avgPool3d",(function(){return u.q})),n.d(r,"basicLSTMCell",(function(){return u.r})),n.d(r,"batchToSpaceND",(function(){return u.w})),n.d(r,"batchNorm",(function(){return u.s})),n.d(r,"batchNorm2d",(function(){return u.t})),n.d(r,"batchNorm3d",(function(){return u.u})),n.d(r,"batchNorm4d",(function(){return u.v})),n.d(r,"bincount",(function(){return u.x})),n.d(r,"broadcastArgs",(function(){return u.z})),n.d(r,"broadcastTo",(function(){return u.A})),n.d(r,"buffer",(function(){return u.B})),n.d(r,"cast",(function(){return u.C})),n.d(r,"ceil",(function(){return u.D})),n.d(r,"clipByValue",(function(){return u.E})),n.d(r,"clone",(function(){return u.F})),n.d(r,"complex",(function(){return u.G})),n.d(r,"concat",(function(){return u.H})),n.d(r,"concat1d",(function(){return u.I})),n.d(r,"concat2d",(function(){return u.J})),n.d(r,"concat3d",(function(){return u.K})),n.d(r,"concat4d",(function(){return u.L})),n.d(r,"conv1d",(function(){return u.M})),n.d(r,"conv2d",(function(){return u.N})),n.d(r,"conv2dTranspose",(function(){return u.O})),n.d(r,"conv3d",(function(){return u.P})),n.d(r,"conv3dTranspose",(function(){return u.Q})),n.d(r,"cos",(function(){return u.R})),n.d(r,"cosh",(function(){return u.S})),n.d(r,"cumprod",(function(){return u.U})),n.d(r,"cumsum",(function(){return u.V})),n.d(r,"denseBincount",(function(){return u.W})),n.d(r,"depthToSpace",(function(){return u.X})),n.d(r,"depthwiseConv2d",(function(){return u.Y})),n.d(r,"diag",(function(){return u.Z})),n.d(r,"dilation2d",(function(){return u.ab})),n.d(r,"div",(function(){return u.bb})),n.d(r,"divNoNan",(function(){return u.cb})),n.d(r,"dot",(function(){return u.db})),n.d(r,"einsum",(function(){return u.fb})),n.d(r,"elu",(function(){return u.gb})),n.d(r,"equal",(function(){return u.ib})),n.d(r,"erf",(function(){return u.jb})),n.d(r,"euclideanNorm",(function(){return u.kb})),n.d(r,"exp",(function(){return u.lb})),n.d(r,"expandDims",(function(){return u.mb})),n.d(r,"expm1",(function(){return u.nb})),n.d(r,"eye",(function(){return u.ob})),n.d(r,"fill",(function(){return u.qb})),n.d(r,"floor",(function(){return u.rb})),n.d(r,"floorDiv",(function(){return u.sb})),n.d(r,"gather",(function(){return u.ub})),n.d(r,"greater",(function(){return u.wb})),n.d(r,"greaterEqual",(function(){return u.xb})),n.d(r,"imag",(function(){return u.zb})),n.d(r,"isFinite",(function(){return u.Db})),n.d(r,"isInf",(function(){return u.Eb})),n.d(r,"isNaN",(function(){return u.Fb})),n.d(r,"leakyRelu",(function(){return u.Gb})),n.d(r,"less",(function(){return u.Hb})),n.d(r,"lessEqual",(function(){return u.Ib})),n.d(r,"linspace",(function(){return u.Kb})),n.d(r,"localResponseNormalization",(function(){return u.Lb})),n.d(r,"log",(function(){return u.Mb})),n.d(r,"log1p",(function(){return u.Nb})),n.d(r,"logSigmoid",(function(){return u.Ob})),n.d(r,"logSoftmax",(function(){return u.Pb})),n.d(r,"logSumExp",(function(){return u.Qb})),n.d(r,"logicalAnd",(function(){return u.Rb})),n.d(r,"logicalNot",(function(){return u.Sb})),n.d(r,"logicalOr",(function(){return u.Tb})),n.d(r,"logicalXor",(function(){return u.Ub})),n.d(r,"lowerBound",(function(){return u.Wb})),n.d(r,"matMul",(function(){return u.Xb})),n.d(r,"max",(function(){return u.Yb})),n.d(r,"maxPool",(function(){return u.Zb})),n.d(r,"maxPool3d",(function(){return u.ac})),n.d(r,"maxPoolWithArgmax",(function(){return u.bc})),n.d(r,"maximum",(function(){return u.cc})),n.d(r,"mean",(function(){return u.dc})),n.d(r,"meshgrid",(function(){return u.ec})),n.d(r,"min",(function(){return u.fc})),n.d(r,"minimum",(function(){return u.gc})),n.d(r,"mirrorPad",(function(){return u.hc})),n.d(r,"mod",(function(){return u.ic})),n.d(r,"moments",(function(){return u.jc})),n.d(r,"mul",(function(){return u.lc})),n.d(r,"multiRNNCell",(function(){return u.mc})),n.d(r,"multinomial",(function(){return u.nc})),n.d(r,"neg",(function(){return u.oc})),n.d(r,"notEqual",(function(){return u.qc})),n.d(r,"oneHot",(function(){return u.rc})),n.d(r,"ones",(function(){return u.sc})),n.d(r,"onesLike",(function(){return u.tc})),n.d(r,"outerProduct",(function(){return u.vc})),n.d(r,"pad",(function(){return u.wc})),n.d(r,"pad1d",(function(){return u.xc})),n.d(r,"pad2d",(function(){return u.yc})),n.d(r,"pad3d",(function(){return u.zc})),n.d(r,"pad4d",(function(){return u.Ac})),n.d(r,"pool",(function(){return u.Bc})),n.d(r,"pow",(function(){return u.Cc})),n.d(r,"prelu",(function(){return u.Dc})),n.d(r,"print",(function(){return u.Ec})),n.d(r,"prod",(function(){return u.Fc})),n.d(r,"raggedGather",(function(){return u.Gc})),n.d(r,"raggedTensorToTensor",(function(){return u.Hc})),n.d(r,"rand",(function(){return u.Ic})),n.d(r,"randomGamma",(function(){return u.Jc})),n.d(r,"randomNormal",(function(){return u.Kc})),n.d(r,"randomStandardNormal",(function(){return u.Lc})),n.d(r,"randomUniform",(function(){return u.Mc})),n.d(r,"range",(function(){return u.Nc})),n.d(r,"real",(function(){return u.Oc})),n.d(r,"reciprocal",(function(){return u.Pc})),n.d(r,"relu",(function(){return u.Qc})),n.d(r,"relu6",(function(){return u.Rc})),n.d(r,"reshape",(function(){return u.Sc})),n.d(r,"reverse",(function(){return u.Tc})),n.d(r,"reverse1d",(function(){return u.Uc})),n.d(r,"reverse2d",(function(){return u.Vc})),n.d(r,"reverse3d",(function(){return u.Wc})),n.d(r,"reverse4d",(function(){return u.Xc})),n.d(r,"round",(function(){return u.Zc})),n.d(r,"rsqrt",(function(){return u.ad})),n.d(r,"scalar",(function(){return u.bd})),n.d(r,"selu",(function(){return u.ed})),n.d(r,"separableConv2d",(function(){return u.fd})),n.d(r,"setdiff1dAsync",(function(){return u.gd})),n.d(r,"sigmoid",(function(){return u.hd})),n.d(r,"sign",(function(){return u.id})),n.d(r,"sin",(function(){return u.kd})),n.d(r,"sinh",(function(){return u.ld})),n.d(r,"slice",(function(){return u.md})),n.d(r,"slice1d",(function(){return u.nd})),n.d(r,"slice2d",(function(){return u.od})),n.d(r,"slice3d",(function(){return u.pd})),n.d(r,"slice4d",(function(){return u.qd})),n.d(r,"softmax",(function(){return u.rd})),n.d(r,"softplus",(function(){return u.sd})),n.d(r,"spaceToBatchND",(function(){return u.td})),n.d(r,"fft",(function(){return u.pb})),n.d(r,"ifft",(function(){return u.yb})),n.d(r,"irfft",(function(){return u.Cb})),n.d(r,"rfft",(function(){return u.Yc})),n.d(r,"split",(function(){return u.xd})),n.d(r,"sqrt",(function(){return u.yd})),n.d(r,"square",(function(){return u.zd})),n.d(r,"squaredDifference",(function(){return u.Ad})),n.d(r,"squeeze",(function(){return u.Bd})),n.d(r,"stack",(function(){return u.Cd})),n.d(r,"step",(function(){return u.Dd})),n.d(r,"stridedSlice",(function(){return u.Ed})),n.d(r,"sub",(function(){return u.Gd})),n.d(r,"sum",(function(){return u.Hd})),n.d(r,"tan",(function(){return u.Id})),n.d(r,"tanh",(function(){return u.Jd})),n.d(r,"tensor",(function(){return u.Kd})),n.d(r,"tensor1d",(function(){return u.Ld})),n.d(r,"tensor2d",(function(){return u.Md})),n.d(r,"tensor3d",(function(){return u.Nd})),n.d(r,"tensor4d",(function(){return u.Od})),n.d(r,"tensor5d",(function(){return u.Pd})),n.d(r,"tensor6d",(function(){return u.Qd})),n.d(r,"tile",(function(){return u.Rd})),n.d(r,"topk",(function(){return u.Sd})),n.d(r,"truncatedNormal",(function(){return u.Ud})),n.d(r,"unique",(function(){return u.Vd})),n.d(r,"unsortedSegmentSum",(function(){return u.Wd})),n.d(r,"unstack",(function(){return u.Xd})),n.d(r,"upperBound",(function(){return u.Yd})),n.d(r,"variable",(function(){return u.Zd})),n.d(r,"where",(function(){return u.ae})),n.d(r,"whereAsync",(function(){return u.be})),n.d(r,"zeros",(function(){return u.ce})),n.d(r,"zerosLike",(function(){return u.de})),n.d(r,"booleanMaskAsync",(function(){return u.y})),n.d(r,"transpose",(function(){return u.Td})),n.d(r,"norm",(function(){return u.pc})),n.d(r,"movingAverage",(function(){return u.kc})),n.d(r,"scatterND",(function(){return u.cd})),n.d(r,"searchSorted",(function(){return u.dd})),n.d(r,"sparseToDense",(function(){return u.vd})),n.d(r,"gatherND",(function(){return u.vb})),n.d(r,"dropout",(function(){return u.eb})),n.d(r,"enclosingPowerOfTwo",(function(){return u.hb})),n.d(r,"cosineWindow",(function(){return u.T})),n.d(r,"inTopKAsync",(function(){return u.Bb})),n.d(r,"op",(function(){return u.uc})),n.d(r,"OP_SCOPE_SUFFIX",(function(){return u.a})),n.d(r,"image",(function(){return u.Ab})),n.d(r,"linalg",(function(){return u.Jb})),n.d(r,"losses",(function(){return u.Vb})),n.d(r,"spectral",(function(){return u.wd})),n.d(r,"fused",(function(){return u.tb})),n.d(r,"signal",(function(){return u.jd})),n.d(r,"sparse",(function(){return u.ud})),n.d(r,"string",(function(){return u.Fd}));var a=n(18);Object(a.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var o=n(81),s=n(1);class i{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return Object(s.e)(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Object(s.e)(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(o.f)(this.node.rawAttrs,t,e);if(null!=n.s)return Object(o.i)(this.node.rawAttrs,t,e);if(null!=n.b)return Object(o.c)(this.node.rawAttrs,t,e);if(null!=n.shape)return Object(o.k)(this.node.rawAttrs,t,e);if(null!=n.type)return Object(o.e)(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(o.g)(this.node.rawAttrs,t,e);if(null!=n.list.s)return Object(o.h)(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Object(o.j)(this.node.rawAttrs,t,e);if(null!=n.list.b)return Object(o.b)(this.node.rawAttrs,t,e);if(null!=n.list.type)return Object(o.d)(this.node.rawAttrs,t,e)}return e}}var c=n(138),u=n(146);const l=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"AddN":return[a.addN(Object(s.d)("tensors",t,e,n))];case"FloorMod":case"Mod":return[a.mod(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Mul":return[a.mul(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"RealDiv":case"Div":return[a.div(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"DivNoNan":return[a.divNoNan(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"FloorDiv":return[a.floorDiv(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Sub":return[a.sub(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Minimum":return[a.minimum(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Maximum":return[a.maximum(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Pow":return[a.pow(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"SquaredDifference":return[a.squaredDifference(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},d=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"Abs":case"ComplexAbs":return[a.abs(Object(s.d)("x",t,e,n))];case"Acos":return[a.acos(Object(s.d)("x",t,e,n))];case"Acosh":return[a.acosh(Object(s.d)("x",t,e,n))];case"Asin":return[a.asin(Object(s.d)("x",t,e,n))];case"Asinh":return[a.asinh(Object(s.d)("x",t,e,n))];case"Atan":return[a.atan(Object(s.d)("x",t,e,n))];case"Atan2":return[a.atan2(Object(s.d)("x",t,e,n),Object(s.d)("y",t,e,n))];case"Atanh":return[a.atanh(Object(s.d)("x",t,e,n))];case"Ceil":return[a.ceil(Object(s.d)("x",t,e,n))];case"Complex":return[a.complex(Object(s.d)("real",t,e,n),Object(s.d)("imag",t,e,n))];case"Cos":return[a.cos(Object(s.d)("x",t,e,n))];case"Cosh":return[a.cosh(Object(s.d)("x",t,e,n))];case"Elu":return[a.elu(Object(s.d)("x",t,e,n))];case"Erf":return[a.erf(Object(s.d)("x",t,e,n))];case"Exp":return[a.exp(Object(s.d)("x",t,e,n))];case"Expm1":return[a.expm1(Object(s.d)("x",t,e,n))];case"Floor":return[a.floor(Object(s.d)("x",t,e,n))];case"Log":return[a.log(Object(s.d)("x",t,e,n))];case"Log1p":return[a.log1p(Object(s.d)("x",t,e,n))];case"Imag":return[a.imag(Object(s.d)("x",t,e,n))];case"Neg":return[a.neg(Object(s.d)("x",t,e,n))];case"Reciprocal":return[a.reciprocal(Object(s.d)("x",t,e,n))];case"Real":return[a.real(Object(s.d)("x",t,e,n))];case"Relu":return[a.relu(Object(s.d)("x",t,e,n))];case"Round":return[a.round(Object(s.d)("x",t,e,n))];case"Selu":return[a.selu(Object(s.d)("x",t,e,n))];case"Sigmoid":return[a.sigmoid(Object(s.d)("x",t,e,n))];case"Sin":return[a.sin(Object(s.d)("x",t,e,n))];case"Sign":return[a.sign(Object(s.d)("x",t,e,n))];case"Sinh":return[a.sinh(Object(s.d)("x",t,e,n))];case"Softplus":return[a.softplus(Object(s.d)("x",t,e,n))];case"Sqrt":return[a.sqrt(Object(s.d)("x",t,e,n))];case"Square":return[a.square(Object(s.d)("x",t,e,n))];case"Tanh":return[a.tanh(Object(s.d)("x",t,e,n))];case"Tan":return[a.tan(Object(s.d)("x",t,e,n))];case"ClipByValue":return[a.clipByValue(Object(s.d)("x",t,e,n),Object(s.d)("clipValueMin",t,e,n),Object(s.d)("clipValueMax",t,e,n))];case"Relu6":return[a.relu6(Object(s.d)("x",t,e,n))];case"Rsqrt":return[a.rsqrt(Object(s.e)(t.inputNames[0],e,n))];case"Prod":return[a.prod(Object(s.d)("x",t,e,n),Object(s.d)("axes",t,e,n))];case"LeakyRelu":return[a.leakyRelu(Object(s.d)("x",t,e,n),Object(s.d)("alpha",t,e,n))];case"Prelu":return[a.prelu(Object(s.d)("x",t,e,n),Object(s.d)("alpha",t,e,n))];case"IsNan":return[a.isNaN(Object(s.e)(t.inputNames[0],e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}};function p(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof t&&"number"!==typeof e){a.util.assert(t.length===e.length,()=>n+" Shapes ".concat(t," and ").concat(e," must match"));for(let r=0;r<t.length;r++){const o=t[r],s=e[r];a.util.assert(o<0||s<0||o===s,()=>n+" Shapes ".concat(t," and ").concat(e," must match"))}}}function h(t){return"number"!==typeof t&&!t.some(t=>t<0)}function f(t,e,n){let r=m(t,n);const a=!h(r);if(a&&0===e.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(r));if(a&&e.forEach(t=>{r=m(t.shape,r)}),!h(r))throw new Error("Non-fully-defined elementShape: ".concat(r));return r}function m(t,e){if("number"===typeof t)return e;if("number"===typeof e)return t;if(t.length!==e.length)throw new Error("Incompatible ranks during merge: ".concat(t," vs. ").concat(e));const n=[];for(let r=0;r<t.length;++r){const a=t[r],o=e[r];if(a>=0&&o>=0&&a!==o)throw new Error("Incompatible shape during merge: ".concat(t," vs. ").concat(e));n[r]=a>=0?a:o}return n}class b{constructor(t,e,n,r,o,s,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(a.scalar)(0),Object(a.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||t>=this.size())throw new Error("Tried to read from index ".concat(t,", but array size is: ").concat(this.size()));const e=this.tensors[t];if(e.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(t," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error("Tried to write to index ".concat(t,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,",\n          because the value dtype is ").concat(e.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),p(this.elementShape,e.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been written."));n.tensor=e,Object(a.keep)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(t.length," is not the same as tensors size: ").concat(e.length,"."));t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(e));if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Object(a.tensor)([],[0].concat(this.elementShape));const n=this.readMany(t);return p(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(a.stack)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(t));if(0===this.size())return Object(a.tensor)([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return p(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),Object(a.concat)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(t,Object(a.unstack)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));let n=0;const r=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(e.shape));if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(t.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const o=0===n?0:e.size/n,s=[];Object(a.tidy)(()=>{e=Object(a.reshape)(e,[1,n,o]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:r[n-1],0],c=[1,t[n],o];s[n]=Object(a.reshape)(Object(a.slice)(e,i,c),this.elementShape)}return s});const i=[];for(let a=0;a<t.length;a++)i[a]=a;this.writeMany(i,s)}}class g{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(t.dtype));p(e,t.shape,"TensorList shape mismatch: "),Object(a.keep)(t)}),this.idTensor=Object(a.scalar)(0),this.maxNumElements=r,Object(a.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new g([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));p(t,this.elementShape,"TensorList shape mismatch: ");const r=f(this.elementShape,this.tensors,t);return Object(a.tidy)(()=>{const t=this.tensors.map(t=>Object(a.reshape)(t,r));return Object(a.stack)(t,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=f(this.elementShape,this.tensors,t),r=this.tensors.pop();return r.kept=!1,p(r.shape,t,"TensorList shape mismatch: "),Object(a.reshape)(r,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(p(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(a.keep)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(t));if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error("TensorListResize input size ".concat(t," is greater maxNumElement ").concat(this.maxNumElements,"."));const e=new g([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(t<0||t>this.tensors.length)throw new Error("Trying to access element ".concat(t," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[t])throw new Error("element at index ".concat(t," is null."));p(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=f(this.elementShape,this.tensors,e);return Object(a.reshape)(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error("Trying to set element ".concat(t," in a list with max ").concat(this.maxNumElements," elements."));p(this.elementShape,e.shape,"TensorList shape mismatch: "),Object(a.keep)(e),null!=this.tensors[t]&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));p(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=f(this.elementShape,this.tensors,n);return 0===t.length?Object(a.tensor)([],[0].concat(r)):Object(a.tidy)(()=>{const e=t.map(t=>Object(a.reshape)(this.tensors[t],r));return Object(a.stack)(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(t));p(this.elementShape,e,"TensorList shape mismatch: ");const n=f(this.elementShape,this.tensors,e);return 0===this.size()?Object(a.tensor)([],[0].concat(n)):Object(a.tidy)(()=>{const t=this.tensors.map(t=>Object(a.reshape)(t,n));return Object(a.concat)(t,0)})}}const y=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=Object(s.d)("thenBranch",t,e,n),a=Object(s.d)("elseBranch",t,e,n),o=Object(s.d)("cond",t,e,n),i=Object(s.d)("args",t,e,n);return(await o.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(s.d)("body",t,e,n),a=Object(s.d)("cond",t,e,n),o=Object(s.d)("args",t,e,n),i=await n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),c=o.map(t=>t.id);let u=await i[0].data();i.forEach(t=>{t.kept||-1!==c.indexOf(t.id)||t.dispose()});let l=o;for(;u[0];){const t=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map(t=>t.id);t.forEach(t=>{t.kept||-1!==c.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const o=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await o[0].data(),o.forEach(t=>{t.kept||-1!==c.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return l}case"LoopCond":{const r=Object(s.d)("pred",t,e,n);return[Object(s.a)(r)]}case"Switch":{const r=Object(s.d)("pred",t,e,n);let a=Object(s.d)("data",t,e,n);return a.kept||(a=Object(s.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=t.inputNames.find(t=>void 0!==Object(s.e)(t,e,n));if(r){const t=Object(s.e)(r,e,n);return[Object(s.a)(t)]}return}case"Enter":{const r=Object(s.d)("frameName",t,e,n),a=Object(s.d)("tensor",t,e,n);return n.enterFrame(r),[Object(s.a)(a)]}case"Exit":{const r=Object(s.d)("tensor",t,e,n);return n.exitFrame(),[Object(s.a)(r)]}case"NextIteration":{const r=Object(s.d)("tensor",t,e,n);return n.nextIteration(),[Object(s.a)(r)]}case"TensorArrayV3":{const r=Object(s.d)("size",t,e,n),o=Object(s.d)("dtype",t,e,n),i=Object(s.d)("elementShape",t,e,n),c=Object(s.d)("dynamicSize",t,e,n),u=Object(s.d)("clearAfterRead",t,e,n),l=Object(s.d)("identicalElementShapes",t,e,n),d=Object(s.d)("name",t,e,n),p=new b(d,o,r,i,l,c,u);return n.addTensorArray(p),[p.idTensor,Object(a.scalar)(1)]}case"TensorArrayWriteV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("index",t,e,n),o=Object(s.d)("tensor",t,e,n),i=n.getTensorArray(r.id);return i.write(a,o),[i.idTensor]}case"TensorArrayReadV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("index",t,e,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("indices",t,e,n),o=Object(s.d)("dtype",t,e,n);return[n.getTensorArray(r.id).gather(a,o)]}case"TensorArrayScatterV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("indices",t,e,n),o=Object(s.d)("tensor",t,e,n),i=n.getTensorArray(r.id);return i.scatter(a,o),[i.idTensor]}case"TensorArrayConcatV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id),o=Object(s.d)("dtype",t,e,n);return[a.concat(o)]}case"TensorArraySplitV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("tensor",t,e,n),o=Object(s.d)("lengths",t,e,n),i=n.getTensorArray(r.id);return i.split(o,a),[i.idTensor]}case"TensorArraySizeV3":{const r=Object(s.d)("tensorArrayId",t,e,n),o=n.getTensorArray(r.id);return[Object(a.scalar)(o.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("index",t,e,n),o=Object(s.d)("tensor",t,e,n),i=n.getTensorList(r.id);return i.setItem(a,o),[i.idTensor]}case"TensorListGetItem":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("index",t,e,n),o=Object(s.d)("elementShape",t,e,n),i=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(a,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(s.d)("indices",t,e,n),o=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const o=Math.max(...e);if(null!=r&&-1!==r&&o>=r)throw new Error("Max index must be < array size (".concat(o,"  vs. ").concat(r,")"));const s=new g([],n,t.dtype,r),i=Object(a.unstack)(t,0);return e.forEach((t,e)=>{s.setItem(t,i[e])}),s}(Object(s.d)("tensor",t,e,n),r,Object(s.d)("elementShape",t,e,n),Object(s.d)("numElements",t,e,n));return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(s.d)("elementShape",t,e,n),a=Object(s.d)("elementDType",t,e,n);let o;o="TensorListReserve"===t.op?"numElements":"maxNumElements";const i=Object(s.d)(o,t,e,n),c=function(t,e,n,r){return new g([],t,e,r)}(r,a,0,"TensorListReserve"===t.op?-1:i);return n.addTensorList(c),[c.idTensor]}case"TensorListGather":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("indices",t,e,n),o=Object(s.d)("elementShape",t,e,n),i=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(r.id).gather(a,i,o)]}case"TensorListStack":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("elementShape",t,e,n),o=Object(s.d)("elementDType",t,e,n),i=Object(s.d)("numElements",t,e,n);return[n.getTensorList(r.id).stack(a,o,i)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(t.shape));if(t.dtype!==n)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(n));p(t.shape.slice(1),e,"TensorList shape mismatch: ");const o=Object(a.unstack)(t);return new g(o,e,r)}(Object(s.d)("tensor",t,e,n),Object(s.d)("elementShape",t,e,n),Object(s.d)("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=Object(s.d)("tensorListId",t,e,n),a=n.getTensorList(r.id),o=Object(s.d)("dtype",t,e,n),i=Object(s.d)("elementShape",t,e,n);return[a.concat(o,i)]}case"TensorListPushBack":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("tensor",t,e,n),o=n.getTensorList(r.id);return o.pushBack(a),[o.idTensor]}case"TensorListPopBack":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("elementShape",t,e,n),o=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(a,o)]}case"TensorListSplit":{const r=Object(s.d)("tensor",t,e,n),o=Object(s.d)("elementShape",t,e,n),i=function(t,e,n){let r=0;const o=e.map(t=>(r+=t,r));if(r!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(r,", and tensor's shape is: ").concat(t.shape));const s=m(t.shape.slice(1),n),i=0===r?0:t.size/r,c=Object(a.tidy)(()=>{const n=[];t=Object(a.reshape)(t,[1,r,i]);for(let r=0;r<e.length;++r){const c=[0,0===r?0:o[r-1],0],u=[1,e[r],i];n[r]=Object(a.reshape)(Object(a.slice)(t,c,u),s)}return t.dispose(),n}),u=new g([],n,t.dtype,e.length);for(let a=0;a<c.length;a++)u.setItem(a,c[a]);return u}(r,Object(s.d)("lengths",t,e,n),o);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const r=Object(s.d)("tensorListId",t,e,n),o=n.getTensorList(r.id);return[Object(a.scalar)(o.size(),"int32")]}case"TensorListResize":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("size",t,e,n),o=n.getTensorList(r.id).resize(a);return n.addTensorList(o),[o.idTensor]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}};function v(t,e,n){const[r,a]=Object(s.d)("fusedOps",t,e,n),o="biasadd"===r,i=!o,c="prelu"===a,u="fusedbatchnorm"===r,l=Object(s.d)("numArgs",t,e,n);if(o){if(c&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&o&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const d=Object(s.d)("strides",t,e,n),p=Object(s.c)(t,e,n),h=Object(s.d)("dataFormat",t,e,n).toUpperCase(),f=Object(s.d)("dilations",t,e,n);let[m,b]=Object(s.d)("args",t,e,n);i&&(b=m,m=void 0);return{stride:d,pad:p,dataFormat:h,dilations:f,biasArg:m,preluArg:b,activationFunc:a,leakyreluAlpha:Object(s.d)("leakyreluAlpha",t,e,n)}}const O=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"Conv1D":{const r=Object(s.d)("stride",t,e,n),o=Object(s.d)("pad",t,e,n),i=Object(s.d)("dataFormat",t,e,n).toUpperCase(),c=Object(s.d)("dilation",t,e,n);return[a.conv1d(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),r,o,i,c)]}case"Conv2D":{const r=Object(s.d)("strides",t,e,n),o=Object(s.c)(t,e,n),i=Object(s.d)("dataFormat",t,e,n).toUpperCase(),c=Object(s.d)("dilations",t,e,n);return[a.conv2d(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[r[1],r[2]],o,i,[c[1],c[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:i,dilations:c,biasArg:u,preluArg:l,activationFunc:d,leakyreluAlpha:p}=v(t,e,n);return[a.fused.conv2d({x:Object(s.d)("x",t,e,n),filter:Object(s.d)("filter",t,e,n),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[c[1],c[2]],bias:u,activation:d,preluActivationWeights:l,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:i,dilations:c,biasArg:u,preluArg:l,activationFunc:d,leakyreluAlpha:p}=v(t,e,n);return[a.fused.depthwiseConv2d({x:Object(s.d)("x",t,e,n),filter:Object(s.d)("filter",t,e,n),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[c[1],c[2]],bias:u,activation:d,preluActivationWeights:l,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(s.d)("outputShape",t,e,n),o=Object(s.d)("strides",t,e,n),i=Object(s.c)(t,e,n);return[a.conv2dTranspose(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),r,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(s.d)("strides",t,e,n),o=Object(s.c)(t,e,n),i=Object(s.d)("dilations",t,e,n),c=Object(s.d)("dataFormat",t,e,n).toUpperCase();return[a.depthwiseConv2d(Object(s.d)("input",t,e,n),Object(s.d)("filter",t,e,n),[r[1],r[2]],o,c,[i[1],i[2]])]}case"Conv3D":{const r=Object(s.d)("strides",t,e,n),o=Object(s.d)("pad",t,e,n),i=Object(s.d)("dataFormat",t,e,n).toUpperCase(),c=Object(s.d)("dilations",t,e,n);return[a.conv3d(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[r[1],r[2],r[3]],o,i,[c[1],c[2],c[3]])]}case"AvgPool":{const r=Object(s.d)("strides",t,e,n),o=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[a.avgPool(Object(s.d)("x",t,e,n),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=Object(s.d)("strides",t,e,n),o=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[a.maxPool(Object(s.d)("x",t,e,n),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=Object(s.d)("strides",t,e,n),o=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n),c=Object(s.d)("includeBatchInIndex",t,e,n),{result:u,indexes:l}=a.maxPoolWithArgmax(Object(s.d)("x",t,e,n),[i[1],i[2]],[r[1],r[2]],o,c);return[u,l]}case"AvgPool3D":{const r=Object(s.d)("strides",t,e,n),o=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[a.avgPool3d(Object(s.d)("x",t,e,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=Object(s.d)("strides",t,e,n),o=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[a.maxPool3d(Object(s.d)("x",t,e,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=Object(s.d)("strides",t,e,n),o=Object(s.d)("pad",t,e,n),i=Object(s.d)("dilations",t,e,n),c=r[1],u=r[2],l=i[1],d=i[2];return[a.dilation2d(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[c,u],o,[l,d],"NHWC")]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},x=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"Fill":{const r=Object(s.d)("shape",t,e,n),o=Object(s.d)("dtype",t,e,n),i=Object(s.d)("value",t,e,n);return[a.fill(r,i,o)]}case"LinSpace":{const r=Object(s.d)("start",t,e,n),o=Object(s.d)("stop",t,e,n),i=Object(s.d)("num",t,e,n);return[a.linspace(r,o,i)]}case"Multinomial":{const r=Object(s.d)("logits",t,e,n),o=Object(s.d)("numSamples",t,e,n),i=Object(s.d)("seed",t,e,n);return[a.multinomial(r,o,i)]}case"OneHot":{const r=Object(s.d)("indices",t,e,n),o=Object(s.d)("depth",t,e,n),i=Object(s.d)("onValue",t,e,n),c=Object(s.d)("offValue",t,e,n),u=Object(s.d)("dtype",t,e,n);return[a.oneHot(r,o,i,c,u)]}case"Ones":return[a.ones(Object(s.d)("shape",t,e,n),Object(s.d)("dtype",t,e,n))];case"OnesLike":return[a.onesLike(Object(s.d)("x",t,e,n))];case"RandomStandardNormal":return[a.randomStandardNormal(Object(s.d)("shape",t,e,n),Object(s.d)("dtype",t,e,n),Object(s.d)("seed",t,e,n))];case"RandomUniform":return[a.randomUniform(Object(s.d)("shape",t,e,n),Object(s.d)("minval",t,e,n),Object(s.d)("maxval",t,e,n),Object(s.d)("dtype",t,e,n))];case"Range":{const r=Object(s.d)("start",t,e,n),o=Object(s.d)("stop",t,e,n),i=Object(s.d)("step",t,e,n);return[a.range(r,o,i,Object(s.d)("dtype",t,e,n))]}case"TruncatedNormal":{const r=Object(s.d)("shape",t,e,n),o=Object(s.d)("mean",t,e,n),i=Object(s.d)("stdDev",t,e,n),c=Object(s.d)("seed",t,e,n);return[a.truncatedNormal(r,o,i,Object(s.d)("dtype",t,e,n),c)]}case"Zeros":return[a.zeros(Object(s.d)("shape",t,e,n),Object(s.d)("dtype",t,e,n))];case"ZerosLike":return[a.zerosLike(Object(s.d)("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}};function w(t,e,n){return{boxes:Object(s.d)("boxes",t,e,n),scores:Object(s.d)("scores",t,e,n),maxOutputSize:Object(s.d)("maxOutputSize",t,e,n),iouThreshold:Object(s.d)("iouThreshold",t,e,n),scoreThreshold:Object(s.d)("scoreThreshold",t,e,n),softNmsSigma:Object(s.d)("softNmsSigma",t,e,n)}}const k=async function(t,e,n,a){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:r;switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=w(t,e,n),l=await o.image.nonMaxSuppressionWithScoreAsync(r,a,s,i,c,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:c,scoreThreshold:u}=w(t,e,n),l=Object(s.d)("padToMaxOutputSize",t,e,n),d=await o.image.nonMaxSuppressionPaddedAsync(r,a,i,c,u,l);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=w(t,e,n);return[await o.image.nonMaxSuppressionAsync(r,a,s,i,c)]}case"Where":{const r=o.cast(Object(s.d)("condition",t,e,n),"bool"),a=[await o.whereAsync(r)];return r.dispose(),a}case"ListDiff":return o.setdiff1dAsync(Object(s.d)("x",t,e,n),Object(s.d)("y",t,e,n));default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},j=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"LowerBound":{const r=Object(s.d)("sortedSequence",t,e,n),o=Object(s.d)("values",t,e,n);return[a.lowerBound(r,o)]}case"TopKV2":{const r=Object(s.d)("x",t,e,n),o=Object(s.d)("k",t,e,n),i=Object(s.d)("sorted",t,e,n),c=a.topk(r,o,i);return[c.values,c.indices]}case"UpperBound":{const r=Object(s.d)("sortedSequence",t,e,n),o=Object(s.d)("values",t,e,n);return[a.upperBound(r,o)]}case"Unique":{const r=Object(s.d)("x",t,e,n),o=a.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=Object(s.d)("x",t,e,n),o=Object(s.d)("axis",t,e,n),i=a.unique(r,o);return[i.values,i.indices]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},N=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=Object(s.d)("default",t,e,n);return[Object(s.e)(t.name,e,n)||r];case"Placeholder":return[Object(s.e)(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(s.d)("x",t,e,n);return[Object(s.a)(r)]}case"IdentityN":return Object(s.d)("x",t,e,n).map(t=>Object(s.a)(t));case"Snapshot":const o=Object(s.d)("x",t,e,n);return[Object(s.a)(o)];case"Shape":return[a.tensor1d(Object(s.d)("x",t,e,n).shape,"int32")];case"ShapeN":return Object(s.d)("x",t,e,n).map(t=>a.tensor1d(t.shape));case"Size":return[a.scalar(Object(s.d)("x",t,e,n).size,"int32")];case"Rank":return[a.scalar(Object(s.d)("x",t,e,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const i=Object(s.d)("x",t,e,n),c=Object(s.d)("data",t,e,n),u=Object(s.d)("message",t,e,n),l=Object(s.d)("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let t=0;t<c.length;t++)console.log(Array.prototype.slice.call(c[t].dataSync()).slice(0,l));return[i];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}};var S=n(39);class I{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Object(a.scalar)(0),this.tensorMap=new Map,Object(a.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return S.a(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),Object(a.tidy)(()=>{const t=Object(a.unstack)(e),r=n.length,o=t.length;a.util.assert(r===o,()=>"The number of elements doesn't match, keys has "+"".concat(r," elements, the values has ").concat(o," ")+"elements.");for(let e=0;e<r;e++){const r=n[e],o=t[e];Object(a.keep)(o),this.tensorMap.set(r,o)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Object(a.tidy)(()=>{const t=[];for(let r=0;r<n.length;r++){const a=n[r],o=this.findWithDefault(a,e);t.push(o)}return Object(a.stack)(t)})}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(t.dtype));if(e.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(e.dtype))}}const T=async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const a=Object(s.d)("keyDType",t,e,n),o=Object(s.d)("valueDType",t,e,n),i=new I(a,o);return r.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(s.d)("tableHandle",t,e,n,r),o=Object(s.d)("keys",t,e,n),i=Object(s.d)("values",t,e,n),c=r.getHashTableById(a.id);return[await c.import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(s.d)("tableHandle",t,e,n,r),o=Object(s.d)("keys",t,e,n),i=Object(s.d)("defaultValue",t,e,n),c=r.getHashTableById(a.id);return[await c.find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Object(s.d)("tableHandle",t,e,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},E=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"ResizeBilinear":{const r=Object(s.d)("images",t,e,n),o=Object(s.d)("size",t,e,n),i=Object(s.d)("alignCorners",t,e,n),c=Object(s.d)("halfPixelCenters",t,e,n);return[a.image.resizeBilinear(r,[o[0],o[1]],i,c)]}case"ResizeNearestNeighbor":{const r=Object(s.d)("images",t,e,n),o=Object(s.d)("size",t,e,n),i=Object(s.d)("alignCorners",t,e,n),c=Object(s.d)("halfPixelCenters",t,e,n);return[a.image.resizeNearestNeighbor(r,[o[0],o[1]],i,c)]}case"CropAndResize":{const r=Object(s.d)("image",t,e,n),o=Object(s.d)("boxes",t,e,n),i=Object(s.d)("boxInd",t,e,n),c=Object(s.d)("cropSize",t,e,n),u=Object(s.d)("method",t,e,n),l=Object(s.d)("extrapolationValue",t,e,n);return[a.image.cropAndResize(r,o,i,c,u,l)]}case"ImageProjectiveTransformV3":{const r=Object(s.d)("images",t,e,n),o=Object(s.d)("transforms",t,e,n),i=Object(s.d)("outputShape",t,e,n),c=Object(s.d)("fillValue",t,e,n),u=Object(s.d)("interpolation",t,e,n),l=Object(s.d)("fillMode",t,e,n);return[a.image.transform(r,o,u.toLowerCase(),l.toLowerCase(),c,i)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},C=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"Equal":return[a.equal(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"NotEqual":return[a.notEqual(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Greater":return[a.greater(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"GreaterEqual":return[a.greaterEqual(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Less":return[a.less(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LessEqual":return[a.lessEqual(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LogicalAnd":return[a.logicalAnd(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LogicalNot":return[a.logicalNot(Object(s.d)("a",t,e,n))];case"LogicalOr":return[a.logicalOr(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Select":case"SelectV2":return[a.where(Object(s.d)("condition",t,e,n),Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},A=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n),Object(s.d)("transposeA",t,e,n),Object(s.d)("transposeB",t,e,n))];case"Einsum":return[a.einsum(Object(s.d)("equation",t,e,n),...Object(s.d)("tensors",t,e,n))];case"Transpose":return[a.transpose(Object(s.d)("x",t,e,n),Object(s.d)("perm",t,e,n))];case"_FusedMatMul":const[r,o]=Object(s.d)("fusedOps",t,e,n),i="biasadd"===r,c="prelu"===o,u=Object(s.d)("numArgs",t,e,n),l=Object(s.d)("leakyreluAlpha",t,e,n);if(i){if(c&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[d,p]=Object(s.d)("args",t,e,n);return[a.fused.matMul({a:Object(s.d)("a",t,e,n),b:Object(s.d)("b",t,e,n),transposeA:Object(s.d)("transposeA",t,e,n),transposeB:Object(s.d)("transposeB",t,e,n),bias:d,activation:o,preluActivationWeights:p,leakyreluAlpha:l})];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},_=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"EuclideanNorm":return[a.euclideanNorm(Object(s.d)("x",t,e,n),Object(s.d)("axis",t,e,n),Object(s.d)("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(Object(s.d)("x",t,e,n),Object(s.d)("mean",t,e,n),Object(s.d)("variance",t,e,n),Object(s.d)("offset",t,e,n),Object(s.d)("scale",t,e,n),Object(s.d)("epsilon",t,e,n))];case"LRN":return[a.localResponseNormalization(Object(s.d)("x",t,e,n),Object(s.d)("radius",t,e,n),Object(s.d)("bias",t,e,n),Object(s.d)("alpha",t,e,n),Object(s.d)("beta",t,e,n))];case"Softmax":return[a.softmax(Object(s.d)("x",t,e,n))];case"LogSoftmax":return[a.logSoftmax(Object(s.d)("x",t,e,n))];case"SparseToDense":return[a.sparseToDense(Object(s.d)("sparseIndices",t,e,n),Object(s.d)("outputShape",t,e,n),Object(s.d)("sparseValues",t,e,n),Object(s.d)("defaultValue",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},R=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"Max":{const r=Object(s.d)("axis",t,e,n),o=Object(s.d)("keepDims",t,e,n);return[a.max(Object(s.d)("x",t,e,n),r,o)]}case"Mean":{const r=Object(s.d)("axis",t,e,n),o=Object(s.d)("keepDims",t,e,n);return[a.mean(Object(s.d)("x",t,e,n),r,o)]}case"Min":{const r=Object(s.d)("axis",t,e,n),o=Object(s.d)("keepDims",t,e,n);return[a.min(Object(s.d)("x",t,e,n),r,o)]}case"Sum":{const r=Object(s.d)("axis",t,e,n),o=Object(s.d)("keepDims",t,e,n);return[a.sum(Object(s.d)("x",t,e,n),r,o)]}case"All":{const r=Object(s.d)("axis",t,e,n),o=Object(s.d)("keepDims",t,e,n);return[a.all(Object(s.d)("x",t,e,n),r,o)]}case"Any":{const r=Object(s.d)("axis",t,e,n),o=Object(s.d)("keepDims",t,e,n);return[a.any(Object(s.d)("x",t,e,n),r,o)]}case"ArgMax":{const r=Object(s.d)("axis",t,e,n);return[a.argMax(Object(s.d)("x",t,e,n),r)]}case"ArgMin":{const r=Object(s.d)("axis",t,e,n);return[a.argMin(Object(s.d)("x",t,e,n),r)]}case"Prod":{const r=Object(s.d)("axis",t,e,n),o=Object(s.d)("keepDims",t,e,n);return[a.prod(Object(s.d)("x",t,e,n),r,o)]}case"Cumprod":{const r=Object(s.d)("axis",t,e,n),o=Object(s.d)("exclusive",t,e,n),i=Object(s.d)("reverse",t,e,n);return[a.cumprod(Object(s.d)("x",t,e,n),r,o,i)]}case"Cumsum":{const r=Object(s.d)("axis",t,e,n),o=Object(s.d)("exclusive",t,e,n),i=Object(s.d)("reverse",t,e,n);return[a.cumsum(Object(s.d)("x",t,e,n),r,o,i)]}case"Bincount":const r=Object(s.d)("x",t,e,n),o=Object(s.d)("weights",t,e,n),i=Object(s.d)("size",t,e,n);return[a.bincount(r,o,i)];case"DenseBincount":{const r=Object(s.d)("x",t,e,n),o=Object(s.d)("weights",t,e,n),i=Object(s.d)("size",t,e,n),c=Object(s.d)("binaryOutput",t,e,n);return[a.denseBincount(r,o,i,c)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},D=function(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"ConcatV2":case"Concat":{const r=Object(s.d)("n",t,e,n),a=Object(s.d)("axis",t,e,n);let i=Object(s.d)("tensors",t,e,n);return i=i.slice(0,r),[o.concat(i,a)]}case"Gather":{const r=Object(s.d)("x",t,e,n),a=Object(s.d)("indices",t,e,n);return[o.gather(r,o.cast(a,"int32"),0)]}case"GatherV2":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("batchDims",t,e,n),i=Object(s.d)("x",t,e,n),c=Object(s.d)("indices",t,e,n);return[o.gather(i,o.cast(c,"int32"),r,a)]}case"Reverse":{const r=Object(s.d)("dims",t,e,n),a=[];for(let t=0;t<r.length;t++)r[t]&&a.push(t);const i=Object(s.d)("x",t,e,n);return[o.reverse(i,a)]}case"ReverseV2":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("x",t,e,n);return[o.reverse(a,r)]}case"Slice":{const r=Object(s.d)("begin",t,e,n),a=Object(s.d)("size",t,e,n);return[o.slice(Object(s.d)("x",t,e,n),r,a)]}case"StridedSlice":{const r=Object(s.d)("begin",t,e,n),a=Object(s.d)("end",t,e,n),i=Object(s.d)("strides",t,e,n),c=Object(s.d)("beginMask",t,e,n),u=Object(s.d)("endMask",t,e,n),l=Object(s.d)("ellipsisMask",t,e,n),d=Object(s.d)("newAxisMask",t,e,n),p=Object(s.d)("shrinkAxisMask",t,e,n),h=Object(s.d)("x",t,e,n);return[o.stridedSlice(h,r,a,i,c,u,l,d,p)]}case"Pack":return Object(a.tidy)(()=>{const r=Object(s.d)("axis",t,e,n),i=Object(s.d)("tensors",t,e,n),c=i[0].shape,u=o.squeeze(i[0]).shape,l=i.map(t=>{const e=a.util.arraysEqual(t.shape,c);if(!e&&!a.util.arraysEqual(o.squeeze(t).shape,u))throw new Error("the input tensors shape does not match");return e?t:o.reshape(t,c)});return[o.stack(l,r)]});case"Unpack":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("tensor",t,e,n);return o.unstack(a,r)}case"Tile":{const r=Object(s.d)("reps",t,e,n);return[o.tile(Object(s.d)("x",t,e,n),r)]}case"Split":case"SplitV":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("numOrSizeSplits",t,e,n),i=Object(s.d)("x",t,e,n);return o.split(i,a,r)}case"ScatterNd":{const r=Object(s.d)("indices",t,e,n),a=Object(s.d)("values",t,e,n),i=Object(s.d)("shape",t,e,n);return[o.scatterND(r,a,i)]}case"GatherNd":{const r=Object(s.d)("x",t,e,n),a=Object(s.d)("indices",t,e,n);return[o.gatherND(r,a)]}case"SparseToDense":{const r=Object(s.d)("sparseIndices",t,e,n),a=Object(s.d)("outputShape",t,e,n),i=Object(s.d)("sparseValues",t,e,n),c=Object(s.d)("defaultValue",t,e,n);return[o.sparseToDense(r,i,a,i.dtype===c.dtype?c:o.cast(c,i.dtype))]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},F=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:i,reverseIndexMap:c}=a.sparse.sparseFillEmptyRows(Object(s.d)("indices",t,e,n),Object(s.d)("values",t,e,n),Object(s.d)("denseShape",t,e,n),Object(s.d)("defaultValue",t,e,n));return[r,o,i,c]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=a.sparse.sparseReshape(Object(s.d)("inputIndices",t,e,n),Object(s.d)("inputShape",t,e,n),Object(s.d)("newShape",t,e,n));return[r,o]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(Object(s.d)("data",t,e,n),Object(s.d)("indices",t,e,n),Object(s.d)("segmentIds",t,e,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(Object(s.d)("data",t,e,n),Object(s.d)("indices",t,e,n),Object(s.d)("segmentIds",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},M=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"FFT":return[a.fft(Object(s.d)("x",t,e,n))];case"IFFT":return[a.ifft(Object(s.d)("x",t,e,n))];case"RFFT":return[a.rfft(Object(s.d)("x",t,e,n))];case"IRFFT":return[a.irfft(Object(s.d)("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},L=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=a.string.stringNGrams(Object(s.d)("data",t,e,n),Object(s.d)("dataSplits",t,e,n),Object(s.d)("separator",t,e,n),Object(s.d)("nGramWidths",t,e,n),Object(s.d)("leftPad",t,e,n),Object(s.d)("rightPad",t,e,n),Object(s.d)("padWidth",t,e,n),Object(s.d)("preserveShortSequences",t,e,n));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:i}=a.string.stringSplit(Object(s.d)("input",t,e,n),Object(s.d)("delimiter",t,e,n),Object(s.d)("skipEmpty",t,e,n));return[r,o,i]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(Object(s.d)("input",t,e,n),Object(s.d)("numBuckets",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}},z=function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r;switch(t.op){case"Cast":return[a.cast(Object(s.d)("x",t,e,n),Object(s.d)("dtype",t,e,n))];case"ExpandDims":{const r=Object(s.d)("axis",t,e,n);return[a.expandDims(Object(s.d)("x",t,e,n),r)]}case"Squeeze":{const r=Object(s.d)("axis",t,e,n);return[a.squeeze(Object(s.d)("x",t,e,n),r)]}case"Reshape":return[a.reshape(Object(s.d)("x",t,e,n),Object(s.d)("shape",t,e,n))];case"MirrorPad":return[a.mirrorPad(Object(s.d)("x",t,e,n),Object(s.d)("padding",t,e,n),Object(s.d)("mode",t,e,n))];case"PadV2":case"Pad":return[a.pad(Object(s.d)("x",t,e,n),Object(s.d)("padding",t,e,n),Object(s.d)("constantValue",t,e,n))];case"SpaceToBatchND":{const r=Object(s.d)("blockShape",t,e,n),o=Object(s.d)("paddings",t,e,n);return[a.spaceToBatchND(Object(s.d)("x",t,e,n),r,o)]}case"BatchToSpaceND":{const r=Object(s.d)("blockShape",t,e,n),o=Object(s.d)("crops",t,e,n);return[a.batchToSpaceND(Object(s.d)("x",t,e,n),r,o)]}case"DepthToSpace":{const r=Object(s.d)("blockSize",t,e,n),o=Object(s.d)("dataFormat",t,e,n).toUpperCase();return[a.depthToSpace(Object(s.d)("x",t,e,n),r,o)]}case"BroadcastTo":return[a.broadcastTo(Object(s.d)("x",t,e,n),Object(s.d)("shape",t,e,n))];case"BroadcastArgs":return[a.broadcastArgs(Object(s.d)("s0",t,e,n),Object(s.d)("s1",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}};function P(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:a.tidy;const s=((t,e,n)=>{switch(t.category){case"arithmetic":return o(()=>l(t,e,n));case"basic_math":return o(()=>d(t,e,n));case"control":return y(t,e,n);case"convolution":return o(()=>O(t,e,n));case"creation":return o(()=>x(t,e,n));case"dynamic":return k(t,e,n);case"evaluation":return o(()=>j(t,e,n));case"image":return o(()=>E(t,e,n));case"graph":return o(()=>N(t,e,n));case"logical":return o(()=>C(t,e,n));case"matrices":return o(()=>A(t,e,n));case"normalization":return o(()=>_(t,e,n));case"reduction":return o(()=>R(t,e,n));case"slice_join":return o(()=>D(t,e,n));case"sparse":return o(()=>F(t,e,n));case"spectral":return o(()=>M(t,e,n));case"string":return o(()=>L(t,e,n));case"transformation":return o(()=>z(t,e,n));case"hash_table":return T(t,e,n,r);case"custom":const a=Object(c.a)(t.op);if(a&&a.customExecutor)return a.customExecutor(new i(t,e,n));throw TypeError("Custom op ".concat(t.op," is not registered."));default:throw TypeError("Unknown op '".concat(t.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(t,e,n);return a.util.isPromise(s)?s.then(t=>[].concat(t)):[].concat(s)}class B{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":"".concat(t.frameName,"-").concat(t.iterationId)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function V(t,e,n,r){const a=new Set,o=[];let i=null,c=null;const u=new Set,l=Object.keys(t).map(t=>Object(s.g)(t)[0]);let d=[];null!=r&&(d=r.map(t=>Object(s.g)(t.name)[0]));const p=[...e];for(;p.length>0;){const t=p.pop();(H(t)||q(t)||K(t))&&null==i&&(i=t,c=i.children.map(t=>t.name).filter(t=>a.has(t))),a.add(t.name),null==n[t.name]&&(-1===l.indexOf(t.name)&&-1===d.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{u.has(t.name)||(u.add(t.name),p.push(t))}):o.push(t.name)))}return{inputs:t,outputs:e,usedNodes:a,missingInputs:o,dynamicNode:i,syncInputs:c}}const W=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],U=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],G=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function H(t){return W.indexOf(t.op)>=0}function q(t){return U.indexOf(t.op)>=0}function K(t){return G.indexOf(t.op)>=0}class X{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new X(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?"".concat(e,":").concat(t.defaultOutput):e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=V(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:o}=n;if(null!=a)throw new Error("This execution contains the node '".concat(a.name,"', which has ")+"the dynamic op '".concat(a.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(o,"]"));if(r.length>0){const n=e.map(t=>t.name),a=Object.keys(t);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(a,"]. Missing the following inputs: [").concat(r,"]"))}return function(t,e,n){const{usedNodes:r,inputs:a}=n,o=[],i=Object.keys(a).map(t=>Object(s.g)(t)[0]).map(e=>t.nodes[e]),c=t.initNodes;i.forEach(t=>{r.has(t.name)&&o.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&o.push(t)}),null!=c&&c.forEach(t=>{r.has(t.name)&&o.push(t)});const u=new Set,l=[];for(;o.length>0;){const t=o.pop();u.add(t.name),e[t.name]||l.push(t),t.children.forEach(t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>u.has(t.name))&&o.push(t)})}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map(t=>this.graph.nodes[Object(s.g)(t)[0]]),o=e.map(t=>Object(s.g)(t)[0]);let i=o.map(t=>this.graph.nodes[t]);this.resetIntermediateTensors(),0===i.length&&(i=this._outputs);const c=this.getCompilationKey(r,i);let u=this.compiledMap.get(c);null==u&&(u=this.compile(t,i),this.compiledMap.set(c,u));const l={},d={};return Object(a.tidy)(()=>{const n=new B(this.weightMap,l,d,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,a]=Object(s.g)(e),o=[];o[a]=t[e],r[n]=o});const i=this.getFrozenTensorIds(r),c={};for(let t=0;t<u.length;t++){const e=u[t];if(!r[e.name]){const t=P(e,r,n,this._resourceManager);if(a.util.isPromise(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,i,o,c)}}return null==this.parent&&n.dispose(i),e.map(t=>Object(s.e)(t,r,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,a,o,i){"control"!==e.category&&-1===o.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const o=Object(s.f)(t.name,n,r);null!=o&&o.forEach(t=>{if(t&&!t.kept&&!a.has(t.id)){const n=i[t.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=Object(s.b)(e.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=t}else t.dispose();delete i[t.id]}else null!=n&&i[t.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(t=>{this.tensorsMap[t].forEach(t=>{!t||t.kept||t.isDisposed||this.keepIds.has(t.id)||t.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const t in this.intermediateTensors)this.intermediateTensors[t].forEach(t=>t.dispose()),delete this.intermediateTensors[t]}async _executeAsync(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=Object(a.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){console.warn(d.message)}this.resetIntermediateTensors();const i=new B(this.weightMap,r,o,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,i,e,n);const c=e.map(t=>Object(s.e)(t,this.tensorsMap,i)),u=c.map(t=>t.id),l=Object.keys(t).map(e=>t[e].id);return this.keepIds=new Set([...u,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&i.dispose(this.keepIds),c}async executeFunctionAsync(t,e,n){const r=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const a=Object.keys(t),o=a.map(t=>this.graph.nodes[Object(s.g)(t)[0]]),i=n.map(t=>Object(s.g)(t)[0]);let c=i.map(t=>this.graph.nodes[t]);0===c.length&&(c=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:d,syncInputs:p}=V(t,c,this.weightMap,this._initNodes),h=[...o,...this.graph.weights,...this._initNodes||[]].map(t=>({node:t,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=Object(s.g)(e),a=[];a[r]=t[e],f[n]=a});const m={},b=this.getFrozenTensorIds(f),g={};for(;h.length>0;){const t=this.processStack(o,h,e,f,g,b,i,m,u);await Promise.all(t)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=c.filter(t=>!H(t)&&!Object(s.e)(t.name,f,e)).map(t=>t.name);if(y.length>0){let t="";throw null!=d&&(t="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(p,"]")),new Error("Cannot compute the outputs [".concat(y,"] from the provided ")+"inputs [".concat(a,"]. Consider providing the following inputs: ")+"[".concat(l,"]. ").concat(t))}return f}processStack(t,e,n,r,o,i,c,u,l){const d=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let p="";if("Enter"===t.node.op&&Object(s.d)("isConstant",t.node,r,n)&&([p]=Object(s.b)(t.node.name,n)),null==r[t.node.name]){const h=P(t.node,r,n,this._resourceManager);p||([p]=Object(s.b)(t.node.name,n));const f=n.currentContext;a.util.isPromise(h)?d.push(h.then(a=>(r[p]=a,n.currentContext=f,this.checkTensorForDisposal(p,t.node,r,n,i,c,u),this.processChildNodes(t.node,e,n,r,o,l),a))):(r[p]=h,this.checkTensorForDisposal(p,t.node,r,n,i,c,u),this.processChildNodes(t.node,e,n,r,o,l))}else this.processChildNodes(t.node,e,n,r,o,l)}return d}processChildNodes(t,e,n,r,a,o){t.children.forEach(t=>{const[i]=Object(s.b)(t.name,n);!a[i]&&o.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!Object(s.e)(t,r,n))&&(a[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!Object(s.e)(t,r,n))&&(a[i]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[r]=Object(s.g)(e),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const t=o.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e);a.util.assert(e,()=>"The shape of dict['".concat(o.name,"'] provided in ")+"model.execute(dict) must be [".concat(t,"], but was ")+"[".concat(n.shape,"]"))}o.attrParams.dtype&&o.attrParams.dtype.value&&a.util.assert(n.dtype===o.attrParams.dtype.value,()=>"The dtype of dict['".concat(o.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(o.attrParams.dtype.value,", but was ").concat(n.dtype))})}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=Object(s.g)(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(e,"] that are not part of graph"))}mapOutputs(t){return t.map(t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t},{})}checkOutputs(t){t.forEach(t=>{const[e]=Object(s.g)(t);if(!this.graph.nodes[e])throw new Error("The output '".concat(t,"' is not found in the graph"))})}}class Y{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class Q{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a.io;this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=n,null==e&&(this.loadOptions={}),this.resourceManager=new Y}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error("Found more than one (".concat(e.length,") load handlers for ")+"URL '".concat([t],"'"));this.handler=e[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return a.util.isPromise(t)?t.then(t=>this.loadSync(t)):this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const t=this.artifacts.userDefinedMetadata;null!=t.signature&&(n=t.signature),null!=t.structuredOutputKeys&&(this.structuredOutputKeys=t.structuredOutputKeys)}this.signature=n,this.version="".concat(e.versions.producer,".").concat(e.versions.minConsumer);const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new X(o.a.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=o.a.Instance.transformGraph(t.modelInitializer);this.initializer=new X(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"===typeof t){const e=this.io.getSaveHandlers(t);if(0===e.length)throw new Error("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new Error("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){const n=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){const t=n instanceof a.Tensor?[n]:n,e={};return t.forEach((t,n)=>e[this.structuredOutputKeys[n]]=t),e}return n}normalizeInputs(t){if(!(t instanceof a.Tensor)&&!Array.isArray(t))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,"+"the graph model has ".concat(this.inputNodes.length," placeholders, ")+"while there are ".concat(t.length," input tensors."));return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function J(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a.io;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&"string"===typeof t&&(t=Z(t));const r=new Q(t,e,n);return await r.load(),r}function Z(t){return t.endsWith("/")||(t+="/"),"".concat(t).concat("model.json").concat("?tfjs-format=file")}var $=function(t,e){return($=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function tt(t,e){function n(){this.constructor=t}$(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var et=function(){return(et=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var a in e=arguments[n])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)};function nt(t,e,n,r){return new(n||(n=Promise))((function(a,o){function s(t){try{c(r.next(t))}catch(t){o(t)}}function i(t){try{c(r.throw(t))}catch(t){o(t)}}function c(t){t.done?a(t.value):new n((function(e){e(t.value)})).then(s,i)}c((r=r.apply(t,e||[])).next())}))}function rt(t,e){var n,r,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}var at=function(){function t(t,e){this.model=t,this.outputStride=e;var n=this.model.inputs[0].shape;a.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return t.prototype.predict=function(t){var e=this;return Object(a.tidy)((function(){var n=e.preprocessInput(Object(a.cast)(t,"float32")),r=Object(a.expandDims)(n,0),o=e.model.predict(r).map((function(t){return Object(a.squeeze)(t,[0])})),s=e.nameOutputResults(o);return{heatmapScores:Object(a.sigmoid)(s.heatmap),offsets:s.offsets,displacementFwd:s.displacementFwd,displacementBwd:s.displacementBwd}}))},t.prototype.dispose=function(){this.model.dispose()},t}(),ot=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return tt(e,t),e.prototype.preprocessInput=function(t){return Object(a.tidy)((function(){return Object(a.sub)(Object(a.div)(t,127.5),1)}))},e.prototype.nameOutputResults=function(t){return{offsets:t[0],heatmap:t[1],displacementFwd:t[2],displacementBwd:t[3]}},e}(at);function st(t){return Math.floor(t/2)}var it=function(){function t(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return t.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},t.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},t.prototype.empty=function(){return-1===this.numberOfElements},t.prototype.size=function(){return this.numberOfElements+1},t.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},t.prototype.max=function(){return this.priorityQueue[0]},t.prototype.swim=function(t){for(;t>0&&this.less(st(t),t);)this.exchange(t,st(t)),t=st(t)},t.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},t.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},t.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},t.prototype.exchange=function(t,e){var n=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=n},t}();function ct(t,e,n,r,a,o){for(var s=o.shape,i=s[0],c=s[1],u=!0,l=Math.max(n-a,0),d=Math.min(n+a+1,i),p=l;p<d;++p){for(var h=Math.max(r-a,0),f=Math.min(r+a+1,c),m=h;m<f;++m)if(o.get(p,m,t)>e){u=!1;break}if(!u)break}return u}var ut=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],lt=ut.length,dt=ut.reduce((function(t,e,n){return t[e]=n,t}),{}),pt=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(t){var e=t[0],n=t[1];return[dt[e],dt[n]]}));function ht(t,e,n,r){return{y:r.get(t,e,n),x:r.get(t,e,n+lt)}}function ft(t,e,n){var r=ht(t.heatmapY,t.heatmapX,t.id,n),a=r.y,o=r.x;return{x:t.heatmapX*e+o,y:t.heatmapY*e+a}}function mt(t,e,n){return t<e?e:t>n?n:t}function bt(t,e){return{x:t.x+e.x,y:t.y+e.y}}var gt=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map((function(t){var e=t[0],n=t[1];return[dt[e],dt[n]]})),yt=gt.map((function(t){return t[1]})),vt=gt.map((function(t){return t[0]}));function Ot(t,e,n,r){return{y:mt(Math.round(t.y/e),0,n-1),x:mt(Math.round(t.x/e),0,r-1)}}function xt(t,e,n,r,a,o,s,i){void 0===i&&(i=2);for(var c=r.shape,u=c[0],l=c[1],d=function(t,e,n){var r=n.shape[2]/2;return{y:n.get(e.y,e.x,t),x:n.get(e.y,e.x,r+t)}}(t,Ot(e.position,o,u,l),s),p=bt(e.position,d),h=0;h<i;h++){var f=Ot(p,o,u,l),m=ht(f.y,f.x,n,a);p=bt({x:f.x*o,y:f.y*o},{x:m.x,y:m.y})}var b=Ot(p,o,u,l),g=r.get(b.y,b.x,n);return{position:p,part:ut[n],score:g}}function wt(t,e,n,r,a,o){var s=e.shape[2],i=yt.length,c=new Array(s),u=t.part,l=t.score,d=ft(u,r,n);c[u.id]={score:l,part:ut[u.id],position:d};for(var p=i-1;p>=0;--p){var h=yt[p],f=vt[p];c[h]&&!c[f]&&(c[f]=xt(p,c[h],f,e,n,r,o))}for(p=0;p<i;++p)h=vt[p],f=yt[p],c[h]&&!c[f]&&(c[f]=xt(p,c[h],f,e,n,r,a));return c}function kt(t,e,n,r){var a=n.x,o=n.y;return t.some((function(t){var n=t.keypoints[r].position;return function(t,e,n,r){var a=n-t,o=r-e;return a*a+o*o}(o,a,n.y,n.x)<=e}))}function jt(t,e,n){return n.reduce((function(n,r,a){var o=r.position,s=r.score;return kt(t,e,o,a)||(n+=s),n}),0)/n.length}function Nt(t,e,n,r,a,o,s,i){void 0===s&&(s=.5),void 0===i&&(i=20);for(var c=[],u=function(t,e,n){for(var r=n.shape,a=r[0],o=r[1],s=r[2],i=new it(a*o*s,(function(t){return t.score})),c=0;c<a;++c)for(var u=0;u<o;++u)for(var l=0;l<s;++l){var d=n.get(c,u,l);d<t||ct(l,d,c,u,e,n)&&i.enqueue({score:d,part:{heatmapY:c,heatmapX:u,id:l}})}return i}(s,1,t),l=i*i;c.length<o&&!u.empty();){var d=u.dequeue();if(!kt(c,l,ft(d.part,a,e),d.part.id)){var p=wt(d,t,e,a,n,r),h=jt(c,l,p);c.push({keypoints:p,score:h})}}return c}function St(t){var e=t.shape,n=e[0],r=e[1],o=e[2];return Object(a.tidy)((function(){var e=Object(a.reshape)(t,[n*r,o]),s=Object(a.argMax)(e,0),i=Object(a.expandDims)(Object(a.div)(s,Object(a.scalar)(r,"int32")),1),c=Object(a.expandDims)(function(t,e){return Object(a.tidy)((function(){var n=Object(a.div)(t,Object(a.scalar)(e,"int32"));return Object(a.sub)(t,Object(a.mul)(n,Object(a.scalar)(e,"int32")))}))}(s,r),1);return Object(a.concat)([i,c],1)}))}function It(t,e,n,r){return{y:r.get(t,e,n),x:r.get(t,e,n+lt)}}function Tt(t,e,n){return Object(a.tidy)((function(){var r=function(t,e){for(var n=[],r=0;r<lt;r++){var o=It(t.get(r,0).valueOf(),t.get(r,1).valueOf(),r,e),s=o.x,i=o.y;n.push(i),n.push(s)}return Object(a.tensor2d)(n,[lt,2])}(t,n);return Object(a.add)(Object(a.cast)(Object(a.mul)(t.toTensor(),Object(a.scalar)(e,"int32")),"float32"),r)}))}function Et(t,e,n){return nt(this,void 0,void 0,(function(){var r,a,o,s,i,c,u,l,d,p;return rt(this,(function(h){switch(h.label){case 0:return r=0,a=St(t),[4,Promise.all([t.buffer(),e.buffer(),a.buffer()])];case 1:return o=h.sent(),s=o[0],i=o[1],c=o[2],[4,(u=Tt(c,n,i)).buffer()];case 2:return l=h.sent(),d=Array.from(function(t,e){for(var n=e.shape[0],r=new Float32Array(n),a=0;a<n;a++){var o=e.get(a,0),s=e.get(a,1);r[a]=t.get(o,s,a)}return r}(s,c)),p=d.map((function(t,e){return r+=t,{position:{y:l.get(e,0),x:l.get(e,1)},part:ut[e],score:t}})),a.dispose(),u.dispose(),[2,{keypoints:p,score:r/p.length}]}}))}))}var Ct="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",At="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";var _t=[-123.15,-115.9,-103.06],Rt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return tt(e,t),e.prototype.preprocessInput=function(t){return Object(a.add)(t,_t)},e.prototype.nameOutputResults=function(t){var e=t[0],n=t[1];return{offsets:t[2],heatmap:t[3],displacementFwd:e,displacementBwd:n}},e}(at);function Dt(t,e){return pt.reduce((function(n,r){var a=r[0],o=r[1];return function(t,e,n){return t<n||e<n}(t[a].score,t[o].score,e)||n.push([t[a],t[o]]),n}),[])}var Ft=Number.NEGATIVE_INFINITY,Mt=Number.POSITIVE_INFINITY;function Lt(t){return t.reduce((function(t,e){var n=t.maxX,r=t.maxY,a=t.minX,o=t.minY,s=e.position,i=s.x,c=s.y;return{maxX:Math.max(n,i),maxY:Math.max(r,c),minX:Math.min(a,i),minY:Math.min(o,c)}}),{maxX:Ft,maxY:Ft,minX:Mt,minY:Mt})}function zt(t){return nt(this,void 0,void 0,(function(){return rt(this,(function(e){return[2,Promise.all(t.map((function(t){return t.buffer()})))]}))}))}function Pt(t,e){return Ut(t,e)?t:Math.floor(t/e)*e+1}function Bt(t){a.util.assert("number"==typeof t||"object"==typeof t,(function(){return"Invalid inputResolution "+t+". Should be a number or an object with width and height"})),"object"==typeof t&&(a.util.assert("number"==typeof t.width,(function(){return"inputResolution.width has a value of "+t.width+" which is invalid; it must be a number"})),a.util.assert("number"==typeof t.height,(function(){return"inputResolution.height has a value of "+t.height+" which is invalid; it must be a number"})))}function Vt(t,e){return Bt(t),"object"==typeof t?[Pt(t.height,e),Pt(t.width,e)]:[Pt(t,e),Pt(t,e)]}var Wt=[8,16,32];function Ut(t,e){return(t-1)%e==0}function Gt(t){return t instanceof a.Tensor?[t.shape[0],t.shape[1]]:[t.height,t.width]}function Ht(t,e){var n=e[0],r=e[1],o=Gt(t),s=o[0],i=o[1],c=r/n,u=[0,0,0,0],l=u[0],d=u[1],p=u[2],h=u[3];return i/s<c?(l=0,d=0,p=Math.round(.5*(c*s-i)),h=Math.round(.5*(c*s-i))):(l=Math.round(.5*(1/c*i-s)),d=Math.round(.5*(1/c*i-s)),p=0,h=0),{resized:Object(a.tidy)((function(){var e=function(t){return t instanceof a.Tensor?t:a.browser.fromPixels(t)}(t);return e=Object(a.pad3d)(e,[[l,d],[p,h],[0,0]]),a.image.resizeBilinear(e,[n,r])})),padding:{top:l,left:p,right:h,bottom:d}}}function qt(t,e,n,r,a){var o=e[0],s=e[1],i=n[0],c=n[1],u=function(t,e,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),1===n&&1===e&&0===r&&0===a?t:t.map((function(t){return function(t,e,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),{score:t.score,keypoints:t.keypoints.map((function(t){var o=t.score,s=t.part,i=t.position;return{score:o,part:s,position:{x:i.x*n+a,y:i.y*e+r}}}))}}(t,e,n,r,a)}))}(t,(o+r.top+r.bottom)/i,(s+r.left+r.right)/c,-r.top,-r.left);return a?function(t,e){return e<=0?t:t.map((function(t){return function(t,e){return{score:t.score,keypoints:t.keypoints.map((function(t){var n=t.score,r=t.part,a=t.position;return{score:n,part:r,position:{x:e-1-a.x,y:a.y}}}))}}(t,e)}))}(u,s):u}var Kt={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:257},Xt=["MobileNetV1","ResNet50"],Yt={MobileNetV1:[8,16,32],ResNet50:[32,16]},Qt={MobileNetV1:[.5,.75,1],ResNet50:[1]},Jt=[1,2,4];var Zt={flipHorizontal:!1},$t={flipHorizontal:!1,maxDetections:5,scoreThreshold:.5,nmsRadius:20};var te=function(){function t(t,e){(function(t){a.util.assert("number"==typeof t,(function(){return"outputStride is not a number"})),a.util.assert(Wt.indexOf(t)>=0,(function(){return"outputStride of "+t+" is invalid. It must be either 8, 16, or 32"}))})(t.outputStride),function(t,e){a.util.assert("number"==typeof t[0]&&"number"==typeof t[1],(function(){return"both resolution values must be a number but had values "+t})),a.util.assert(Ut(t[0],e),(function(){return"height of "+t[0]+" is invalid for output stride "+e+"."})),a.util.assert(Ut(t[1],e),(function(){return"width of "+t[1]+" is invalid for output stride "+e+"."}))}(e,t.outputStride),this.baseModel=t,this.inputResolution=e}return t.prototype.estimateMultiplePoses=function(t,e){return void 0===e&&(e=$t),nt(this,void 0,void 0,(function(){var n,r,a,o,s,i,c,u,l,d,p,h,f,m,b,g,y,v,O,x,w;return rt(this,(function(k){switch(k.label){case 0:return n=et({},$t,e),function(t){var e=t.maxDetections,n=t.scoreThreshold,r=t.nmsRadius;if(e<=0)throw new Error("Invalid maxDetections "+e+". Should be > 0");if(n<0||n>1)throw new Error("Invalid scoreThreshold "+n+". Should be in range [0.0, 1.0]");if(r<=0)throw new Error("Invalid nmsRadius "+r+".")}(e),r=this.baseModel.outputStride,a=this.inputResolution,o=Gt(t),s=o[0],i=o[1],c=Ht(t,a),u=c.resized,l=c.padding,d=this.baseModel.predict(u),p=d.heatmapScores,h=d.offsets,f=d.displacementFwd,m=d.displacementBwd,[4,zt([p,h,f,m])];case 1:return b=k.sent(),g=b[0],y=b[1],v=b[2],O=b[3],[4,Nt(g,y,v,O,r,n.maxDetections,n.scoreThreshold,n.nmsRadius)];case 2:return x=k.sent(),w=qt(x,[s,i],a,l,n.flipHorizontal),p.dispose(),h.dispose(),f.dispose(),m.dispose(),u.dispose(),[2,w]}}))}))},t.prototype.estimateSinglePose=function(t,e){return void 0===e&&(e=Zt),nt(this,void 0,void 0,(function(){var n,r,a,o,s,i,c,u,l,d,p,h,f,m,b,g;return rt(this,(function(y){switch(y.label){case 0:return n=et({},Zt,e),r=this.baseModel.outputStride,a=this.inputResolution,o=Gt(t),s=o[0],i=o[1],c=Ht(t,a),u=c.resized,l=c.padding,d=this.baseModel.predict(u),p=d.heatmapScores,h=d.offsets,f=d.displacementFwd,m=d.displacementBwd,[4,Et(p,h,r)];case 1:return b=y.sent(),g=qt([b],[s,i],a,l,n.flipHorizontal),p.dispose(),h.dispose(),f.dispose(),m.dispose(),u.dispose(),[2,g[0]]}}))}))},t.prototype.estimatePoses=function(t,e){return nt(this,void 0,void 0,(function(){return rt(this,(function(n){switch(n.label){case 0:return"single-person"!==e.decodingMethod?[3,2]:[4,this.estimateSinglePose(t,e)];case 1:return[2,[n.sent()]];case 2:return[2,this.estimateMultiplePoses(t,e)]}}))}))},t.prototype.dispose=function(){this.baseModel.dispose()},t}();function ee(t){return nt(this,void 0,void 0,(function(){var e,n,r,o,s,i,c;return rt(this,(function(u){switch(u.label){case 0:if(e=t.outputStride,n=t.quantBytes,r=t.multiplier,null==a)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return o=function(t,e,n){var r={1:"100",.75:"075",.5:"050"},a="model-stride"+t+".json";return 4===n?Ct+"float/"+r[e]+"/"+a:Ct+"quant"+n+"/"+r[e]+"/"+a}(e,r,n),[4,J(t.modelUrl||o)];case 1:return s=u.sent(),i=new ot(s,e),c=Vt(t.inputResolution,i.outputStride),[2,new te(i,c)]}}))}))}function ne(t){return nt(this,void 0,void 0,(function(){var e,n,r,o,s,i;return rt(this,(function(c){switch(c.label){case 0:if(e=t.outputStride,n=t.quantBytes,null==a)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return r=function(t,e){var n="model-stride"+t+".json";return 4===e?At+"float/"+n:At+"quant"+e+"/"+n}(e,n),[4,J(t.modelUrl||r)];case 1:return o=c.sent(),s=new Rt(o,e),i=Vt(t.inputResolution,s.outputStride),[2,new te(s,i)]}}))}))}function re(t){return void 0===t&&(t=Kt),nt(this,void 0,void 0,(function(){return rt(this,(function(e){return"ResNet50"===(t=function(t){if(null==(t=t||Kt).architecture&&(t.architecture="MobileNetV1"),Xt.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+Xt);if(null==t.inputResolution&&(t.inputResolution=257),Bt(t.inputResolution),null==t.outputStride&&(t.outputStride=16),Yt[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+Yt[t.architecture]+" for architecture "+t.architecture+".");if(null==t.multiplier&&(t.multiplier=1),Qt[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+Qt[t.architecture]+" for architecture "+t.architecture+".");if(null==t.quantBytes&&(t.quantBytes=4),Jt.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+Jt+" for architecture "+t.architecture+".");if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(t)).architecture?[2,ne(t)]:"MobileNetV1"===t.architecture?[2,ee(t)]:[2,null]}))}))}},function(t,e,n){"use strict";let r;function a(t){r=t}function o(t){if(void 0!==r)return r;if(t||"undefined"!==typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!==typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function s(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(e),n.d(e,"mockIsMobile",(function(){return a})),n.d(e,"isMobile",(function(){return o})),n.d(e,"isBrowser",(function(){return s}))},function(t,e,n){"use strict";function r(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(t.toString(e))}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(8),a=n(11),o=n(34),s=n(2),i=n(6);const c=Object(i.b)({floorDiv_:function(t,e){let n=Object(s.a)(t,"a","floorDiv"),i=Object(s.a)(e,"b","floorDiv");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.jb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(8),a=n(11),o=n(34),s=n(2),i=n(40),c=n(43),u=n(6);const l=Object(u.b)({maximum_:function(t,e){let n=Object(s.a)(t,"a","maximum"),u=Object(s.a)(e,"b","maximum");[n,u]=Object(o.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),u=Object(c.a)(u,"int32")),Object(i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.a.runKernel(a.Sb,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({elu_:function(t){const e={x:Object(o.a)(t,"x","elu","float32")};return r.a.runKernel(a.Y,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({leakyRelu_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n=Object(o.a)(t,"x","leakyRelu"),s={x:n},i={alpha:e};return r.a.runKernel(a.Ab,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({prelu_:function(t,e){const n={x:Object(o.a)(t,"x","prelu"),alpha:Object(o.a)(e,"alpha","prelu")};return r.a.runKernel(a.lc,n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({relu6_:function(t){const e={x:Object(o.a)(t,"x","relu6")};return r.a.runKernel(a.uc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(8),a=n(11),o=n(2),s=n(6);const i=Object(s.b)({step_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","step"),s={x:n},i={alpha:e};return r.a.runKernel(a.Zc,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(2),a=n(21),o=n(72);function s(t,e,n){if(Object(a.d)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Object(r.c)(t,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(o.a)(t,e,s,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(71);function a(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const a=Object(r.a)(t,"int32"),o=Object(r.a)([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const e=a.indexToLoc(n[r]),s=r*t.length;o.values.set(e,s)}return o.toTensor()}},function(t,e,n){"use strict";function r(){if("undefined"!==typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return r})),n.d(e,"isBrowser",(function(){return a}))},function(t,e,n){"use strict";function r(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(t.toString(e))}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({all_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Object(o.a)(t,"x","all","bool"),i={x:s},c={axis:e,keepDims:n};return r.a.runKernel(a.f,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({any_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Object(o.a)(t,"x","any","bool"),i={x:s},c={axis:e,keepDims:n};return r.a.runKernel(a.g,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({argMax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","argMax"),s={x:n},i={axis:e};return r.a.runKernel(a.h,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(12),o=n(90),s=n(46),i=n(7),c=n(13);const u=Object(i.a)({conv1d_:function(t,e,n,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const p=Object(r.a)(t,"x","conv1d"),h=Object(r.a)(e,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=Object(c.a)(p,[1,p.shape[0],p.shape[1]])),a.b(3===f.rank,()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,".")),a.b(3===h.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(h.rank,".")),null!=d&&a.b(a.v(i),()=>"Error in conv1d: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(i,".")),a.b(f.shape[2]===h.shape[1],()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(h.shape[1],".")),a.b(s.h(n,l),()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(l,"'")),a.b("NWC"===u,()=>"Error in conv1d: got dataFormat of ".concat(u," but only NWC is currently supported."));const b=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),g=Object(c.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],v=[1,l],O="NHWC",x=Object(o.a)(g,b,y,i,O,v,d);return m?Object(c.a)(x,[x.shape[2],x.shape[3]]):Object(c.a)(x,[x.shape[0],x.shape[2],x.shape[3]])}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(5),a=n(174),o=n(7);const s=Object(o.a)({conv2dTranspose_:function(t,e,n,o,s,i){const c=Object(r.a)(t,"x","conv2dTranspose"),u=Object(r.a)(e,"filter","conv2dTranspose");return Object(a.a)(n,c,u,o,s,"NHWC",i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({oneHot_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));const i=Object(o.a)(t,"indices","oneHot","int32"),c={indices:i},u={depth:e,onValue:n,offValue:s};return r.a.runKernel(a.ac,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(75),a=n(7),o=n(175);const s=Object(a.a)({randomUniform_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;const i=Object(r.a)(t,a),c=new o.b(e,n,null,s);for(let r=0;r<i.values.length;r++)i.values[r]=c.nextValue();return i.toTensor()}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({selu_:function(t){const e={x:Object(o.a)(t,"x","selu")};return r.a.runKernel(a.yc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(12),o=n(90),s=n(108),i=n(7),c=n(13);const u=Object(i.a)({separableConv2d_:function(t,e,n,i,u){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const p=Object(r.a)(t,"x","separableConv2d"),h=Object(r.a)(e,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=p,b=!1;if(3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,".")),a.b(4===h.rank,()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(h.rank,".")),a.b(4===f.rank,()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(h.rank,".")),a.b(1===f.shape[0],()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],".")),a.b(1===f.shape[1],()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],"."));const g=h.shape[2],y=h.shape[3];a.b(f.shape[2]===g*y,()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(g*y,", ")+"but got ".concat(f.shape[2],"."));const v=Object(s.a)(m,h,i,u,d,l),O=1,x=Object(o.a)(v,f,O,"valid",d);return b?Object(c.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({softplus_:function(t){const e={x:Object(o.a)(t,"x","softplus")};return r.a.runKernel(a.Fc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n(83),a=n(52),o=n(163),s=n(14),i=n(7),c=n(144),u=n(13),l=n(125),d=n(25),p=n(45),h=n(143);const f=Object(i.a)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let i;if(e<=2){const r=Object(u.a)(t,[n,e]);i=Object(h.a)(r)}else{const f=[n,2*(e-1)],m=Object(u.a)(Object(c.a)(t),[n,e]),b=Object(u.a)(Object(o.a)(t),[n,e]),g=Object(l.a)(Object(p.a)(m,[0,1],[n,e-2]),1),y=Object(s.a)(Object(l.a)(Object(p.a)(b,[0,1],[n,e-2]),1),Object(d.a)(-1)),v=Object(a.a)([m,g],1),O=Object(a.a)([b,y],1),x=Object(u.a)(Object(r.a)(v,O),[f[0],f[1]]);i=Object(h.a)(x)}if(i=Object(c.a)(i),3===t.rank&&0!==t.shape[0]){const e=i,n=t.shape[0];i=Object(u.a)(i,[n,i.shape[0]/n,i.shape[1]]),e.dispose()}return i}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({log1p_:function(t){const e={x:Object(o.a)(t,"x","log1p")};return r.a.runKernel(a.Cb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(5),a=n(12),o=n(118);function s(t,e,n){if(Object(a.d)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Object(r.c)(t,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(o.a)(t,e,s,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(75);function a(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const a=Object(r.a)(t,"int32"),o=Object(r.a)([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const e=a.indexToLoc(n[r]),s=r*t.length;o.values.set(e,s)}return o.toTensor()}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({sin_:function(t){const e={x:Object(o.a)(t,"x","sin")};return r.a.runKernel(a.Bc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({sinh_:function(t){const e={x:Object(o.a)(t,"x","sinh")};return r.a.runKernel(a.Cc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({rsqrt_:function(t){const e={x:Object(o.a)(t,"x","rsqrt")};return r.a.runKernel(a.vc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({cosh_:function(t){const e={x:Object(o.a)(t,"x","cosh")};return r.a.runKernel(a.J,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({argMin_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","argMin"),s={x:n},i={axis:e};return r.a.runKernel(a.i,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(36),s=n(5),i=n(7);const c=Object(i.a)({atan2_:function(t,e){let n=Object(s.a)(t,"a","atan2"),i=Object(s.a)(e,"b","atan2");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.m,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({depthToSpace_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=Object(o.a)(t,"x","depthToSpace"),c="NHWC"===n?i.shape[1]:i.shape[2],u="NHWC"===n?i.shape[2]:i.shape[3],l="NHWC"===n?i.shape[3]:i.shape[1];s.b(c*e>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(i.shape)),s.b(u*e>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(u," and ").concat(e," for depthToSpace with input shape\n        ").concat(i.shape)),s.b(l%(e*e)===0,()=>"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(l," for depthToSpace with input shape ").concat(i.shape));const d={x:i},p={blockSize:e,dataFormat:n};return r.a.runKernel(a.N,d,p)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7),c=n(13);const u=Object(i.a)({dilation2d_:function(t,e,n,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=Object(o.a)(t,"x","dilation2d"),p=Object(o.a)(e,"filter","dilation2d");s.b(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,".")),s.b(3===p.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(p.rank,".")),s.b("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(l));let h=d,f=!1;3===d.rank&&(h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:h,filter:p},b={strides:n,pad:i,dilations:u},g=r.a.runKernel(a.S,m,b);return f?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(36),a=n(5),o=n(24),s=n(109),i=n(7),c=n(58),u=n(31);const l=Object(i.a)({divNoNan_:function(t,e){let n=Object(a.a)(t,"a","div"),i=Object(a.a)(e,"b","div");[n,i]=Object(r.makeTypesMatch)(n,i);const l=Object(o.a)(n,i),d=Object(u.a)(l),p=Object(s.a)(i,d);return Object(c.a)(p,d,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(12),o=n(48),s=n(7),i=n(13);const c=Object(s.a)({dot_:function(t,e){const n=Object(r.a)(t,"t1","dot"),s=Object(r.a)(e,"t2","dot");a.b((1===n.rank||2===n.rank)&&(1===s.rank||2===s.rank),()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(s.rank,"."));const c=1===n.rank?n.size:n.shape[1],u=1===s.rank?s.size:s.shape[0];if(a.b(c===u,()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(u,".")),1===n.rank&&1===s.rank){const t=Object(i.a)(n,[1,-1]),e=Object(i.a)(s,[-1,1]),r=Object(o.a)(t,e);return Object(i.a)(r,[])}if(1===n.rank&&2===s.rank){const t=Object(i.a)(n,[1,-1]),e=Object(i.a)(s,[s.shape[0],s.shape[1]]),r=Object(o.a)(t,e);return Object(i.a)(r,[r.size])}if(2===n.rank&&1===s.rank){const t=Object(i.a)(s,[-1,1]),e=Object(o.a)(n,t);return Object(i.a)(e,[e.size])}{const t=Object(i.a)(s,[s.shape[0],s.shape[1]]);return Object(o.a)(n,t)}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7),c=n(13);const u=Object(i.a)({localResponseNormalization_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const l=Object(o.a)(t,"x","localResponseNormalization");s.b(4===l.rank||3===l.rank,()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(l.rank,".")),s.b(s.v(e),()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,"."));let d=l,p=!1;3===l.rank&&(p=!0,d=Object(c.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const h={x:d},f={depthRadius:e,bias:n,alpha:i,beta:u},m=r.a.runKernel(a.vb,h,f);return p?Object(c.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(26),o=n(84),s=n(135),i=n(171),c=n(7);const u=Object(c.a)({logicalXor_:function(t,e){const n=Object(r.a)(t,"a","logicalXor","bool"),c=Object(r.a)(e,"b","logicalXor","bool");return Object(a.a)(n.shape,c.shape),Object(o.a)(Object(i.a)(t,e),Object(s.a)(Object(o.a)(t,e)))}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({mirrorPad_:function(t,e,n){s.b("reflect"===n||"symmetric"===n,()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,"."));const i=Object(o.a)(t,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s.b(e.length===i.rank,()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(e.length,"."));const c="reflect"===n?1:0;for(let r=0;r<i.rank;r++)s.b(2===e[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),s.b(e[r][0]>=0&&e[r][0]<=i.shape[r]-c&&e[r][1]>=0&&e[r][1]<=i.shape[r]-c,()=>"Padding in dimension ".concat(r," cannot be greater than or equal ")+"to ".concat(i.shape[r]-c," or less than 0 for input of ")+"shape ".concat(i.shape));const u={paddings:e,mode:n},l={x:i};return r.a.runKernel(a.Rb,l,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n(5),a=n(12),o=n(149),s=n(136),i=n(46),c=n(156),u=n(7),l=n(13),d=n(133);const p=Object(u.a)({pool_:function(t,e,n,u,p,h){null==p&&(p=[1,1]),null==h&&(h=1),0===u&&(u="valid");const f=Object(r.a)(t,"x","maxPool");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.b(i.h(h,p),()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(h," and dilations '").concat(p,"'"));const g=i.e(m.shape,e,h,p,u),y=[g.dilationHeight,g.dilationWidth];let v;v="same"===u?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),a=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],a[e]])}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const O=1===y[0]&&1===y[1],[x,w]=function(t,e,n){const r=n.map(t=>t[0]),a=n.map(t=>t[1]),o=t.concat(r,a),s=e.map((t,e)=>(t-o[e]%t)%t),i=a.map((t,e)=>t+s[e]),c=e.map((t,e)=>[r[e],i[e]]),u=e.map((t,e)=>[0,s[e]]);return[c,u]}([g.inHeight,g.inWidth],y,v),k=O?u:"valid",j=O?m:Object(d.a)(m,y,x),N=("avg"===n?()=>Object(o.a)(j,e,h,k):()=>Object(c.a)(j,e,h,k))(),S=O?N:Object(s.a)(N,y,w);return b?Object(l.a)(S,[S.shape[1],S.shape[2],S.shape[3]]):S}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(20),i=n(7);const c=Object(i.a)({prod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(o.a)(t,"x","prod");"bool"===i.dtype&&(i=Object(s.a)(i,"int32"));const c={x:i},u={axis:e,keepDims:n};return r.a.runKernel(a.gc,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({topk_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const s=Object(o.a)(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=s.shape[s.shape.length-1];if(e>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(e));const c={x:s},u={k:e,sorted:n},[l,d]=r.a.runKernel(a.Tc,c,u);return{values:l,indices:d}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({unique_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","unique","string_or_numeric");Object(s.b)(n.rank>0,()=>"The input tensor must be at least 1D");const i={x:n},c={axis:e},[u,l]=r.a.runKernel(a.Vc,i,c);return{values:u,indices:l}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7),c=n(13);const u=Object(i.a)({resizeNearestNeighbor_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=Object(o.a)(t,"images","resizeNearestNeighbor");s.b(3===u.rank||4===u.rank,()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(u.rank,".")),s.b(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,".")),s.b("float32"===u.dtype||"int32"===u.dtype,()=>"`images` must have `int32` or `float32` as dtype"),s.b(!1===i||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let l=u,d=!1;3===u.rank&&(d=!0,l=Object(c.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=e,p={images:l},h={alignCorners:n,halfPixelCenters:i,size:e},f=r.a.runKernel(a.qc,p,h);return d?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7),c=n(13);const u=Object(i.a)({resizeBilinear_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=Object(o.a)(t,"images","resizeBilinear");s.b(3===u.rank||4===u.rank,()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(u.rank,".")),s.b(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,".")),s.b(!1===i||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let l=u,d=!1;3===u.rank&&(d=!0,l=Object(c.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=e,p={images:l},h={alignCorners:n,halfPixelCenters:i,size:e},f=r.a.runKernel(a.oc,p,h);return d?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(7),s=n(13);const i=Object(o.a)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,o,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,l=e,d=!1;3===e.rank&&(d=!0,l=Object(s.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const p={dy:l,filter:n},h={strides:o,pad:i,dimRoundingMode:u,dilations:c,inputShape:t},f=r.a.runKernel(a.Q,p,h);return d?Object(s.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(7),s=n(13);const i=Object(o.a)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,o,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,l=t;3===t.rank&&(l=Object(s.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d=e;3===d.rank&&(d=Object(s.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const p={x:l,dy:d},h={strides:o,pad:i,dimRoundingMode:u,dilations:c,filterShape:n};return r.a.runKernel(a.P,p,h)}})},function(t,e,n){var r=n(360),a=n(361),o=n(362),s=n(363),i=n(364),c=n(365),u=n(366);u.alea=r,u.xor128=a,u.xorwow=o,u.xorshift7=s,u.xor4096=i,u.tychei=c,t.exports=u},function(t,e){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(S){}function r(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function a(t){return!0===(t&&t.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var o={},s={};function i(t,e){var n,r,a;return e?(a=0<=(t>>>=0)&&t<256)&&(r=s[t])?r:(n=u(t,(0|t)<0?-1:0,!0),a&&(s[t]=n),n):(a=-128<=(t|=0)&&t<128)&&(r=o[t])?r:(n=u(t,t<0?-1:0,!1),a&&(o[t]=n),n)}function c(t,e){if(isNaN(t))return e?y:g;if(e){if(t<0)return y;if(t>=f)return k}else{if(t<=-m)return j;if(t+1>=m)return w}return t<0?c(-t,e).neg():u(t%h|0,t/h|0,e)}function u(t,e,n){return new r(t,e,n)}r.fromInt=i,r.fromNumber=c,r.fromBits=u;var l=Math.pow;function d(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return g;if("number"===typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(t.substring(1),e,n).neg();for(var a=c(l(n,8)),o=g,s=0;s<t.length;s+=8){var i=Math.min(8,t.length-s),u=parseInt(t.substring(s,s+i),n);if(i<8){var p=c(l(n,i));o=o.mul(p).add(c(u))}else o=(o=o.mul(a)).add(c(u))}return o.unsigned=e,o}function p(t,e){return"number"===typeof t?c(t,e):"string"===typeof t?d(t,e):u(t.low,t.high,"boolean"===typeof e?e:t.unsigned)}r.fromString=d,r.fromValue=p;var h=4294967296,f=h*h,m=f/2,b=i(1<<24),g=i(0);r.ZERO=g;var y=i(0,!0);r.UZERO=y;var v=i(1);r.ONE=v;var O=i(1,!0);r.UONE=O;var x=i(-1);r.NEG_ONE=x;var w=u(-1,2147483647,!1);r.MAX_VALUE=w;var k=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=k;var j=u(0,-2147483648,!1);r.MIN_VALUE=j;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},N.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(j)){var e=c(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var a=c(l(t,6),this.unsigned),o=this,s="";;){var i=o.div(a),u=(o.sub(i.mul(a)).toInt()>>>0).toString(t);if((o=i).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(j)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1===(1&this.low)},N.isEven=function(){return 0===(1&this.low)},N.equals=function(t){return a(t)||(t=p(t)),(this.unsigned===t.unsigned||this.high>>>31!==1||t.high>>>31!==1)&&(this.high===t.high&&this.low===t.low)},N.eq=N.equals,N.notEquals=function(t){return!this.eq(t)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(t){return this.comp(t)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(t){return this.comp(t)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(t){return this.comp(t)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(t){return this.comp(t)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(t){if(a(t)||(t=p(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(j)?j:this.not().add(v)},N.neg=N.negate,N.add=function(t){a(t)||(t=p(t));var e=this.high>>>16,n=65535&this.high,r=this.low>>>16,o=65535&this.low,s=t.high>>>16,i=65535&t.high,c=t.low>>>16,l=0,d=0,h=0,f=0;return h+=(f+=o+(65535&t.low))>>>16,d+=(h+=r+c)>>>16,l+=(d+=n+i)>>>16,l+=e+s,u((h&=65535)<<16|(f&=65535),(l&=65535)<<16|(d&=65535),this.unsigned)},N.subtract=function(t){return a(t)||(t=p(t)),this.add(t.neg())},N.sub=N.subtract,N.multiply=function(t){if(this.isZero())return g;if(a(t)||(t=p(t)),n)return u(n.mul(this.low,this.high,t.low,t.high),n.get_high(),this.unsigned);if(t.isZero())return g;if(this.eq(j))return t.isOdd()?j:g;if(t.eq(j))return this.isOdd()?j:g;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(b)&&t.lt(b))return c(this.toNumber()*t.toNumber(),this.unsigned);var e=this.high>>>16,r=65535&this.high,o=this.low>>>16,s=65535&this.low,i=t.high>>>16,l=65535&t.high,d=t.low>>>16,h=65535&t.low,f=0,m=0,y=0,v=0;return y+=(v+=s*h)>>>16,m+=(y+=o*h)>>>16,y&=65535,m+=(y+=s*d)>>>16,f+=(m+=r*h)>>>16,m&=65535,f+=(m+=o*d)>>>16,m&=65535,f+=(m+=s*l)>>>16,f+=e*h+r*d+o*l+s*i,u((y&=65535)<<16|(v&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(t){if(a(t)||(t=p(t)),t.isZero())throw Error("division by zero");var e,r,o;if(n)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,t.low,t.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return y;if(t.gt(this.shru(1)))return O;o=y}else{if(this.eq(j))return t.eq(v)||t.eq(x)?j:t.eq(j)?v:(e=this.shr(1).div(t).shl(1)).eq(g)?t.isNegative()?v:x:(r=this.sub(t.mul(e)),o=e.add(r.div(t)));if(t.eq(j))return this.unsigned?y:g;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();o=g}for(r=this;r.gte(t);){e=Math.max(1,Math.floor(r.toNumber()/t.toNumber()));for(var s=Math.ceil(Math.log(e)/Math.LN2),i=s<=48?1:l(2,s-48),d=c(e),h=d.mul(t);h.isNegative()||h.gt(r);)h=(d=c(e-=i,this.unsigned)).mul(t);d.isZero()&&(d=v),o=o.add(d),r=r.sub(h)}return o},N.div=N.divide,N.modulo=function(t){return a(t)||(t=p(t)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,t.low,t.high),n.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(t){return a(t)||(t=p(t)),u(this.low&t.low,this.high&t.high,this.unsigned)},N.or=function(t){return a(t)||(t=p(t)),u(this.low|t.low,this.high|t.high,this.unsigned)},N.xor=function(t){return a(t)||(t=p(t)),u(this.low^t.low,this.high^t.high,this.unsigned)},N.shiftLeft=function(t){return a(t)&&(t=t.toInt()),0===(t&=63)?this:t<32?u(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):u(0,this.low<<t-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(t){return a(t)&&(t=t.toInt()),0===(t&=63)?this:t<32?u(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):u(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(t){if(a(t)&&(t=t.toInt()),0===(t&=63))return this;var e=this.high;return t<32?u(this.low>>>t|e<<32-t,e>>>t,this.unsigned):u(32===t?e:e>>>t-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},N.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},r.fromBytes=function(t,e,n){return n?r.fromBytesLE(t,e):r.fromBytesBE(t,e)},r.fromBytesLE=function(t,e){return new r(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},r.fromBytesBE=function(t,e){return new r(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},function(t,e,n){"use strict";var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function s(t){if(null===t||void 0===t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(t){r[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(a){return!1}}()?Object.assign:function(t,e){for(var n,i,c=s(t),u=1;u<arguments.length;u++){for(var l in n=Object(arguments[u]))a.call(n,l)&&(c[l]=n[l]);if(r){i=r(n);for(var d=0;d<i.length;d++)o.call(n,i[d])&&(c[i[d]]=n[i[d]])}}return c}},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return a}));const r="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof t?t:t=>t();function a(){return new Promise(t=>r(()=>t()))}}).call(this,n(242).setImmediate)},function(t,e,n){(function(t){var r="undefined"!==typeof t&&t||"undefined"!==typeof self&&self||window,a=Function.prototype.apply;function o(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new o(a.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new o(a.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout((function(){t._onTimeout&&t._onTimeout()}),e))},n(368),e.setImmediate="undefined"!==typeof self&&self.setImmediate||"undefined"!==typeof t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!==typeof self&&self.clearImmediate||"undefined"!==typeof t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(178))},function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n(9),a=n(30),o=n(4),s=n(5),i=n(12),c=n(20),u=n(46),l=n(7),d=n(13);const p=Object(l.a)({avgPool3d_:function(t,e,n,l,p){let h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",f=arguments.length>6?arguments[6]:void 0;null==f?f=[1,1,1]:Object(a.b)("dilations is deprecated, this field will be gone in v3.0.0.");const m=Object(s.a)(t,"x","avgPool3d","float32");let b=m,g=!1;4===m.rank&&(g=!0,b=Object(d.a)(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),i.b(5===b.rank,()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(b.rank,".")),i.b("NDHWC"===h,()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(h)),i.b(u.h(n,f),()=>"Error in avgPool3d: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(f,"'")),null!=p&&i.b(i.v(l),()=>"Error in avgPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(p," but got pad ").concat(l,"."));const y={x:b},v={filterSize:e,strides:n,pad:l,dimRoundingMode:p,dataFormat:h,dilations:f};let O=r.a.runKernel(o.p,y,v);return O=Object(c.a)(O,b.dtype),g?Object(d.a)(O,[O.shape[1],O.shape[2],O.shape[3],O.shape[4]]):O}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({clipByValue_:function(t,e,n){const i=Object(o.a)(t,"x","clipByValue");s.b(e<=n,()=>"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(n,")."));const c={x:i},u={clipValueMin:e,clipValueMax:n};return r.a.runKernel(a.y,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(46),c=n(7),u=n(13);const l=Object(c.a)({conv3d_:function(t,e,n,c){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const p=Object(o.a)(t,"x","conv3d"),h=Object(o.a)(e,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),s.b(5===f.rank,()=>"Error in conv3d: input must be rank 5, but got rank ".concat(f.rank,".")),s.b(5===h.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(h.rank,".")),s.b(f.shape[4]===h.shape[3],()=>"Error in conv3d: depth of input (".concat(f.shape[4],") must match ")+"input depth for filter ".concat(h.shape[3],".")),s.b(Object(i.h)(n,d),()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'")),s.b("NDHWC"===l,()=>"Error in conv3d: got dataFormat of ".concat(l," but only NDHWC is currently supported."));const b={x:f,filter:h},g={strides:n,pad:c,dataFormat:l,dilations:d},y=r.a.runKernel(a.F,b,g);return m?Object(u.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n(55),a=n(5),o=n(20),s=n(63),i=n(98),c=n(95),u=n(14),l=n(7),d=n(22),p=n(28);const h=Object(l.a)({logSoftmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Object(a.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(e));const l=Object(r.a)((t,n)=>{const r=Object(c.a)(t,e,!0),a=Object(d.a)(t,r),l=Object(d.a)(Object(o.a)(a,"float32"),Object(i.a)(Object(p.a)(Object(s.a)(a),e,!0)));n([l]);return{value:l,gradFunc:(t,n)=>{const[r]=n,a=Object(s.a)(r);return Object(d.a)(t,Object(u.a)(Object(p.a)(t,e,!0),a))}}});return l(n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n(9),a=n(30),o=n(4),s=n(5),i=n(12),c=n(46),u=n(7),l=n(13);const d=Object(u.a)({maxPool3d_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,u=arguments.length>3?arguments[3]:void 0,d=arguments.length>4?arguments[4]:void 0,p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",h=arguments.length>6?arguments[6]:void 0;null==h?h=[1,1,1]:Object(a.b)("dilations is deprecated, this field will be gone in v3.0.0.");const f=Object(s.a)(t,"x","maxPool3d");let m=f,b=!1;4===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2],f.shape[3]])),i.b(5===m.rank,()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(m.rank,".")),i.b("NDHWC"===p,()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(p)),i.b(c.h(n,h),()=>"Error in maxPool3d: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(h,"'")),null!=d&&i.b(i.v(u),()=>"Error in maxPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(u,"."));const g={x:m},y={filterSize:e,strides:n,pad:u,dimRoundingMode:d,dataFormat:p,dilations:h},v=r.a.runKernel(o.Jb,g,y);return b?Object(l.a)(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({onesLike_:function(t){const e={x:Object(o.a)(t,"x","onesLike")};return r.a.runKernel(a.bc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({softmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Object(o.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(e));const s={logits:n},i={dim:e};return r.a.runKernel(a.Ec,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({tanh_:function(t){const e={x:Object(o.a)(t,"x","tanh")};return r.a.runKernel(a.Rc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(75),a=n(7),o=n(175);const s=Object(a.a)({truncatedNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const i=new o.a(e,n,a,!0,s),c=Object(r.a)(t,a);for(let r=0;r<c.values.length;r++)c.values[r]=i.nextValue();return c.toTensor()}})},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return a}));const r="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof t?t:t=>t();function a(){return new Promise(t=>r(()=>t()))}}).call(this,n(242).setImmediate)},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({acos_:function(t){const e={x:Object(o.a)(t,"x","acos")};return r.a.runKernel(a.b,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({acosh_:function(t){const e={x:Object(o.a)(t,"x","acosh")};return r.a.runKernel(a.c,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return b})),n.d(e,"b",(function(){return g})),n.d(e,"c",(function(){return y})),n.d(e,"d",(function(){return v})),n.d(e,"e",(function(){return O})),n.d(e,"f",(function(){return x})),n.d(e,"g",(function(){return w})),n.d(e,"h",(function(){return k})),n.d(e,"i",(function(){return j}));var r=n(30),a=n(5),o=n(12),s=n(23),i=n(24),c=n(110),u=n(130),l=n(170),d=n(14),p=n(7),h=n(76),f=n(132),m=n(22);const b=Object(p.a)({addStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","addStrict"),i=Object(a.a)(e,"b","addStrict");return o.e(n.shape,i.shape,"Error in addStrict: "),Object(s.a)(n,i)}}),g=Object(p.a)({divStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","div"),s=Object(a.a)(e,"b","div");return o.e(n.shape,s.shape,"Error in divideStrict: "),Object(i.a)(n,s)}}),y=Object(p.a)({maximumStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","maximumStrict"),s=Object(a.a)(e,"b","maximumStrict");return o.e(n.shape,s.shape,"Error in maximumStrict: "),Object(c.a)(n,s)}}),v=Object(p.a)({minimumStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","minimumStrict"),s=Object(a.a)(e,"b","minimumStrict");return o.e(n.shape,s.shape,"Error in minimumStrict: "),Object(u.a)(n,s)}}),O=Object(p.a)({modStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","modStrict"),s=Object(a.a)(e,"b","modStrict");return o.e(n.shape,s.shape,"Error in modStrict: "),Object(l.a)(n,s)}}),x=Object(p.a)({mulStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","mul"),s=Object(a.a)(e,"b","mul");return o.e(n.shape,s.shape,"Error in multiplyStrict: "),Object(d.a)(n,s)}}),w=Object(p.a)({powStrict_:function(t,e){return Object(r.b)("strict variants of ops have been deprecated and will be removed in future"),o.e(t.shape,e.shape,"Error in powStrict: "),Object(h.a)(t,e)}}),k=Object(p.a)({squaredDifferenceStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","squaredDifferenceStrict"),s=Object(a.a)(e,"b","squaredDifferenceStrict");return o.e(n.shape,s.shape,"Error in squaredDifferenceStrict: "),Object(f.a)(n,s)}}),j=Object(p.a)({subStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","subStrict"),s=Object(a.a)(e,"b","subStrict");return o.e(n.shape,s.shape,"Error in subStrict: "),Object(m.a)(n,s)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({asin_:function(t){const e={x:Object(o.a)(t,"x","asin")};return r.a.runKernel(a.j,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({asinh_:function(t){const e={x:Object(o.a)(t,"x","asinh")};return r.a.runKernel(a.k,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({atan_:function(t){const e={x:Object(o.a)(t,"x","atan")};return r.a.runKernel(a.l,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({atanh_:function(t){const e={x:Object(o.a)(t,"x","atanh")};return r.a.runKernel(a.n,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({ceil_:function(t){const e={x:Object(o.a)(t,"x","ceil")};return r.a.runKernel(a.x,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return h})),n.d(e,"b",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"e",(function(){return g})),n.d(e,"f",(function(){return y}));var r=n(30),a=n(5),o=n(12),s=n(109),i=n(70),c=n(78),u=n(134),l=n(79),d=n(131),p=n(7);const h=Object(p.a)({equalStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","equalStrict"),i=Object(a.a)(e,"b","equalStrict");return Object(o.e)(n.shape,i.shape,"Error in equalStrict: "),Object(s.a)(n,i)}}),f=Object(p.a)({greaterEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","greaterEqualStrict"),s=Object(a.a)(e,"b","greaterEqualStrict");return Object(o.e)(n.shape,s.shape,"Error in greaterEqualStrict: "),Object(c.a)(n,s)}}),m=Object(p.a)({greaterStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","greaterStrict"),s=Object(a.a)(e,"b","greaterStrict");return Object(o.e)(n.shape,s.shape,"Error in greaterStrict: "),Object(i.a)(n,s)}}),b=Object(p.a)({lessEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","lessEqualStrict"),s=Object(a.a)(e,"b","lessEqualStrict");return Object(o.e)(n.shape,s.shape,"Error in lessEqualStrict: "),Object(l.a)(n,s)}}),g=Object(p.a)({lessStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","lessStrict"),s=Object(a.a)(e,"b","lessStrict");return Object(o.e)(n.shape,s.shape,"Error in lessStrict: "),Object(u.a)(n,s)}}),y=Object(p.a)({notEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","notEqualStrict"),s=Object(a.a)(e,"b","notEqualStrict");return Object(o.e)(n.shape,s.shape,"Error in notEqualStrict: "),Object(d.a)(n,s)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(20),c=n(7);const u=Object(c.a)({erf_:function(t){let e=Object(o.a)(t,"x","erf");s.b("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Object(i.a)(e,"float32"));const n={x:e};return r.a.runKernel(a.Y,n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({expm1_:function(t){const e={x:Object(o.a)(t,"x","expm1")};return r.a.runKernel(a.bb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({isFinite_:function(t){const e={x:Object(o.a)(t,"x","isFinite")};return r.a.runKernel(a.sb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({isInf_:function(t){const e={x:Object(o.a)(t,"x","isInf")};return r.a.runKernel(a.tb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({isNaN_:function(t){const e={x:Object(o.a)(t,"x","isNaN")};return r.a.runKernel(a.ub,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(55),a=n(5),o=n(14),s=n(49),i=n(7),c=n(159),u=n(212);const l=Object(i.a)({logSigmoid_:function(t){const e=Object(a.a)(t,"x","logSigmoid");return Object(r.a)(t=>({value:Object(s.a)(Object(u.a)(Object(s.a)(t))),gradFunc:e=>Object(o.a)(e,Object(c.a)(Object(s.a)(t)))}))(e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({reciprocal_:function(t){const e={x:Object(o.a)(t,"x","reciprocal")};return r.a.runKernel(a.kc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({round_:function(t){const e={x:Object(o.a)(t,"x","round")};return r.a.runKernel(a.uc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({sign_:function(t){const e={x:Object(o.a)(t,"x","sign")};return r.a.runKernel(a.Ac,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({stridedSlice_:function(t,e,n,s){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const p=Object(o.a)(t,"x","stridedSlice"),h={x:p},f={begin:e,end:n,strides:s,beginMask:i,endMask:c,ellipsisMask:u,newAxisMask:l,shrinkAxisMask:d};return r.a.runKernel(a.Nc,h,f)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({tan_:function(t){const e={x:Object(o.a)(t,"x","tan")};return r.a.runKernel(a.Qc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({addN_:function(t){s.b(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),s.b(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(t.length));const e=t.map((t,e)=>Object(o.a)(t,"tensors".concat(e),"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!s.a(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const i=e;return r.a.runKernel(a.e,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({maxPoolWithArgmax_:function(t,e,n,s){let i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const c=Object(o.a)(t,"x","maxPoolWithArgmax"),u={x:c},l={filterSize:e,strides:n,pad:s,includeBatchInIndex:i},d=r.a.runKernel(a.Mb,u,l);return{result:d[0],indexes:d[1]}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(9),a=n(4);function o(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const o={start:t,stop:e,num:n};return r.a.runKernel(a.Ab,{},o)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(7),i=n(13);const c=Object(s.a)({multinomial_:function(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const c=Object(o.a)(t,"logits","multinomial"),u=c.size,l=c.rank;if(u<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(u,"."));if(l>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(l));n=n||Math.random();const d=1===l?Object(i.a)(c,[1,-1]):c,p={logits:d},h={numSamples:e,seed:n,normalized:s},f=r.a.runKernel(a.Tb,p,h);return 1===l?Object(i.a)(f,[f.size]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(216),a=n(5);const o=async function(t){const e=Object(a.a)(t,"condition","whereAsync","bool"),n=await e.data(),o=Object(r.a)(e.shape,n);return t!==e&&e.dispose(),o}},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(10),a=n(5),o=n(12);const s=async function(t,e){const n=Object(a.a)(t,"x","setdiff1d"),s=Object(a.a)(e,"y","setdiff1d");o.b(n.dtype===s.dtype,()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(s.dtype,").")),o.b(1===n.rank,()=>"x should be 1D tensor, but got x (".concat(n.shape,").")),o.b(1===s.rank,()=>"y should be 1D tensor, but got y (".concat(s.shape,")."));const i=await n.data(),c=await s.data(),u=new Set(c);let l=0;for(let r=0;r<i.length;r++)u.has(i[r])||l++;const d=new r.b([l],n.dtype),p=new r.b([l],"int32");for(let r=0,a=0;r<i.length;r++)u.has(i[r])||(d.values[a]=i[r],p.values[a]=r,a++);return[d.toTensor(),p.toTensor()]}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({bincount_:function(t,e,n){const i=Object(o.a)(t,"x","bincount"),c=Object(o.a)(e,"weights","bincount");s.b("int32"===i.dtype,()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(i.dtype)),s.b(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),s.b(c.size===i.size||0===c.size,()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(i.shape,", weights shape: ")+"".concat(c.shape,"."));const u={x:i,weights:c},l={size:n};return r.a.runKernel(a.u,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(12),i=n(7);const c=Object(i.a)({denseBincount_:function(t,e,n){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const c=Object(o.a)(t,"x","denseBincount"),u=Object(o.a)(e,"weights","denseBincount");s.b("int32"===c.dtype,()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(c.dtype)),s.b(c.rank<=2,()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(c.rank,".")),s.b(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),s.b(u.size===c.size||0===u.size,()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(c.shape,", weights shape: ")+"".concat(u.shape,"."));const l={x:c,weights:u},d={size:n,binaryOutput:i};return r.a.runKernel(a.M,l,d)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4),o=n(5),s=n(7),i=n(148);const c=Object(s.a)({scatterND_:function(t,e,n){const s=Object(o.a)(t,"indices","scatterND","int32"),c=Object(o.a)(e,"updates","scatterND");i.b(c,s,n);const u={indices:s,updates:c},l={shape:n};return r.a.runKernel(a.wc,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(9),a=n(4),o=n(5),s=n(7);const i=Object(s.a)({gatherND_:function(t,e){const n=Object(o.a)(e,"indices","gatherND","int32"),s={params:Object(o.a)(t,"x","gatherND"),indices:n};return r.a.runKernel(a.lb,s)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(9),a=n(4);function o(t,e,n,r){if("int32"!==t.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(t.shape,"."));const a=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(o,"."));const s=e.size;if(0!==e.rank&&(1!==e.rank||s!==a))throw new Error("sparseValues has incorrect shape "+"".concat(e.shape,", should be [] or [").concat(a,"]"));if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}var s=n(5),i=n(7);const c=Object(i.a)({sparseToDense_:function(t,e,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const c=Object(s.a)(t,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(e,"sparseValues","sparseToDense"),l=Object(s.a)(i,"defaultValue","sparseToDense",u.dtype);o(c,u,n,l);const d={sparseIndices:c,sparseValues:u,defaultValue:l},p={outputShape:n};return r.a.runKernel(a.Hc,d,p)}})},function(t,e,n){"use strict";!function t(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(e){console.error(e)}}}(),t.exports=n(349)},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]},function(t,e,n){var r;r=function(t){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(r,a,function(e){return t[e]}.bind(null,a));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(t,e,n){"use strict";n.r(e);var r=n("react"),a=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=function(){return(o=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var a in e=arguments[n])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)},s=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(t);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(t,r[a])&&(n[r[a]]=t[r[a]])}return n};function i(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!==typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(t){var e=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return e?new Promise((function(n,r){e.call(navigator,t,n,r)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var c=function(t){function e(e){var n=t.call(this,e)||this;return n.canvas=null,n.ctx=null,n.unmounted=!1,n.state={hasUserMedia:!1},n}return a(e,t),e.prototype.componentDidMount=function(){var t=this.state,e=this.props;i()?t.hasUserMedia||this.requestUserMedia():e.onUserMediaError("getUserMedia not supported")},e.prototype.componentDidUpdate=function(t){var e=this.props;if(i()){var n=JSON.stringify(t.audioConstraints)!==JSON.stringify(e.audioConstraints),r=JSON.stringify(t.videoConstraints)!==JSON.stringify(e.videoConstraints),a=t.minScreenshotWidth!==e.minScreenshotWidth,o=t.minScreenshotHeight!==e.minScreenshotHeight;(r||a||o)&&(this.canvas=null,this.ctx=null),(n||r)&&(this.stopAndCleanup(),this.requestUserMedia())}else e.onUserMediaError("getUserMedia not supported")},e.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},e.stopMediaStream=function(t){t&&(t.getVideoTracks&&t.getAudioTracks?(t.getVideoTracks().map((function(e){t.removeTrack(e),e.stop()})),t.getAudioTracks().map((function(e){t.removeTrack(e),e.stop()}))):t.stop())},e.prototype.stopAndCleanup=function(){var t=this.state;t.hasUserMedia&&(e.stopMediaStream(this.stream),t.src&&window.URL.revokeObjectURL(t.src))},e.prototype.getScreenshot=function(t){var e=this.state,n=this.props;if(!e.hasUserMedia)return null;var r=this.getCanvas(t);return r&&r.toDataURL(n.screenshotFormat,n.screenshotQuality)},e.prototype.getCanvas=function(t){var e=this.state,n=this.props;if(!this.video)return null;if(!e.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var r=this.video.videoWidth,a=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var o=r/a;a=(r=n.minScreenshotWidth||this.video.clientWidth)/o,n.minScreenshotHeight&&a<n.minScreenshotHeight&&(r=(a=n.minScreenshotHeight)*o)}this.canvas=document.createElement("canvas"),this.canvas.width=(null===t||void 0===t?void 0:t.width)||r,this.canvas.height=(null===t||void 0===t?void 0:t.height)||a,this.ctx=this.canvas.getContext("2d")}var s=this.ctx,i=this.canvas;return s&&i&&(n.mirrored&&(s.translate(i.width,0),s.scale(-1,1)),s.imageSmoothingEnabled=n.imageSmoothing,s.drawImage(this.video,0,0,(null===t||void 0===t?void 0:t.width)||i.width,(null===t||void 0===t?void 0:t.height)||i.height),n.mirrored&&(s.scale(-1,1),s.translate(-i.width,0))),i},e.prototype.requestUserMedia=function(){var t=this,n=this.props,r=function(r,a){var o={video:"undefined"===typeof a||a};n.audio&&(o.audio="undefined"===typeof r||r),navigator.mediaDevices.getUserMedia(o).then((function(n){t.unmounted?e.stopMediaStream(n):t.handleUserMedia(null,n)})).catch((function(e){t.handleUserMedia(e)}))};if("mediaDevices"in navigator)r(n.audioConstraints,n.videoConstraints);else{var a=function(t){return{optional:[{sourceId:t}]}},o=function(t){var e=t.deviceId;return"string"===typeof e?e:Array.isArray(e)&&e.length>0?e[0]:"object"===typeof e&&e.ideal?e.ideal:null};MediaStreamTrack.getSources((function(t){var e=null,s=null;t.forEach((function(t){"audio"===t.kind?e=t.id:"video"===t.kind&&(s=t.id)}));var i=o(n.audioConstraints);i&&(e=i);var c=o(n.videoConstraints);c&&(s=c),r(a(e),a(s))}))}},e.prototype.handleUserMedia=function(t,e){var n=this.props;if(t||!e)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(t);this.stream=e;try{this.video&&(this.video.srcObject=e),this.setState({hasUserMedia:!0})}catch(r){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(e)})}n.onUserMedia(e)},e.prototype.render=function(){var t=this,e=this.state,n=this.props,a=n.audio,i=(n.forceScreenshotSourceSize,n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),c=n.style,u=void 0===c?{}:c,l=s(n,["audio","forceScreenshotSourceSize","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style"]),d=i?o(o({},u),{transform:(u.transform||"")+" scaleX(-1)"}):u;return r.createElement("video",o({autoPlay:!0,src:e.src,muted:a,playsInline:!0,ref:function(e){t.video=e},style:d},l))},e.defaultProps={audio:!0,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},e}(r.Component);e.default=c},react:function(e,n){e.exports=t}}).default},t.exports=r(n(87))},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return s}));var r=n(0),a=n(69),o=n(323);class s extends a.a{decodeUTF8(){return new i(this)}}class i extends o.a{constructor(t){super(),this.upstream=t,this.impl=new c(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class c extends a.b{constructor(t){if(super(),this.upstream=t,Object(r.Kd)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(380);this.decoder=new t("utf8")}}summary(){return"".concat(this.upstream.summary()," -> Utf8")}async pump(){const e=await this.upstream.next();let n,a;return!e.done&&(n=e.value,a=Object(r.Kd)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n(180).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(69);class a extends r.a{split(t){return new o(this,t)}}class o extends a{constructor(t,e){super(),this.upstream=t,this.impl=new s(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class s extends r.b{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return"".concat(this.upstream.summary()," -> Split('").concat(this.separator,"')")}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a.De}));var r={};n.r(r),n.d(r,"simpleAbsImpl",(function(){return Eo})),n.d(r,"addImpl",(function(){return Oo})),n.d(r,"bincountImpl",(function(){return ps})),n.d(r,"bincountReduceImpl",(function(){return hs})),n.d(r,"ceilImpl",(function(){return bs})),n.d(r,"concatImpl",(function(){return ws})),n.d(r,"expImpl",(function(){return ci})),n.d(r,"expm1Impl",(function(){return hi})),n.d(r,"floorImpl",(function(){return Ri})),n.d(r,"gatherV2Impl",(function(){return Wi})),n.d(r,"greaterImpl",(function(){return Gi})),n.d(r,"lessImpl",(function(){return rc})),n.d(r,"linSpaceImpl",(function(){return uc})),n.d(r,"logImpl",(function(){return dc})),n.d(r,"maxImpl",(function(){return Sc})),n.d(r,"maximumImpl",(function(){return Ec})),n.d(r,"minimumImpl",(function(){return Vc})),n.d(r,"multiplyImpl",(function(){return bi})),n.d(r,"negImpl",(function(){return Jc})),n.d(r,"notEqualImpl",(function(){return ou})),n.d(r,"prodImpl",(function(){return yu})),n.d(r,"rangeImpl",(function(){return Ou})),n.d(r,"rsqrtImpl",(function(){return _u})),n.d(r,"sliceImpl",(function(){return cs})),n.d(r,"squaredDifferenceImpl",(function(){return ol})),n.d(r,"stridedSliceImpl",(function(){return ll})),n.d(r,"subImpl",(function(){return ki})),n.d(r,"tileImpl",(function(){return bl})),n.d(r,"topKImpl",(function(){return yl})),n.d(r,"transposeImpl",(function(){return Mo})),n.d(r,"uniqueImpl",(function(){return Ol}));var a=n(0);let o;function s(){return null==o&&(o=Object(a.kd)().epsilon()),o}class i extends Error{constructor(t){super(t),Object.setPrototypeOf(this,i.prototype)}}class c extends Error{constructor(t){super(t),Object.setPrototypeOf(this,c.prototype)}}class u extends Error{constructor(t){super(t),Object.setPrototypeOf(this,u.prototype)}}class l extends Error{constructor(t){super(t),Object.setPrototypeOf(this,l.prototype)}}class d extends Error{constructor(t){super(t),Object.setPrototypeOf(this,d.prototype)}}Error;function p(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function h(t,e){if(!t)throw new d(e)}function f(t,e){let n=0;for(const r of t)r===e&&n++;return n}function m(t){return 1===t.length?t[0]:t}function b(t){return Array.isArray(t)?t:[t]}function g(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function y(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let v={};function O(t){if(null===t||void 0===t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function x(t){if(null!=t&&"object"===typeof t)if(Array.isArray(t))t.forEach(t=>x(t));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"===typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!==typeof e.value?x(e):t[n]=e.value)}}}function w(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof t){const a=t;let o;if(a in n)o=n[a];else if(a in v)o=v[a];else if(o=e[a],null==o)throw new u("Unknown ".concat(r,": ").concat(t,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(r," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(r," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return o}{const o=t;if(null==o.className||null==o.config)throw new u("".concat(r,": Improper config format: ")+"".concat(JSON.stringify(o),".\n")+"'className' and 'config' must set.");const s=o.className;let i,c;if(s in n?[i,c]=n[s]:s in v?[i,c]=v.className:s in e&&([i,c]=e[s]),null==i)throw new u("Unknown ".concat(r,": ").concat(s,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(r," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(r," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const t={};for(const n of Object.keys(v))t[n]=v[n];for(const a of Object.keys(n))t[a]=n[a];o.config.customObjects=t;const e=Object.assign({},v);for(const a of Object.keys(n))v[a]=n[a];x(o.config);const r=c(i,o.config,n,a);return v=Object.assign({},e),r}{const t=Object.assign({},v);for(const r of Object.keys(n))v[r]=n[r];const e=new i(o.config);return v=Object.assign({},t),e}}}function k(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function j(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function N(t){if(null==t)throw new u("Invalid value in obj: ".concat(JSON.stringify(t)));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function S(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new u("".concat(n," is not a valid ").concat(e,".  Valid values are ").concat(t," or null/undefined."))}function I(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return h(n>=0),h(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function T(t,e){Array.isArray(t)?(a.kf.assert(t.length>0,()=>"".concat(e," is unexpectedly an empty array.")),t.forEach((t,n)=>T(t,"element ".concat(n+1," of ").concat(e)))):a.kf.assert(Number.isInteger(t)&&t>0,()=>"Expected ".concat(e," to be a positive integer, but got ")+"".concat(function t(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>t(e)).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}(t),"."))}function E(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function C(t,e){return Object(a.df)(()=>a.Se(a.We(a.me(t,t),e,!0)))}class A extends a.Ge.Serializable{getConfig(){return{}}}class _ extends A{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a.df)(()=>{const e=C(t,this.axis),n=a.sd(e,0,this.maxValue);return a.me(t,a.Gd(n,a.ed(s(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}_.className="MaxNorm",a.Ge.registerClass(_);class R extends A{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a.df)(()=>a.Gd(t,a.ed(s(),C(t,this.axis))))}getConfig(){return{axis:this.axis}}}R.className="UnitNorm",a.Ge.registerClass(R);class D extends A{apply(t){return a.Ae(t)}}D.className="NonNeg",a.Ge.registerClass(D);class F extends A{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a.df)(()=>{const e=C(t,this.axis),n=a.ed(a.me(this.rate,a.sd(e,this.minValue,this.maxValue)),a.me(1-this.rate,e));return a.me(t,a.Gd(n,a.ed(s(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}F.className="MinMaxNorm",a.Ge.registerClass(F);const M={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function L(t){return O(t)}function z(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return w(t,a.Ge.SerializationMap.getMap().classNameMap,e,"constraint")}function P(t){if(null==t)return null;if("string"===typeof t){return z({className:t in M?M[t]:t,config:{}})}return t instanceof A?t:z(t)}const B=["channelsFirst","channelsLast"],V=["nearest","bilinear"],W=["valid","same","causal"],U=["max","avg"],G=["sum","mul","concat","ave"],H=new Map;function q(t){S(B,"DataFormat",t)}function K(t){S(W,"PaddingMode",t)}function X(t){S(U,"PoolMode",t)}const Y=[];function Q(t,e){Y.push(t);try{const t=e();return Y.pop(),t}catch(n){throw Y.pop(),n}}function J(t){if(!tt(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Y.length?"":Y.join("/")+"/")+t}function Z(t){if(!tt(t))throw new Error("Not a valid tensor name: '"+t+"'");H.has(t)||H.set(t,0);const e=H.get(t);if(H.set(t,H.get(t)+1),e>0){const n="".concat(t,"_").concat(e);return H.set(n,1),n}return t}const $=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tt(t){return!!t.match($)}function et(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let a=e;a<n;++a)r*=t[a];return r}function nt(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(a.af)(t)}function rt(t){return a.je(nt(t)).dataSync()[0]}function at(t){return a.de(nt(t)).dataSync()[0]}function ot(t,e){if(e<t)throw new u("end (".concat(e,") < begin (").concat(t,") is forbidden."));const n=[];for(let r=t;r<e;++r)n.push(r);return n}function st(t,e){return t.asType(e)}function it(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function ct(t){const e=[et(t.shape)];return t.reshape(e)}function ut(t,e,n){return Object(a.df)(()=>{switch(t.rank){case 1:return a.Ke(t,e,n);case 2:return a.Le(t,[e,0],[n,t.shape[1]]);case 3:return a.Me(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return a.Ne(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return a.Je(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return a.Je(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new u("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(t.rank))}})}function lt(t,e,n){return Object(a.df)(()=>{switch(t.rank){case 1:return a.Ke(t,e,n);case 2:return a.Le(t,[0,e],[t.shape[0],n]);case 3:return a.Me(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return a.Ne(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new u("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}})}function dt(t,e,n,r){return Object(a.df)(()=>{switch(t.rank){case 1:return a.Ke(t,e,n);case 2:switch(r){case 1:return ut(t,e,n);case 2:return lt(t,e,n);default:throw new u("The axis is not within the rank of the tensor "+"".concat(r))}case 3:switch(r){case 1:return ut(t,e,n);case 2:return a.Me(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return lt(t,e,n);default:throw new u("The axis is not within the rank of the tensor "+"".concat(r))}case 4:switch(r){case 1:return ut(t,e,n);case 2:return a.Ne(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return a.Ne(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return lt(t,e,n);default:throw new u("The axis is not within the rank of the tensor "+"".concat(r))}default:throw new u("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}})}function pt(t){let e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(e=t[0].rank,n=0!==e?e:0),n===t[0].rank&&(n=-1),a.ud(t,n)}function ht(t,e){switch(t.rank){case 1:return a.vd([t,e]);case 2:return a.wd([t,e],0);case 3:return a.xd([t,e],0);case 4:return a.yd([t,e],0);default:throw new u("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(t.rank))}}function ft(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new u("The length of input n (".concat(e.length,") does not match ")+"the number of dimensions in input x (".concat(t.rank,")"));return a.ef(t,e)}function mt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,o=arguments.length>4?arguments[4]:void 0;return a.we(t,e,n,r,o)}function bt(t,e,n,r){if(t.rank<2||e.rank<2)throw new l("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(t.shape," and y shape = ").concat(e.shape));if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new l("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(t.shape," and ")+" y shape = ".concat(e.shape))}if(2===t.rank&&2===e.rank){const o=!1,s=!1;return a.Qd.matMul({a:t,b:e,transposeA:o,transposeB:s,bias:r?vt(t.rank,r,"channelsLast"):null,activation:n})}{const o=t.shape.slice(),s=o.pop();t=t.reshape([-1,s]);const i=e.shape.slice(),c=i.pop(),u=i.pop(),l=[...i,c],d=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(d).reshape([u,-1]);const p=[...o,...l],h=!1,f=!1;return a.Qd.matMul({a:t,b:e,transposeA:h,transposeB:f,bias:r?vt(t.rank,r,"channelsLast"):null,activation:n}).reshape(p)}}function gt(t,e,n){return Object(a.df)(()=>(e=Array.isArray(e)?Object(a.af)(e,"int32"):e.toInt(),a.Rd(t,e,n)))}function yt(t){return a.me(t,t)}function vt(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new u("Unexpected bias dimensions: ".concat(e.rank)+"; expected it to be 1 or ".concat(t));if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new u("Unsupported input rank by biasAdd: ".concat(e.rank))}function Ot(t,e,n){return Object(a.df)(()=>(null==n&&(n="channelsLast"),q(n),t.add(vt(t.rank,e,n))))}function xt(t,e,n,r){return Object(a.df)(()=>a.Hd(t,e,n,r))}function wt(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return n?t():e()}const kt=["fanIn","fanOut","fanAvg"],jt=["normal","uniform","truncatedNormal"];class Nt extends a.Ge.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class St extends Nt{apply(t,e){return Object(a.pf)(t,e)}}St.className="Zeros",a.Ge.registerClass(St);class It extends Nt{apply(t,e){return Object(a.re)(t,e)}}It.className="Ones",a.Ge.registerClass(It);class Tt extends Nt{constructor(t){if(super(),"object"!==typeof t)throw new u("Expected argument of type ConstantConfig but got ".concat(t));if(void 0===t.value)throw new u("config must have value set but got ".concat(t));this.value=t.value}apply(t,e){return Object(a.df)(()=>Object(a.me)(Object(a.De)(this.value),Object(a.re)(t,e)))}getConfig(){return{value:this.value}}}Tt.className="Constant",a.Ge.registerClass(Tt);class Et extends Nt{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(a.xe)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Et.className="RandomUniform",a.Ge.registerClass(Et);class Ct extends Nt{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new l("randomNormal does not support dType ".concat(e,"."));return mt(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ct.className="RandomNormal",a.Ge.registerClass(Ct);class At extends Nt{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new l("truncatedNormal does not support dType ".concat(e,"."));return Object(a.hf)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}At.className="TruncatedNormal",a.Ge.registerClass(At);class _t extends Nt{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(a.df)(()=>{if(2!==t.length||t[0]!==t[1])throw new u("Identity matrix initializer can only be used for 2D square matrices.");return Object(a.me)(this.gain,Object(a.Nd)(t[0]))})}getConfig(){return{gain:this.gain}}}_t.className="Identity",a.Ge.registerClass(_t);class Rt extends Nt{constructor(t){if(super(),t.scale<0)throw new u("scale must be a positive float. Got: ".concat(t.scale));var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,S(kt,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){S(jt,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t){let e,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(q(r),2===t.length)e=t[0],n=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===r){const r=et(t,2);e=t[1]*r,n=t[0]*r}else if("channelsLast"===r){const r=et(t,0,t.length-2);e=t[t.length-2]*r,n=t[t.length-1]*r}}else{const r=et(t);e=Math.sqrt(r),n=Math.sqrt(r)}return[e,n]}(t),r=n[0],o=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,o):s/=Math.max(1,(r+o)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new l("".concat(this.getClassName()," does not support dType ").concat(e,"."));return Object(a.hf)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return Object(a.xe)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Rt.className="VarianceScaling",a.Ge.registerClass(Rt);class Dt extends Rt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}Dt.className="GlorotUniform",a.Ge.registerClass(Dt);class Ft extends Rt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}Ft.className="GlorotNormal",a.Ge.registerClass(Ft);class Mt extends Rt{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}Mt.className="HeNormal",a.Ge.registerClass(Mt);class Lt extends Rt{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}Lt.className="HeUniform",a.Ge.registerClass(Lt);class zt extends Rt{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}zt.className="LeCunNormal",a.Ge.registerClass(zt);class Pt extends Rt{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}Pt.className="LeCunNormal",a.Ge.registerClass(Pt);class Bt extends Nt{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new l("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(a.df)(()=>{if(t.length<2)throw new l("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than 2000 (".concat(t[0]*t[1],") elements: ")+"Slowness may result.");const e=mt(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=a.Zd.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Object(a.me)(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Bt.className="Orthogonal",a.Ge.registerClass(Bt);const Vt={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Wt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return w(t,a.Ge.SerializationMap.getMap().classNameMap,e,"initializer")}function Ut(t){return O(t)}function Gt(t){if("string"===typeof t){const e=t in Vt?Vt[t]:t;if("GlorotNormal"===e)return new Ft;if("GlorotUniform"===e)return new Dt;if("HeNormal"===e)return new Mt;if("HeUniform"===e)return new Lt;if("LeCunNormal"===e)return new zt;if("LeCunUniform"===e)return new Pt;{const t={};return t.className=e,t.config={},Wt(t)}}return t instanceof Nt?t:Wt(t)}let Ht=0;function qt(){return Ht++}const Kt={};function Xt(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return t in Kt||(Kt[t]=0),Kt[t]+=1,t+Kt[t].toString()}function Yt(t){return Array.isArray(t)&&Array.isArray(t[0])}function Qt(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Jt(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new u("Expected Tensor length to be 1; got ".concat(t.length));e=t[0]}else e=t;return e}function Zt(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new u("Expected exactly 1 Shape; got ".concat(t.length))}return t}function $t(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}class te{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Variable",r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=qt(),n=null==n?"Variable":n,this.originalName=J(n),this.name=Z(this.originalName),this.trainable_=r,this.constraint=o,this.val=a.lf(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function ee(t){return t.map(t=>t.read())}function ne(t){t.forEach(t=>{t[0].write(t[1])})}class re{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ae{constructor(t,e,n,r,a,o,s){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=s,this.id=qt(),null!=o&&(this.originalName=J(o),this.name=Z(this.originalName)),this.rank=e.length}}let oe=0;class se{constructor(t,e){this.callArgs=e,this.id=oe++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ie=0;class ce extends a.Ge.Serializable{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ie++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=g(t)+"_"+Xt(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new c("The layer has never been called "+"and thus has no defined ".concat(e,"."));if(this.inboundNodes.length<=t)throw new u("Asked to get ".concat(e," at node ").concat(t,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[t]}getInputAt(t){return m(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return m(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new i("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new i("Layer ".concat(this.name)+" is not connected, no input to return.");return m(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new i("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new i("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return m(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=b(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=b(this.inputSpec);if(t.length!==e.length)throw new u("Layer ".concat(this.name," expects ").concat(e.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(t));for(let n=0;n<t.length;n++){const r=t[n],a=e[n];if(null==a)continue;const o=r.rank;if(null!=a.ndim&&o!==a.ndim)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(a.ndim,", found ndim=").concat(o));if(null!=a.maxNDim&&o>a.maxNDim)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(a.maxNDim,", found ndim=").concat(o));if(null!=a.minNDim&&o<a.minNDim)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(a.minNDim,", found ndim=").concat(o,"."));if(null!=a.dtype&&r.dtype!==a.dtype)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(a.dtype,", found dtype=").concat(r.dtype,"."));if(a.axes){const t=r.shape;for(const e in a.axes){const r=Number(e),o=a.axes[e],s=r>=0?t[r]:t[t.length+r];if(null!=o&&-1===[o,null].indexOf(s))throw new u("Input ".concat(n," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(r," of input shape to ")+"have value ".concat(o," but got shape ").concat(t,"."))}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const e=a.shape[t],o=r.shape[t];if(null!=e&&null!=o&&e!==o)throw new u("Input ".concat(n," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(a.shape,", ")+"found shape=".concat(r.shape,"."))}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=b(t);let r=!0;for(const o of n)if(!(o instanceof ae)){r=!1;break}let a=!0;for(const o of n)if(o instanceof ae){a=!1;break}if(r===a)throw new u("Arguments to apply() must be all SymbolicTensors or all Tensors");return Q(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of b(t))e.push(n.shape);this.build(m(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let r=this.call(t,e);const a=b(r),o=[];for(let t of a)-1!==n.indexOf(t)&&(t=t.clone()),o.push(t);if(r=m(o),null!=this.activityRegularizer)throw new l("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=b(t);const e=[];for(const n of t)e.push(n.shape);return m(e)}(t),r=this.computeOutputShape(n);let a;const o="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new ae(o,n,this,b(t),e,this.name,r)):new ae(o,r,this,b(t),e,this.name),this.addInboundNode(t,a,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new l("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(t),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(t),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new i("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new i("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new c("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return $t(this.weights)}build(t){this.built=!0}getWeights(){return ee(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(t){Object(a.df)(()=>{const e=this.weights;if(e.length!==t.length)throw new u('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(t.length,", ")+"but the layer was expecting ".concat(e.length," weights. ")+"Provided weights: ".concat(t,"..."));if(0===e.length)return;const n=[],r=ee(e);for(let o=0;o<r.length;++o){const s=r[o],i=e[o],c=t[o];if(!a.kf.arraysEqual(s.shape,c.shape))throw new u("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(c.shape));n.push([i,c])}ne(n)})}addWeight(t,e,n,r,a,o,s){if(-1!==this._addedWeightNames.indexOf(t))throw new u("Duplicate weight name ".concat(t," for layer ").concat(this.name));this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Gt("zeros"));const i=r.apply(e,n),c=new te(i,n,t,o,s);return i.dispose(),null!=a&&this.addLoss(()=>a.apply(c.read())),null==o&&(o=!0),o?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=b(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");e.forEach(t=>{if(null!=t)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")})}return null}return e}addInboundNode(t,e,n,r,a,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=b(t);e=b(e),n=b(n),r=b(r),a=Qt(a),o=Qt(o);const c=[],u=[],l=[];for(const d of i)c.push(d.sourceLayer),u.push(d.nodeIndex),l.push(d.tensorIndex);new se({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:l,inputTensors:i,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:o},s);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}class ue extends ce{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Xt("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new u("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new u("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new u("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new ae(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new se({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new u("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function le(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new u("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new ue({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function de(t){if(null==t)return;const e=[],n=[],r=[];for(const a in t){const o=t[a];if("number"!==typeof o){const t=o;e.push(t.data()),n.push(a),r.push(t)}}if(e.length>0){const o=await Promise.all(e);for(let e=0;e<o.length;++e)t[n[e]]=o[e][0];Object(a.Fd)(r)}}function pe(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}var he;ue.className="InputLayer",a.Ge.registerClass(ue),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(he||(he={}));class fe{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class me{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class be extends fe{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const r in e){const t=e[r];if("number"===typeof t)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+t*n;else{let e;r in this.totals?e=this.totals[r]:this.totals[r]=0;const o=Object(a.df)(()=>Object(a.ed)(this.totals[r],Object(a.me)(t,n)));this.totals[r]=o,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:Object(a.df)(()=>{const t=Object(a.me)(Object(a.Gd)(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),Object(a.Wd)(e[n])}))}}class ge extends fe{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const a in this.history){const r=this.history[a];for(let o=0;o<r.length;++o)if("number"!==typeof r[o]){const s=r[o];t.push(s.data()),e.push(a),n.push(o)}}const r=await Promise.all(t);for(let a=0;a<r.length;++a){this.history[e[a]][n[a]].dispose(),this.history[e[a]][n[a]]=r[a][0]}}}class ye extends fe{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");a.kf.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=a.kf.now();return function(){const o=a.kf.now();return o-r<e||(r=o,n=t(...arguments)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await de(n),r.push(this.yield(t,e,n))),r.push(Object(a.oe)()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await de(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await de(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(a.oe)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await de(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await de(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(a.oe)()):a.kf.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await de(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await de(t),await this.trainEnd(t))}}function ve(t,e){if(null==t&&(t={}),t instanceof fe)return[t];if(Array.isArray(t)&&t[0]instanceof fe)return t;return b(t).map(t=>new ye(t,e))}class Oe{constructor(){}static registerCallbackConstructor(t,e){a.kf.assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(t)),Oe.checkForDuplicate(e),null==Oe.constructors[t]&&(Oe.constructors[t]=[]),Oe.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Oe.constructors){Oe.constructors[+e].forEach(e=>{if(e===t)throw new u("Duplicate callback constructor.")})}}static clear(){Oe.constructors={}}static createCallbacks(t){const e=[];for(const n in Oe.constructors){const r=+n;t>=r&&e.push(...Oe.constructors[r])}return e.map(t=>new t)}}function xe(t,e,n,r,a,o,s,i,c){const u=new ge,l=[new be,...Oe.createCallbacks(e)];null!=t&&l.push(...t),l.push(u);const d=new me(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:o,batchSize:s,verbose:e,doValidation:i,metrics:c}),{callbackList:d,history:u}}function we(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return w(t,a.Ge.SerializationMap.getMap().classNameMap,e,"layer",n)}function ke(t,e){return Object(a.df)(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=a.We(yt(t),e,!0),r=a.Od(n.shape,s()),o=a.Se(a.ge(n,r));return a.Gd(t,o)})}function je(t,e){return Object(a.df)(()=>a.he(yt(a.Ve(e,t)),-1))}function Ne(t,e){return Object(a.df)(()=>a.he(a.dd(a.Ve(e,t)),-1))}function Se(t,e){return Object(a.df)(()=>{const n=a.Ve(t,e),r=a.sd(a.dd(t),s(),Number.MAX_VALUE),o=a.dd(a.Gd(n,r));return a.me(100,a.he(o,-1))})}function Ie(t,e){return Object(a.df)(()=>{const n=a.sd(e,s(),Number.MAX_VALUE),r=a.ae(a.ed(1,n)),o=a.sd(t,s(),Number.MAX_VALUE),i=a.ae(a.ed(1,o));return a.he(yt(a.Ve(r,i)),-1)})}function Te(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Object(a.df)(()=>{if(n)e=a.Pe(e);else{const t=a.We(e,e.shape.length-1,!0);e=a.Gd(e,t)}return e=a.sd(e,s(),1-s()),a.ne(a.We(a.me(t.toFloat(),a.ae(e)),e.shape.length-1))})}function Ee(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Object(a.df)(()=>{const r=a.Pd(ct(t)).toInt(),o=(e=a.sd(e,s(),1-s())).shape;return Te(a.qe(r,o[o.length-1]).reshape(o),e,n)})}function Ce(t,e){return Object(a.df)(()=>{let n;return n=a.sd(e,s(),1-s()),n=a.ae(a.Gd(n,a.Ve(1,n))),a.he(function(t,e){if(!a.kf.arraysEqual(t.shape,e.shape))throw new u("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(t.shape)," and ").concat(JSON.stringify(e.shape)));return Object(a.df)(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}(t,n),-1)})}function Ae(t,e){return Object(a.df)(()=>{const n=a.sd(t,s(),1),r=a.sd(e,s(),1);return a.We(a.me(t,a.ae(a.Gd(n,r))),-1)})}function _e(t,e){return Object(a.df)(()=>{const n=ke(t,-1),r=ke(e,-1),o=a.me(n,r);return a.ne(a.We(o,-1))})}Oe.constructors={};const Re={meanSquaredError:je,meanAbsoluteError:Ne,meanAbsolutePercentageError:Se,meanSquaredLogarithmicError:Ie,squaredHinge:function(t,e){return Object(a.df)(()=>{const n=a.ge(0,a.Ve(1,a.me(t,e)));return a.he(yt(n),-1)})},hinge:function(t,e){return Object(a.df)(()=>{const n=a.ge(0,a.Ve(1,a.me(t,e)));return a.he(n,-1)})},categoricalHinge:function(t,e){return Object(a.df)(()=>{const n=a.We(a.me(t,e),-1),r=a.de(a.me(a.Ve(1,t),e),-1);return a.ge(0,a.ed(1,a.Ve(r,n)))})},logcosh:function(t,e){return Object(a.df)(()=>{const n=Math.log(2),r=a.Ve(e,t),o=a.Ve(a.ed(r,a.Qe(a.me(-2,r))),n);return a.he(o,-1)})},categoricalCrossentropy:Te,sparseCategoricalCrossentropy:Ee,binaryCrossentropy:Ce,kullbackLeiblerDivergence:Ae,poisson:function(t,e){return Object(a.df)(()=>{const n=a.ae(a.ed(s(),e));return a.he(a.Ve(e,a.me(t,n)),-1)})},cosineProximity:_e};function De(t){if("string"===typeof t){if(t in Re)return Re[t];let e="Unknown loss ".concat(t);throw t.toLowerCase().includes("softmaxcrossentropy")&&(e="Unknown loss ".concat(t,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new u(e)}return t}function Fe(t,e){return Object(a.df)(()=>{const n=a.me(.5,a.se(e)),r=st(a.Sd(e,n),t.dtype);return a.he(a.Ld(t,r),-1)})}function Me(t,e){return Object(a.df)(()=>st(a.Ld(a.hd(t,-1),a.hd(e,-1)),"float32"))}function Le(t,e){return Object(a.df)(()=>a.ce(t.equal(1),e.equal(1)).sum().cast("float32"))}function ze(t,e){return Object(a.df)(()=>{const n=Le(t,e),r=function(t,e){return Object(a.df)(()=>a.ce(t.equal(0),e.equal(1)).sum().cast("float32"))}(t,e),o=n.add(r);return a.of(a.Sd(o,0),n.div(o),0).cast("float32")})}function Pe(t,e){return Ce(t,e)}function Be(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),a.Ld(t,e).asType("float32")}const Ve=Te,We=Ee,Ue={binaryAccuracy:Fe,categoricalAccuracy:Me,precision:ze,categoricalCrossentropy:Ve,sparseCategoricalCrossentropy:We,mse:je,MSE:je,mae:Ne,MAE:Ne,mape:Se,MAPE:Se,cosine:_e};function Ge(t){if("string"===typeof t&&t in Ue)return Ue[t];if("string"!==typeof t&&null!=t)return t;throw new u("Unknown metric ".concat(t))}function He(t){if(h(null!==t,"Unknown LossOrMetricFn ".concat(t)),"string"===typeof t)return t;{let e;for(const n of Object.keys(Re))if(Re[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Ue))if(Ue[n]===t){e=n;break}return void 0!==e?e:t.name}}function qe(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Ke(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn('User-defined metadata of model "'.concat(e,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(1048576,"."))}}function Ke(t){if(null===t)return!0;if("object"===typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!==typeof n)return!1;if(!Ke(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Ke(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Xe(t){let e;return e=null!=t.collectedTrainableWeights?$t(t.collectedTrainableWeights):$t(t.trainableWeights),e}function Ye(t){let e=!0;const n=[],r=[];for(const a in t.nodesByDepth)n.push(t.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){e=!1;break}r.push(...a)}if(e)for(const a of t.layers){let t=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}function Qe(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let a=0;a<t.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=t[a],r=r.slice(0,e[a]),r+=" ".repeat(e[a]-r.length);n(r)}function Je(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(s){r="multiple"}const a=t.name,o=t.getClassName();Qe(["".concat(a," (").concat(o,")"),r,t.countParams().toString()],e,n)}function Ze(t,e,n,r){let a;try{a=JSON.stringify(t.outputShape)}catch(u){a="multiple"}const o=[];for(const l of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let t=0;t<l.inboundLayers.length;++t){const e=l.inboundLayers[t].name,n=l.nodeIndices[t],r=l.tensorIndices[t];o.push("".concat(e,"[").concat(n,"][").concat(r,"]"))}const s=t.name,i=t.getClassName(),c=0===o.length?"":o[0];Qe(["".concat(s," (").concat(i,")"),a,t.countParams().toString(),c],e,r);for(let l=1;l<o.length;++l)Qe(["","","",o[l]],e,r)}function $e(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function tn(t,e){if(null===t)return null;if("string"===typeof t)return y(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let a=0;a<r;++a){const r=t[a];$e(e,a,r)?n.push(r):n.push(tn(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"===typeof r)e[n]=r;else{const t=y(n);e[t]=tn(r,t)}}return e}}class en{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof en)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new u("Duplicate key: name=".concat(t.name,", id=").concat(t.id));return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(a.rd)(e,t.dtype)}catch(n){throw new u("The dtype of the feed (".concat(e.dtype,") can not be cast to the dtype ")+"of the key '".concat(t.name,"' (").concat(t.dtype,")."))}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ae){if(null==this.id2Value[t.id])throw new u("Nonexistent key: ".concat(t.name));return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new u("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Value[e]}}getMask(t){if(t instanceof ae){if(null==this.id2Value[t.id])throw new u("Nonexistent key: ".concat(t.name));return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new u("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(a.Fd)(this.id2Mask)}}const nn={},rn={};function an(t,e,n,r){const o=null!=n&&n.training,s=Array.isArray(t),i=s?t:[t],c=i.map(t=>t.name),u=[],l=e.names();for(const a of c)-1!==l.indexOf(a)?u.push(e.getValue(a)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=c.join(",")+"|"+e.names().join(",");let p,h;if(null==nn[d]){const t=function(t,e){a.kf.assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const a=sn(t[0],e);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const o of t){const{sorted:t,recipientMap:s}=sn(o,e);for(const e of t)a.has(e.name)||(n.push(e),a.add(e.name));for(const e in s)null==r[e]&&(r[e]=new Set),s[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:on(r)}}(i,e);p=t.sorted,h=t.recipientCounts,nn[d]=p,rn[d]=h}p=nn[d],h={},o||Object.assign(h,rn[d]);const f=new en(e);for(let m=0;m<p.length;++m){if(null!=r){const t=Object(a.ie)().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=p[m],s=t.sourceLayer;if(s instanceof ue)continue;const i=[],l=[],d=[];let g=!1;for(const n of t.inputs){const t=f.getValue(n),r=f.getMask(n);i.push(t),l.push(r),null!=r&&(g=!0),o||(h[n.name]--,0!==h[n.name]||e.hasKey(n)||-1!==c.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||d.push(t))}g&&((n=n||{}).mask=l[0]);const y=b(s.apply(i,n));let v=null;s.supportsMasking&&(v=s.computeMask(i,l));const O=cn(t),x=Array.isArray(O)?O:[O];for(let e=0;e<x.length;++e){f.hasKey(x[e])||f.add(x[e],y[e],Array.isArray(v)?v[0]:v);const t=c.indexOf(x[e].name);-1!==t&&(u[t]=y[e])}o||Object(a.Fd)(d)}return f.disposeMasks(),s?u:u[0]}function on(t){const e={};for(const n in t)e[n]=t[n].size;return e}function sn(t,e){const n=new Set,r=[],a={};for(const i of e.names())n.add(i);const o=[],s=[];for(o.push(t);o.length>0;){const t=o[o.length-1];if(n.has(t.name)){o.pop();continue}const e=s[s.length-1]===o.length-1;if(0===t.inputs.length||e)o.pop(),r.push(t),n.add(t.name),e&&s.pop();else{s.push(o.length-1);for(const e of t.inputs)null==a[e.name]&&(a[e.name]=new Set),a[e.name].add(t.name),n.has(e.name)||o.push(e)}}return{sorted:r,recipientMap:a}}function cn(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class un extends ce{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Xt(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],j(this.inputs).length!==this.inputs.length)throw new u("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map(t=>t.name)));j(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map(t=>t.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const c of this.outputs){const t=c.sourceLayer,e=c.nodeIndex,n=c.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const c of this.inputs){const t=c.sourceLayer,e=c.nodeIndex,n=c.tensorIndex;h(0===e,"input layer has >1 nodes"),h(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let c=0;c<this.inputLayers.length;c++){const e=this.inputLayers[c];if(!(e instanceof ue))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(t.inputs,". ")+"Input ".concat(c," (0-based) originates ")+"from layer type ".concat(e.getClassName(),"."));this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const c of this.outputLayers)this.outputNames.push(c.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},a={},o={},s=[],i=(t,e,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=t.sourceLayer,a=t.nodeIndex,u=t.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new c("The tensor ".concat(t.name,' at layer "').concat(r.name,'" ')+"is part of a cycle.");if(-1!==e.indexOf(l))return;this.containerNodes.add(un.nodeKey(r,a)),r.id in o||(o[r.id]=Object.keys(o).length),-1===n.indexOf(l)&&n.push(l);const d=l.inboundLayers.length;for(let o=0;o<d;o++){const t=l.inputTensors[o],r=l.inboundLayers[o],a=l.nodeIndices[o],s=l.tensorIndices[o];i(t,e,n,r,a,s)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);s.push(l)},l=[],d=[];for(const c of this.outputs)i(c,l,d);const p=s.slice().reverse();for(const c of p){n[c.id]=c,c.id in e||(e[c.id]=0);let t=e[c.id];const o=null==r[c.outboundLayer.id]?0:r[c.outboundLayer.id];t=Math.max(t,o),r[c.outboundLayer.id]=t,a[c.outboundLayer.id]=c.outboundLayer,e[c.id]=t;for(let r=0;r<c.inboundLayers.length;r++){const a=c.inboundLayers[r],o=c.nodeIndices[r],s=a.inboundNodes[o],i=null==e[s.id]?0:e[s.id];e[s.id]=Math.max(t+1,i),n[s.id]=s}}const f={};for(const c in e){const t=e[c];t in f||(f[t]=[]),f[t].push(n[c])}const m={};for(const c in r){const t=r[c];t in m||(m[t]=[]),m[t].push(a[c])}let b=Object.keys(m).map(t=>parseInt(t,10)).sort(k);this.layers=[];for(const c of b){const t=m[c];t.sort((t,e)=>{const n=o[t.id],r=o[e.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof un&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=m,b=Object.keys(f).map(t=>parseInt(t,10)).sort(k);const g=this.inputs.slice(),y=[];for(const u of b)for(const t of f[u]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===g.indexOf(n))throw new c("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(e.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(y));for(const e of t.outputTensors)g.push(e);y.push(e.name)}}this.nodesByDepth=f;const v=this.layers.map(t=>t.name);for(const u of v){const t=v.filter(t=>t===u).length;if(1!==t)throw new c('The name "'.concat(u,'" is used ').concat(t," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(v))}this.outboundNodes=[],this.inboundNodes=[],new se({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new u("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let r=0;for(const o of this.layers)for(const t of o.weights){if(null!=n[t.originalName])throw new u("Duplicate weight name: ".concat(t.originalName));n[t.originalName]=t,r++}const a=[];for(const o in t){let r=o;if(null==n[o]){const t=o.split("/");r=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[r])a.push([n[r],t[o]]);else if(e)throw new u("Provided weight data has no target variable: ".concat(o));delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new u("".concat(t.length," of ").concat(r," weights are not set: ")+"".concat(t))}ne(a)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers ".concat("2.8.6"),e.backend="TensorFlow.js",e}toJSON(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=function t(e,n){if(null===e||void 0===e)return null;if("string"===typeof e)return g(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const r=[],a=e.length;for(let o=0;o<a;++o){const a=e[o];$e(n,o,a)?r.push(a):r.push(t(a,n))}return r}{const n={};for(const r of Object.keys(e)){const a=e[r],o=g(r);n[o]="name"!==r&&"className"!==r||"string"!==typeof a?t(a,r):a}return n}}(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(a.df)(()=>{t=b(t);const n=new en;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return an(this.outputs,n,e)})}computeMask(t,e){return Object(a.df)(()=>{let n;return t=b(t),n=null==e?p(null,t.length):b(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=Qt(t);if(e.length!==this.inputLayers.length)throw new u("Invalid inputShape argument ".concat(t,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let s=0;s<e.length;s++){const t=this.inputLayers[s],r=e[s];n[t.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(k);if(r.length>1)for(const s of r){const t=this.nodesByDepth[s];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const r=[];for(let s=0;s<e.inboundLayers.length;s++){const t=e.inboundLayers[s],a=e.nodeIndices[s],o=e.tensorIndices[s],i=n["".concat(t.name,"_").concat(a,"_").concat(o)];r.push(i)}const a=Qt(t.computeOutputShape(m(r))),o=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n["".concat(t.name,"_").concat(o,"_").concat(e)]=a[e]}}}const a=[],o=[];for(let s=0;s<this.outputLayers.length;s++){const t=this.outputLayers[s],e=this.outputLayersNodeIndices[s],n=this.outputLayersTensorIndices[s],r="".concat(t.name,"_").concat(e,"_").concat(n);o.push(r)}for(let s=0;s<o.length;s++){const t=o[s];h(t in n),a.push(n[t])}return m(a)}runInternalGraph(t,e){null==e&&(e=p(null,t.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],a=t[i],o=e[i];n[r.id]=[a,o]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(k);for(const i of r){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,o=new Array;for(const e of r)e.id in n&&o.push(n[e.id]);if(o.length===r.length){let r,s,i,c,u={};if(null!=e.callArgs&&(u=e.callArgs),1===o.length){const[e,n]=o[0];null==u.mask&&(u.mask=n),i=b(t.call(e,u)),c=b(t.computeMask(e,n)),r=[e],s=[n]}else r=o.map(t=>t[0]),s=o.map(t=>t[1]),null==u.mask&&(u.mask=s),i=b(t.call(r,u)),c=b(t.computeMask(r,s));if(t.activityRegularizer)throw new l("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<a.length;++t){const e=a[t],r=i[t],o=c[t];n[e.id]=[r,o]}}}}const a=[],o=[],s=[];for(const i of this.outputs){h(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[t,e]=n[i.id];s.push(t.shape),a.push(t),o.push(e)}return[a,o,s]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof un?1:0;for(let t=0;t<r.inboundNodes.length;t++){const a=un.nodeKey(r,t);this.containerNodes.has(a)&&(e[a]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new u("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}if(null==t)throw new u("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new u("No such layer: ".concat(t))}calculateLosses(){return Object(a.df)(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=un.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const t=s.getClassName(),r=s.getConfig(),a=[];for(let n=0;n<s.inboundNodes.length;n++){const t=s.inboundNodes[n],r=un.nodeKey(s,n);let i={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),i=t.callArgs}catch(o){console.warn("Layer ".concat(s.name," was passed ")+"non-serializable keyword arguments: "+"".concat(t.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const a=t.inboundLayers[r],o=t.nodeIndices[r],s=t.tensorIndices[r];let c=e[un.nodeKey(a,o)];null==c&&(c=0),n.push([a.name,c,s,i])}a.push(n)}}}const i={};i.name=s.name,i.className=t,i.config=r,i.inboundNodes=a,n.push(i)}t.layers=n;const r=[];for(let s=0;s<this.inputLayers.length;s++){const t=this.inputLayers[s],n=this.inputLayersNodeIndices[s],a=un.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let o=e[a];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[s];r.push([t.name,o,i])}t.inputLayers=r;const a=[];for(let s=0;s<this.outputLayers.length;s++){const t=this.outputLayers[s],n=this.outputLayersNodeIndices[s],r=un.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let o=e[r];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[s];a.push([t.name,o,i])}return t.outputLayers=a,t}static fromConfig(t,e){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={},a={};function o(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function s(t,e){const n=[];let a;for(const s of e){const i=s[0],c=s[1],u=s[2];if(a=null==s[3]?{}:s[3],!(i in r))return void o(t,e);const l=r[i];if(l.inboundNodes.length<=c)return void o(t,e);const d=l.inboundNodes[c];n.push(d.outputTensors[u])}n.length>0&&t.apply(m(n),a)}function i(t){const a=t.name,s=we(t,null!=e.customObjects?e.customObjects:{});s.setFastWeightInitDuringBuild(n),r[a]=s;t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new u("Corrupted configuration, expected array for nodeData: ".concat(t));o(s,t)})}const c=e.name,l=e.layers;for(const u of l)i(u);for(;!N(a);)for(const t of l){const e=r[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)s(e,n)}}const d=[],p=[],f=e.inputLayers;for(const u of f){const t=u[0],e=u[1],n=u[2];h(t in r);const a=r[t].inboundNodes[e].outputTensors;d.push(a[n])}const b=e.outputLayers;for(const u of b){const t=u[0],e=u[1],n=u[2];h(t in r);const a=r[t].inboundNodes[e].outputTensors;p.push(a[n])}return new t({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new u("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(a.df)(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function ln(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error("Provided ".concat(n," is an array of ").concat(t.length," ")+"element(s), but the model has ".concat(r," outputs. ")+"Make sure a set of weights is provided for each model output.");return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error("The model has multiple (".concat(r,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(r," elements or an object with ").concat(e," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(t)))}function dn(t,e){return ln(t,e,"classWeight")}async function pn(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(a.df)(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(t.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(t.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")}),r=Array.from(await e.data());Object(a.Fd)(e);const o=[];return r.forEach(t=>{if(null==n[t])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(t," exists in the data but not in ")+"classWeight");o.push(n[t])}),Object(a.af)(o,"float32")}return null}function hn(t,e){return Object(a.me)(t,e)}function fn(t,e){let n,r;const o=e;n=o.xs,r=o.ys,a.kf.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(e));const s=mn("input",t.inputNames,n),i=mn("output",t.outputNames,r),c=s[0].shape[0];a.kf.assert(s.length===t.inputs.length,()=>"LayersModel has ".concat(t.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(t.inputNames),")")),a.kf.assert(i.length===t.outputs.length,()=>"LayersModel has ".concat(t.outputs.length," outputs, but the dataset ")+"provides ".concat(i.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(t.outputNames),")"));for(let u=0;u<s.length;u++)a.kf.assert(s[u].shape[0]===c,()=>"Batch size mismatch: input "+"".concat(t.inputNames[u]," has ").concat(s[u].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(t.inputNames[0],"."));for(let u=0;u<i.length;u++)a.kf.assert(i[u].shape[0]===c,()=>"Batch size mismatch: output "+"".concat(t.outputNames[u]," has ").concat(i[u].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(t.inputNames[0],"."));return{xs:s,ys:i}}function mn(t,e,n){if(n instanceof a.Tc)return[n];if(Array.isArray(n))return a.kf.assert(n.length===e.length,()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(e.length," to match the ").concat(t," keys ").concat(e,".")),n;{const r=[];for(const a of e){if(null==n[a])throw new u("The feature data generated by the dataset lacks the required "+"".concat(t," key '").concat(a,"'."));r.push(n[a])}return r}}async function bn(t,e,n){const r=null!=n.batchesPerEpoch;if(a.kf.assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),a.kf.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),a.kf.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs)),a.kf.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch)),a.kf.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const o=null!=n.validationData;let s,i;if(o)if(gn(n.validationData))a.kf.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches));else{const t=function(t){if(3===t.length)throw new l("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);s=t.xs,i=t.ys}const c=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let d;d=o?u.slice().concat(u.map(t=>"val_"+t)):u.slice();const p=ve(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:f,history:m}=xe(p,h,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,o,d);f.setModel(t),t.history=m,await f.onTrainBegin(),t.stopTraining_=!1;let g=null==n.initialEpoch?0:n.initialEpoch,y=await e.iterator();for(;g<n.epochs;){const l={};await f.onEpochBegin(g);let d=0,p=0;for(r||(y=await e.iterator());!r||d<n.batchesPerEpoch;){const e=await y.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(d," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:o}=fn(t,e.value),s={};s.batch=p,s.size=r[0].shape[0],await f.onBatchBegin(p,s);const i=[];if(null!=n.classWeight){const e=dn(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await pn(o[t],null,e[t]))}const l=r.concat(o).concat(i),h=c(l);a.Fd(l);for(let t=0;t<u.length;++t){const e=u[t],n=h[t];s[e]=n,a.Wd(n)}await f.onBatchEnd(p,s),pe(s),p++,d++}if(r?d>=n.batchesPerEpoch:e.done){if(o){let e;e=gn(n.validationData)?b(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):b(t.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l["val_".concat(t.metricsNames[n])]=e[n]}break}if(t.stopTraining_)break}if(await f.onEpochEnd(g,l),g++,t.stopTraining_)break}return await f.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function gn(t){return"function"===typeof t.iterator}function yn(t){a.kf.assert(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got ".concat(t))}function vn(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>ut(t,e,n-e)):ut(t,e,n-e)}function On(t,e){return a.df(()=>null==t?null:Array.isArray(t)?t.map(t=>On(t,e)):gt(t,"int32"===e.dtype?e:e.toInt()))}function xn(t,e){const n=[];let r=0,a=null;for(;r<t;)a=r+e,a>=t&&(a=t),n.push([r,a]),r=a;return n}async function wn(t,e,n,r,o,s,i,c,d,p,h,f,m,b,g){null==o&&(o=32),null==s&&(s=1),null==h&&(h=!0),null==m&&(m=0);let y=!1;if(null!=d&&null!=p&&(y=!0),null!=g&&(y=!0,null==b))throw new u("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const v=t.checkNumSamples(n,o,b,"steps_per_epoch");let O;null!=v&&(O=ot(0,v)),null==i&&(i=1);const{callbackList:x,history:w}=xe(c,i,s,m,v,b,o,y,f);x.setModel(t),t.history=w,await x.onTrainBegin(),t.stopTraining_=!1;for(let u=m;u<s;++u){await x.onEpochBegin(u);const s={};if(null!=b)throw new l("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new l("batch shuffling is not implemneted yet");h&&a.kf.shuffle(O);const i=Object(a.af)(O),c=xn(v,o);for(let u=0;u<c.length;++u){const l={};if(await x.onBatchBegin(u,l),a.df(()=>{const h=c[u][0],f=c[u][1],m=ut(i,h,f-h);l.batch=u,l.size=f-h;const b=On(n,m),g=e(b);for(let t=0;t<r.length;++t){const e=r[t],n=g[t];l[e]=n,a.Wd(n)}if(u===c.length-1&&y){const e=t.testLoop(d,p,o);for(let t=0;t<r.length;++t){const n=r[t],o=e[t];a.Wd(o),s["val_"+n]=o}}}),await x.onBatchEnd(u,l),pe(l),t.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(u,s),t.stopTraining_)break}return await x.onTrainEnd(),await t.history.syncData(),t.history}function kn(t){const e=[];t instanceof a.Tc&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(it(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function jn(t,e){if(null==t)return;const n=[];if(e instanceof a.Tc)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const a in e){const t=e[a];n.push(t.id)}const r=[];if(t instanceof a.Tc)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const a in t){const e=t[a];-1===n.indexOf(e.id)&&r.push(e)}r.forEach(t=>{t.isDisposed||t.dispose()})}function Nn(t){return Array.isArray(t)}function Sn(t){return!function(t){return t instanceof a.Tc}(t)&&!Nn(t)}function In(t,e,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==e||0===e.length){if(null!=t){let e=!1;if(Nn(t)&&t.length>0)e=!0;else if(Sn(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new u("Error when checking model ".concat(o," expected no data, ")+"but got ".concat(t))}return[]}if(null==t)return e.map(t=>null);if(Sn(t)){t=t,r=[];for(const n of e){if(null==t[n])throw new u('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(e));r.push(t[n])}}else if(Nn(t)){if((t=t).length!==e.length)throw new u("Error when checking model ".concat(o,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(e.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(t));r=t}else{if(t=t,e.length>1)throw new u("The model ".concat(o," expects ").concat(e.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(t.shape));r=[t]}if(r=kn(r),null!=n)for(let s=0;s<e.length;++s){if(null==n[s])continue;const t=r[s];if(t.shape.length!==n[s].length)throw new u("Error when checking ".concat(o,": expected ").concat(e[s]," ")+"to have ".concat(n[s].length," dimension(s). but got array with ")+"shape ".concat(t.shape));for(let r=0;r<n[s].length;++r){if(0===r&&!a)continue;const i=t.shape[r],c=n[s][r];if(null!=c&&c>=0&&i!==c)throw new u("Error when checking ".concat(o,": expected ").concat(e[s]," ")+"to have shape [".concat(n[s],"], but got array with shape ")+"[".concat(t.shape,"]."))}}return r}function Tn(t,e,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(t)){if(t.length!==e.length)throw new u("Error when checking model ".concat(o,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(e.length," Tensor(s),")+" but instead got ".concat(t.length," Tensors(s)."));r=t}else{if(e.length>1)throw new u("The model expects ".concat(e.length," ").concat(o," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(t.shape),"."));r=[t]}if(null!=n)for(let s=0;s<e.length;++s){if(null==n[s])continue;const t=r[s];if(t.shape.length!==n[s].length)throw new u("Error when checking ".concat(o,": expected ").concat(e[s]," ")+"to have ".concat(n[s].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(t.shape)));for(let r=0;r<n[s].length;++r){if(0===r&&!a)continue;const i=t.shape[r],c=n[s][r];if(null!=c&&c!==i)throw new u("Error when checking ".concat(o,": expected ")+"".concat(e[s]," to have shape ").concat(JSON.stringify(n[s])," but ")+"got array with shape ".concat(JSON.stringify(t.shape),"."))}}}class En extends un{constructor(t){super(t),this.isTraining=!1}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new u("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const a=Ye(t),o=["Layer (type)","Output shape","Param #"];let s;if(a?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!a){o.push("Receives inputs"),s=[];for(const e in t.nodesByDepth)s.push(...t.nodesByDepth[e])}r("_".repeat(e)),Qe(o,n,r),r("=".repeat(e));const i=t.layers;for(let l=0;l<i.length;++l)a?Je(i[l],n,r):Ze(i[l],n,s,r),r((l===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const c=Xe(t),u=$t(t.nonTrainableWeights);r("Total params: ".concat(c+u)),r("Trainable params: ".concat(c)),r("Non-trainable params: ".concat(u)),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>a.ff.adagrad(.01),Adadelta:()=>a.ff.adadelta(1,.95,s()),Adam:()=>a.ff.adam(.001,.9,.999,s()),Adamax:()=>a.ff.adamax(.002,.9,.999,s(),0),RMSProp:()=>a.ff.rmsprop(.001,.9,0,s()),SGD:()=>a.ff.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new u("Unknown Optimizer ".concat(t))}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof a.cc))throw new u("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new u("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(t.loss,"."));const n=t.loss;e=n.map(t=>De(t))}else{const n=De(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new u('Unknown entry in loss dictionary: "'.concat(e,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==t.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),e.push(De(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const t=this.internalOutputShapes[a],e=this.outputNames[a];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Q("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(t));n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),o=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Q("metric",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,a;for(const s of e){if("string"===typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){const e=this.internalOutputShapes[t];let o;1===e[e.length-1]||this.lossFunctions[t]===Ce?-1!==["accuracy","acc"].indexOf(s)?r=Fe:-1!==["crossentropy","ce"].indexOf(s)&&(r=Pe):this.lossFunctions[t]===Ee?-1!==["accuracy","acc"].indexOf(s)?r=Be:-1!==["crossentropy","ce"].indexOf(s)&&(r=We):-1!==["accuracy","acc"].indexOf(s)?r=Me:-1!==["crossentropy","ce"].indexOf(s)&&(r=Ve),-1!==["accuracy","acc"].indexOf(s)?o="acc":-1!==["crossentropy","ce"].indexOf(s)&&(o="ce"),a=r,n=""+o}else{const t=Ge(s);a=t,n=""+He(s)}let e;Q(n,()=>{e=a}),o(t,n,e)}})(r[t])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null==n.batchSize?32:n.batchSize;yn(r);const a=this.standardizeUserDataXY(t,e,!0,r);try{const o=a[0].concat(a[1]);this.makeTestFunction();const s=this.testFunction;return m(this.testLoop(s,o,r,n.verbose,n.steps))}finally{jn(a[0],t),jn(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,o=t.testFunction;let s=[];if(n.verbose>0)throw new l("Verbose mode is not implemented yet.");a.kf.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches)));const i="function"===typeof e.next?e:await e.iterator();let c=0,u=0;for(;!r||u<n.batches;){const e=await i.next();if(s=a.df(()=>{if(e.value){const{xs:n,ys:r}=fn(t,e.value),i=n.concat(r),l=a.df(()=>o(i));if(a.Fd(i),0===u)for(let t=0;t<l.length;++t)s.push(Object(a.De)(0));const d=i[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=s[t];s[t]=a.df(()=>a.ed(s[t],a.me(d,e))),u>0&&a.Fd(n)}a.Fd(l),c+=d,++u}return s}),e.done){r&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<s.length;++l){const t=s[l];s[l]=a.Gd(s[l],c),a.Fd(t)}return m(s)}(this,t,e)}checkNumSamples(t,e,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=e)throw new u("If ".concat(a," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(e))}else{if(null==t)throw new u("Either the input data should have a defined shape, or "+"".concat(a," shoud be specified."));r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new u("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],o=this.retrieveSymbolicTensors(r),s=new en;if(t instanceof a.Tc&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new u("The number of inputs provided (".concat(t.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const a of this.inputs){const e=t[a.name];if(null==e)throw new u("No value is provided for the model's input ".concat(a.name));s.add(a,e)}const i=an(o,s);return n?i:i[0]}retrieveSymbolicTensors(t){const e=p(null,t.length);let n=t.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],o=a.map(t=>t.name);for(let r=0;r<t.length;++r){const s=o.indexOf(t[r]);if(-1!==s&&(e[r]=a[s],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new u("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return e}predictLoop(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return a.df(()=>{const r=this.checkNumSamples(t);if(n)throw new l("Verbose predictLoop() is not implemented yet.");const o=xn(r,e),s=this.outputs.map(t=>[]);for(let e=0;e<o.length;++e){a.df(()=>{const n=o[e][0],r=o[e][1],a=vn(t,n,r),s=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)s.push({key:this.inputs[t],value:a[t]});else s.push({key:this.inputs[0],value:a});const i=new en(s);return an(this.outputs,i)}).forEach((t,e)=>s[e].push(t))}return m(s.map(t=>a.ud(t,0)))})}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=kn(t);Tn(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return yn(r),this.predictLoop(n,r)}finally{jn(n,t)}}predictOnBatch(t){Tn(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new c("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let a=0;a<this.feedOutputShapes.length;++a){const t=this.feedOutputShapes[a];this.feedLossFns[a]===Ee?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(t,e,n){const r=j(t.map(t=>t.shape[0]));r.sort();const o=j(e.map(t=>t.shape[0]));if(o.sort(),r.length>1)throw new u("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map(t=>t.shape))));if(o.length>1)throw new u("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map(t=>t.shape))));if(r.length>0&&o.length>0&&!a.kf.arraysEqual(r,o))throw new u("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(r[0]," input sample(s) and ").concat(o[0]," target ")+"sample(s).")}(t=In(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=In(e,this.feedOutputNames,r,!1,"target")),function(t,e,n){const r=[je,Ce,Te];for(let a=0;a<t.length;++a){const o=t[a],s=e[a],i=n[a];if(null!=s){if(s===Te&&1===o.shape[o.shape.length-1])throw new u("You are passing a target array of shape ".concat(o.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==r.indexOf(s)){const t=o.shape.slice(1),e=i.slice(1);for(let n=0;n<t.length;++n){const r=t[n],a=e[n];if(null!=a&&r!==a)throw new u("A target Tensor with shape ".concat(o.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&t[0].shape[0]%n!==0)throw new u("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(t[0].shape[0]," sample(s)."));return[t,e]}async standardizeUserData(t,e,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],o=arguments.length>5?arguments[5]:void 0;const[s,i]=this.standardizeUserDataXY(t,e,a,o);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=r){const t=dn(r,this.outputNames);c=[];for(let e=0;e<t.length;++e)c.push(await pn(i[e],null,t[e]))}return[s,i,c]}testLoop(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4?arguments[4]:void 0;return a.df(()=>{const s=this.checkNumSamples(e,n,o,"steps"),i=[];if(r>0)throw new l("Verbose mode is not implemented yet.");if(null!=o)throw new l("steps mode in testLoop() is not implemented yet");{const r=xn(s,n),o=Object(a.af)(ot(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],c=r[n][1],u=ut(o,s,c-s),l=On(e,u),d=t(l);if(0===n)for(let t=0;t<d.length;++t)i.push(Object(a.De)(0));for(let t=0;t<d.length;++t){const e=d[t];i[t]=a.ed(i[t],a.me(c-s,e))}}for(let t=0;t<i.length;++t)i[t]=a.Gd(i[t],s)}return i})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let a=r;if(f(t,r)>1){const e=f(t.slice(0,n),r);a+="_".concat(e)}e.push(a)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new en(t),c=an(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(r[n],c[n]);null!=o[n]&&(t=hn(t,o[n]));const s=a.he(t);e.push(s),u=0===n?t:a.ed(u,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],o=this.metricsTensors[n][1];t=a.he(e(r[o],c[o]))}a.Wd(t),s.push(t)}return u=a.he(u),this.calculateLosses().forEach(t=>{u=a.ed(u,t)}),u},!0,i)].concat(s)}}makeTestFunction(){this.testFunction=t=>a.df(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:r[t]});const i=new en(s),c=an(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],s=a.he(r(o[t],c[t]));n=0===t?s:a.ed(n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],s=a.he(n(o[r],c[r]));e.push(s)}return e})}async fit(t,e){return async function(t,e,n){let r,o,s,i,c,d,p,h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const f=null==h.batchSize?32:h.batchSize;yn(f);const m=!1,b=await t.standardizeUserData(e,n,h.sampleWeight,h.classWeight,m,f);r=b[0],o=b[1],p=b[2];let g,y=!1;if(null!=h.validationData&&h.validationData.length>0){if(y=!0,2!==h.validationData.length)throw 3===h.validationData.length?new l("validationData including sample weights is not supported yet."):new u("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));s=h.validationData[0],i=h.validationData[1];const e=!0,n=await t.standardizeUserData(s,i,null,null,e,f);c=n[0],d=n[1],g=c.concat(d)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){y=!0;const t=Math.floor(r[0].shape[0]*(1-h.validationSplit)),e=r[0].shape[0];c=vn(r,t,e),r=vn(r,0,t),d=vn(o,t,e),o=vn(o,0,t),g=c.concat(d)}else null!=h.validationSteps&&(y=!0);const v=r.concat(o).concat(p);t.checkTrainableWeightsConsistency();const O=t.makeTrainFunction(),x=t.getDedupedMetricsNames();let w,k;y?(t.makeTestFunction(),w=t.testFunction,k=x.slice().concat(x.map(t=>"val_"+t))):(w=null,g=[],k=x.slice());const j=ve(h.callbacks,h.yieldEvery);return await wn(t,O,v,x,f,h.epochs,h.verbose,j,w,g,h.shuffle,k,h.initialEpoch,null,null)}finally{t.isTraining=!1,jn(r,e),jn(o,n),jn(c,s),jn(d,i),null!=p&&a.Fd(p)}}(this,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}async fitDataset(t,e){return bn(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],o=n[1],s=this.makeTrainFunction()(r.concat(o)),i=[];for(const a of s){const t=await a.data();i.push(t[0])}return a.Fd(s),m(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let o=0;o<r.length;++o)n&&!r[o].trainable||e.push({name:r[o].originalName,tensor:a[o]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=a.ie().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-a.ie().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=g(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>g(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=g(n[r])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[g(He(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>g(He(t)));{const t={};for(const e in this.metrics)t[e]=g(He(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=we(tn(t.optimizer_config));let n,r;if("string"===typeof t.loss)n=y(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>y(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=y(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>y(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=y(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"===typeof t){const e=a.Vd.getSaveHandlers(t);if(0===e.length)throw new u("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new u("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new u("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await a.Vd.encodeWeights(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat("2.8.6"),convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:o}=await a.Vd.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...o),n.data=a.Vd.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;qe(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){qe(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}En.className="Model",a.Ge.registerClass(En);class Cn extends En{}Cn.className="Functional",a.Ge.registerClass(Cn);class An extends En{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Xt("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new u("Negative dimension size caused by adding layer "+"".concat(t.name," with input shape [")+"".concat(t.inboundNodes[0].inputTensors[0].shape,"]"))}add(t){const e=t instanceof An||t instanceof En;let n;if(e){if(n=t,1!==n.outputs.length)throw new u("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new u("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new u("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=le({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new u("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(t.name," ")+"which has ".concat(t.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==t.inboundNodes[0].outputTensors.length)throw new u("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,r){if((null==n||null!=r&&r>0)&&(n=e.sourceLayer,r=e.nodeIndex),0===n.inboundNodes.length)return[e];{const e=n.inboundNodes[r];if(0===e.inboundLayers.length)return e.inputTensors;{const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=t(e.inputTensors[r],e.inboundLayers[r],e.nodeIndices[r]);for(const t of a)-1===n.indexOf(t)&&n.push(t)}return n}}}(this.outputs[0])}this.inboundNodes=[],new se({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:p(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Zt(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new En({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new u("Legacy serialization format not supported yet.");n=e}else a.kf.assert(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),n=e.layers,delete e.layers,o=e;const s=new t(o);if(!(s instanceof An))throw new l("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const a of n){const t=we(a,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(t){if(null==this.model)throw new u("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new u("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}An.className="Sequential",a.Ge.registerClass(An);class _n extends a.Ge.Serializable{getConfig(){return{}}}class Rn extends _n{apply(t){return function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==e)throw new l("Support for alpha values other than 1 (".concat(e,") is not implemented ")+"yet.");return a.Id(t)}(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Rn.className="elu",a.Ge.registerClass(Rn);class Dn extends _n{apply(t){return a.Ee(t)}}Dn.className="selu",a.Ge.registerClass(Dn);class Fn extends _n{apply(t){return a.Ae(t)}}Fn.className="relu",a.Ge.registerClass(Fn);class Mn extends _n{apply(t){return Object(a.df)(()=>a.ke(6,a.Ae(t)))}}Mn.className="relu6",a.Ge.registerClass(Mn);class Ln extends _n{apply(t){return t}}Ln.className="linear",a.Ge.registerClass(Ln);class zn extends _n{apply(t){return a.Ie(t)}}zn.className="sigmoid",a.Ge.registerClass(zn);class Pn extends _n{apply(t){return function(t){return Object(a.df)(()=>{const e=a.ed(.5,a.me(.2,t));return a.sd(e,0,1)})}(t)}}Pn.className="hardSigmoid",a.Ge.registerClass(Pn);class Bn extends _n{apply(t){return a.Qe(t)}}Bn.className="softplus",a.Ge.registerClass(Bn);class Vn extends _n{apply(t){return function(t){return Object(a.df)(()=>a.Gd(t,a.dd(t).add(1)))}(t)}}Vn.className="softsign",a.Ge.registerClass(Vn);class Wn extends _n{apply(t){return a.Ye(t)}}Wn.className="tanh",a.Ge.registerClass(Wn);class Un extends _n{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return a.Pe(t,e)}}Un.className="softmax",a.Ge.registerClass(Un);class Gn extends _n{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return a.be(t,e)}}Gn.className="logSoftmax",a.Ge.registerClass(Gn);class Hn extends _n{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Object(a.df)(()=>a.Ie(t.mul(e)).mul(t))}}function qn(t){return t.getClassName()}function Kn(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return w(t,a.Ge.SerializationMap.getMap().classNameMap,e,"activation")}function Xn(t){if(null==t){const t={className:"linear",config:{}};return Kn(t)}if("string"===typeof t){const e={};return e.className=t,e.config={},Kn(e)}return t instanceof _n?t:Kn(t)}function Yn(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(t))}Hn.className="swish",a.Ge.registerClass(Hn);class Qn extends a.Ge.Serializable{}class Jn extends Qn{constructor(t){super(),Yn(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(a.df)(()=>{let e=Object(a.pf)([1]);return this.hasL1&&(e=Object(a.ed)(e,Object(a.We)(a.me(this.l1,Object(a.dd)(t))))),this.hasL2&&(e=Object(a.ed)(e,Object(a.We)(a.me(this.l2,yt(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Jn.className="L1L2",a.Ge.registerClass(Jn);const Zn={l1l2:"L1L2"};function $n(t){return O(t)}function tr(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return w(t,a.Ge.SerializationMap.getMap().classNameMap,e,"regularizer")}function er(t){if(null==t)return null;if("string"===typeof t){return tr({className:t in Zn?Zn[t]:t,config:{}})}return t instanceof Qn?t:tr(t)}class nr extends ce{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Jt(t);let n=Object(a.Ae)(t);return null!=this.maxValue&&(n=Object(a.sd)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}nr.className="ReLU",a.Ge.registerClass(nr);class rr extends ce{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Jt(t);return Object(a.Yd)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}rr.className="LeakyReLU",a.Ge.registerClass(rr);class ar extends ce{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Gt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=er(t.alphaRegularizer),this.alphaConstraint=P(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new u("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(t.sharedAxes));this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Zt(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new re({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Jt(t),Object(a.ve)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Ut(this.alphaInitializer),alphaRegularizer:$n(this.alphaRegularizer),alphaConstraint:L(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}ar.className="PReLU",a.Ge.registerClass(ar);class or extends ce{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new l("Non-default alpha value (".concat(t.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Jt(t);return Object(a.Id)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}or.className="ELU",a.Ge.registerClass(or);class sr extends ce{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Jt(t);return n.mul(st(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}sr.className="ThresholdedReLU",a.Ge.registerClass(sr);class ir extends ce{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Un).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Jt(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function cr(t,e,n){if("number"===typeof t)return p(t,e);if(t.length!==e)throw new u("The ".concat(n," argument must be an integer or tuple of ").concat(e," integers.")+" Received: ".concat(t.length," elements."));for(let a=0;a<e;++a){const o=t[a];if((r=o)!==parseInt(r.toString(),10))throw new u("The ".concat(n," argument must be an integer or tuple of ").concat(e)+" integers. Received: ".concat(JSON.stringify(t)," including a")+" non-integer number ".concat(o))}return t;var r}function ur(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(null==t)return t;const o=e+(e-1)*(a-1);let s;return s="same"===n?t:t-o+1,Math.floor((s+r-1)/r)}function lr(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+at([n-e,0]);else{if("same"!==r)throw new u("Unsupport padding mode: ".concat(r,"."));t*=e}return t}function dr(t,e){return Object(a.df)(()=>(q(e),"channelsFirst"===e?a.gf(t,[0,2,3,1]):t))}function pr(t,e){return Object(a.df)(()=>(q(e),"channelsFirst"===e?a.gf(t,[0,2,3,4,1]):t))}function hr(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Object(a.df)(()=>{if(null==s&&(s="channelsLast"),q(s),3!==t.shape.length)throw new u("The input of a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead."));if(3!==e.shape.length)throw new u("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new u("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(e.shape.length," instead"));if("channelsFirst"===s&&(t=a.gf(t,[0,2,1])),"causal"===o)throw new l("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=a.zd(t,e,r,"same"===o?"same":"valid","NWC",i);return null!=n&&(c=Ot(c,n)),c})}function fr(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Object(a.df)(()=>{if(null==s&&(s="channelsLast"),q(s),3!==t.rank&&4!==t.rank)throw new u("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));if(3!==e.rank&&4!==e.rank)throw new u("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));let d=dr(t,s);if("causal"===o)throw new l("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return d=a.Qd.conv2d({x:d,filter:e,strides:r,pad:"same"===o?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:c}),"channelsFirst"===s&&(d=a.gf(d,[0,3,1,2])),d})}function mr(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return Object(a.df)(()=>{if(null==s&&(s="channelsLast"),q(s),4!==t.rank&&5!==t.rank)throw new u("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(t.rank,"."));if(4!==e.rank&&5!==e.rank)throw new u("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(t.rank,"."));let c=pr(t,s);if("causal"===o)throw new l("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=a.Cd(c,e,r,"same"===o?"same":"valid","NDHWC",i),null!=n&&(c=Ot(c,n)),"channelsFirst"===s&&(c=a.gf(c,[0,4,1,2,3])),c})}ir.className="Softmax",a.Ge.registerClass(ir);class br extends ce{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",br.verifyArgs(e),this.rank=t,T(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new l("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=cr(e.kernelSize,t,"kernelSize"),this.strides=cr(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,K(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,q(this.dataFormat),this.activation=Xn(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=P(e.biasConstraint),this.biasRegularizer=er(e.biasRegularizer),this.activityRegularizer=er(e.activityRegularizer),this.dilationRate=cr(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new u("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new u("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new u("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(t){if(h("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!I(t.kernelSize,"number",1,3))throw new u("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(t.kernelSize),"."))}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:qn(this.activation),useBias:this.useBias,biasInitializer:Ut(this.biasInitializer),biasRegularizer:$n(this.biasRegularizer),activityRegularizer:$n(this.activityRegularizer),biasConstraint:L(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class gr extends br{constructor(t,e){super(t,e),this.kernel=null,gr.verifyArgs(e),this.filters=e.filters,T(this.filters,"filters"),this.kernelInitializer=Gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=P(e.kernelConstraint),this.kernelRegularizer=er(e.kernelRegularizer)}build(t){t=Zt(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new u("The channel dimension of the input should be defined. "+"Found ".concat(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(a.df)(()=>{let e;t=Jt(t);const n=null==this.bias?null:this.bias.read(),r=E(this.activation.getClassName());if(null!=r&&2===this.rank)e=fr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=hr(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=fr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new l("convolutions greater than 3D are not implemented yet.");e=mr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=Zt(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<n.length;++a){const t=ur(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ut(this.kernelInitializer),kernelRegularizer:$n(this.kernelRegularizer),kernelConstraint:L(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new u("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(t.filters)))}}class yr extends gr{constructor(t){super(2,t),yr.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!I(t.kernelSize,"number",1,2))throw new u("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(t.kernelSize),"."))}}yr.className="Conv2D",a.Ge.registerClass(yr);class vr extends gr{constructor(t){super(3,t),vr.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new u("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(t.kernelSize),"."))}}vr.className="Conv3D",a.Ge.registerClass(vr);class Or extends yr{constructor(t){if(super(t),this.inputSpec=[new re({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new u("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(4!==(t=Zt(t)).length)throw new u("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new u("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new re({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return a.df(()=>{let e=Jt(t);if(4!==e.shape.length)throw new u("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,r=n[0];let o,s;"channelsFirst"===this.dataFormat?(o=2,s=3):(o=1,s=2);const i=n[o],c=n[s],l=this.kernelSize[0],d=this.kernelSize[1],p=this.strides[0],h=this.strides[1],f=[r,lr(i,p,l,this.padding),lr(c,h,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=a.gf(e,[0,2,3,1]));let m=a.Bd(e,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=a.gf(m,[0,3,1,2])),null!=this.bias&&(m=Ot(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(t){const e=(t=Zt(t)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const o=this.kernelSize[0],s=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[r]=lr(e[r],i,o,this.padding),e[a]=lr(e[a],c,s,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Or.className="Conv2DTranspose",a.Ge.registerClass(Or);class xr extends gr{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new u("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new u("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new u("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(e.padding)));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Gt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=er(e.depthwiseRegularizer),this.depthwiseConstraint=P(e.depthwiseConstraint),this.pointwiseInitializer=Gt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=er(e.pointwiseRegularizer),this.pointwiseConstraint=P(e.pointwiseConstraint)}build(t){if((t=Zt(t)).length<this.rank+2)throw new u("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(t)));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new u("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(t[e])));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let o=0;o<this.rank;++o)a.push(1);a.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new re({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(a.df)(()=>{let e;if(t=Jt(t),1===this.rank)throw new l("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=a.gf(t,[0,2,3,1])),e=a.Fe(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Ot(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=a.gf(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Ut(this.depthwiseInitializer),t.pointwiseInitializer=Ut(this.pointwiseInitializer),t.depthwiseRegularizer=$n(this.depthwiseRegularizer),t.pointwiseRegularizer=$n(this.pointwiseRegularizer),t.depthwiseConstraint=L(this.depthwiseConstraint),t.pointwiseConstraint=L(this.pointwiseConstraint),t}}xr.className="SeparableConv";class wr extends xr{constructor(t){super(2,t)}}wr.className="SeparableConv2D",a.Ge.registerClass(wr);class kr extends gr{constructor(t){super(1,t),kr.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!I(t.kernelSize,"number",1,1))throw new u("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(t.kernelSize),"."))}}kr.className="Conv1D",a.Ge.registerClass(kr);class jr extends ce{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(a.df)(()=>{if(t=Jt(t),"channelsLast"===this.dataFormat){const e=dt(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return dt(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=dt(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return dt(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}jr.className="Cropping2D",a.Ge.registerClass(jr);class Nr extends ce{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,q(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,S(V,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return a.df(()=>{let e=Jt(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=a.gf(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],o="nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r]);return a.gf(o,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Nr.className="UpSampling2D",a.Ge.registerClass(Nr);class Sr extends br{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Gt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=P(t.depthwiseConstraint),this.depthwiseRegularizer=er(t.depthwiseRegularizer)}build(t){if((t=Zt(t)).length<4)throw new u("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(t),"."));const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new u("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(t[e],")."));const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a.df)(()=>{let e=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",o=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return Object(a.df)(()=>{null==o&&(o="channelsLast"),q(o);let i=dr(t,o);if(4!==t.rank)throw new u("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));if(4!==e.rank)throw new u("depthwiseKernel is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));return i=a.Dd(i,e,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===o&&(i=a.gf(i,[0,3,1,2])),i})}(t=Jt(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Ot(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=Zt(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=ur(e,this.kernelSize[0],this.padding,this.strides[0]),o=ur(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,a,o]:[t[0],a,o,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Ut(this.depthwiseInitializer),t.depthwiseRegularizer=$n(this.depthwiseRegularizer),t.depthwiseConstraint=L(this.depthwiseRegularizer),t}}function Ir(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new u("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function a(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=a(e),constants:n=a(n)}}function Tr(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return a.df(()=>{const d=e.shape.length;if(d<3)throw new u("Input should be at least 3D, but is ".concat(d,"D."));const p=[1,0].concat(ot(2,d));if(e=a.gf(e,p),null!=s)throw new l("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=o&&(o=o.asType("bool").asType("float32"),o.rank===d-1&&(o=a.Md(o,-1)),o=a.gf(o,p)),r&&(e=a.Ce(e,0),null!=o&&(o=a.Ce(o,0)));const h=[];let f,m=n;const b=e.shape[0],g=a.if(e);let y,v;null!=o&&(y=a.if(o));for(let e=0;e<b;++e){const n=g[e],r=a.df(()=>t(n,m));if(null==o)f=r[0],m=r[1];else{const t=a.df(()=>{const t=y[e],n=a.se(t).sub(t);return{output:r[0].mul(t).add(m[0].mul(n)),newStates:m.map((e,a)=>r[1][a].mul(t).add(e.mul(n)))}});f=t.output,m=t.newStates}c&&h.push(f)}if(c){const t=1;v=a.Ue(h,t)}return[f,v,m]})}Sr.className="DepthwiseConv2D",a.Ge.registerClass(Sr);class Er extends ce{constructor(t){let e;if(super(t),null==t.cell)throw new u("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Lr({cells:t.cell}):t.cell,null==e.stateSize)throw new u("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new re({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return ot(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Yt(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return a.df(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new l("Constants support is not implemented in RNN yet.");Yt(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new re({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let o;if(this.cell.build(r),o=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!a.kf.arraysEqual(this.stateSpec.map(t=>t.shape[t.shape.length-1]),o))throw new u("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=o.map(t=>new re({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Object(a.df)(()=>{if(!this.stateful)throw new i("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new u("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>a.pf([n,t])):this.states_=[a.pf([n,this.cell.stateSize])];else if(null==t)a.Fd(this.states_),null!=this.keptStates&&(a.Fd(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>a.pf([n,t])):this.states_[0]=a.pf([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new u("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));!0===e?this.keptStates.push(this.states_.slice()):a.Fd(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,o];if(!a.kf.arraysEqual(r.shape,s))throw new u("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(r.shape));this.states_[e]=r}}this.states_=this.states_.map(t=>a.Wd(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=Ir(t,n,r,this.numConstants);t=a.inputs,n=a.initialState,r=a.constants;let o=[],s=[];if(null!=n){e.initialState=n,o=o.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new re({shape:t.shape}));s=s.concat(this.stateSpec)}null!=r&&(e.constants=r,o=o.concat(r),this.numConstants=r.length);if(o[0]instanceof ae){const n=[t].concat(o),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const i=super.apply(n,e);return this.inputSpec=a,i}return super.apply(t,e)}call(t,e){return Object(a.df)(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let a=null==e?null:e.initialState;t=Jt(t),null==a&&(a=this.stateful?this.states_:this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==o)throw new u("RNN Layer has ".concat(o," state(s) but was passed ")+"".concat(a.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const s={training:r},i=Tr((t,e)=>{const n=this.cell.call([t].concat(e),s);return[n[0],n.slice(1)]},t,a,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],d=i[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?l:c;return this.returnState?[p].concat(d):p})}getInitialState(t){return Object(a.df)(()=>{let e=a.pf(t.shape);return e=a.We(e,[1,2]),e=it(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?ft(e,[1,t]):e):this.cell.stateSize>1?[ft(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Er.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=we(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Er.className="RNN",a.Ge.registerClass(Er);class Cr extends ce{}class Ar extends Cr{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,T(this.units,"units"),this.activation=Xn(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Gt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=er(t.kernelRegularizer),this.recurrentRegularizer=er(t.recurrentRegularizer),this.biasRegularizer=er(t.biasRegularizer),this.kernelConstraint=P(t.kernelConstraint),this.recurrentConstraint=P(t.recurrentConstraint),this.biasConstraint=P(t.biasConstraint),this.dropout=rt([1,at([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=rt([1,at([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Zt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a.df)(()=>{if(2!==(t=t).length)throw new u("SimpleRNNCell expects 2 input Tensors, got ".concat(t.length,"."));let n=t[1];t=t[0];const r=null!=e.training&&e.training;let o;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zr({ones:()=>a.se(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zr({ones:()=>a.se(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;o=bt(null!=s?a.me(t,s):t,this.kernel.read()),null!=this.bias&&(o=Ot(o,this.bias.read())),null!=i&&(n=a.me(n,i));let c=a.ed(o,bt(n,this.recurrentKernel.read()));return null!=this.activation&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:qn(this.activation),useBias:this.useBias,kernelInitializer:Ut(this.kernelInitializer),recurrentInitializer:Ut(this.recurrentInitializer),biasInitializer:Ut(this.biasInitializer),kernelRegularizer:$n(this.kernelRegularizer),recurrentRegularizer:$n(this.recurrentRegularizer),biasRegularizer:$n(this.biasRegularizer),activityRegularizer:$n(this.activityRegularizer),kernelConstraint:L(this.kernelConstraint),recurrentConstraint:L(this.recurrentConstraint),biasConstraint:L(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Ar.className="SimpleRNNCell",a.Ge.registerClass(Ar);class _r extends Er{constructor(t){t.cell=new Ar(t),super(t)}call(t,e){return Object(a.df)(()=>{null!=this.cell.dropoutMask&&(a.Fd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.Fd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,o=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:o})})}static fromConfig(t,e){return new t(e)}}_r.className="SimpleRNN",a.Ge.registerClass(_r);class Rr extends Cr{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new u("GRUCell does not support reset_after parameter set to true.");this.units=t.units,T(this.units,"units"),this.activation=Xn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Xn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Gt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=er(t.kernelRegularizer),this.recurrentRegularizer=er(t.recurrentRegularizer),this.biasRegularizer=er(t.biasRegularizer),this.kernelConstraint=P(t.kernelConstraint),this.recurrentConstraint=P(t.recurrentConstraint),this.biasConstraint=P(t.biasConstraint),this.dropout=rt([1,at([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=rt([1,at([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Zt(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a.df)(()=>{if(2!==(t=t).length)throw new u("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zr({ones:()=>a.se(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zr({ones:()=>a.se(r),rate:this.recurrentDropout,training:n,count:3}));const o=this.dropoutMask,s=this.recurrentDropoutMask;let i,c,l;0<this.dropout&&this.dropout<1&&(t=a.me(t,o[0]));let d=bt(t,this.kernel.read());this.useBias&&(d=Ot(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.me(r,s[0]));const p=this.recurrentKernel.read(),[h,f]=a.Re(p,[2*this.units,this.units],p.rank-1),m=bt(r,h),[b,g,y]=a.Re(d,3,d.rank-1),[v,O]=a.Re(m,2,m.rank-1);i=this.recurrentActivation.apply(a.ed(b,v)),c=this.recurrentActivation.apply(a.ed(g,O));const x=bt(a.me(c,r),f);l=this.activation.apply(a.ed(y,x));const w=a.ed(a.me(i,r),a.me(a.ed(1,a.ne(i)),l));return[w,w]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:qn(this.activation),recurrentActivation:qn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ut(this.kernelInitializer),recurrentInitializer:Ut(this.recurrentInitializer),biasInitializer:Ut(this.biasInitializer),kernelRegularizer:$n(this.kernelRegularizer),recurrentRegularizer:$n(this.recurrentRegularizer),biasRegularizer:$n(this.biasRegularizer),activityRegularizer:$n(this.activityRegularizer),kernelConstraint:L(this.kernelConstraint),recurrentConstraint:L(this.recurrentConstraint),biasConstraint:L(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Rr.className="GRUCell",a.Ge.registerClass(Rr);class Dr extends Er{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Rr(t),super(t)}call(t,e){return Object(a.df)(()=>{null!=this.cell.dropoutMask&&(a.Fd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.Fd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,o=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:o})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Dr.className="GRU",a.Ge.registerClass(Dr);class Fr extends Cr{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,T(this.units,"units"),this.activation=Xn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Xn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Gt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=er(t.kernelRegularizer),this.recurrentRegularizer=er(t.recurrentRegularizer),this.biasRegularizer=er(t.biasRegularizer),this.kernelConstraint=P(t.kernelConstraint),this.recurrentConstraint=P(t.recurrentConstraint),this.biasConstraint=P(t.biasConstraint),this.dropout=rt([1,at([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=rt([1,at([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Zt(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Nt{apply(e,r){const a=t.apply([n]),o=(new It).apply([n]),s=t.apply([2*n]);return ht(ht(a,o),s)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(a.df)(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new u("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));let r=t[1];const o=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zr({ones:()=>a.se(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zr({ones:()=>a.se(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let c,l,d,p;0<this.dropout&&this.dropout<1&&(t=a.me(t,s[0]));let h=bt(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.me(r,i[0])),h=a.ed(h,bt(r,this.recurrentKernel.read())),this.useBias&&(h=Ot(h,this.bias.read()));const[f,m,b,g]=a.Re(h,4,h.rank-1);c=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(m),d=a.ed(a.me(l,o),a.me(c,this.activation.apply(b))),p=this.recurrentActivation.apply(g);const y=a.me(p,this.activation.apply(d));return[y,y,d]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:qn(this.activation),recurrentActivation:qn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ut(this.kernelInitializer),recurrentInitializer:Ut(this.recurrentInitializer),biasInitializer:Ut(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:$n(this.kernelRegularizer),recurrentRegularizer:$n(this.recurrentRegularizer),biasRegularizer:$n(this.biasRegularizer),activityRegularizer:$n(this.activityRegularizer),kernelConstraint:L(this.kernelConstraint),recurrentConstraint:L(this.recurrentConstraint),biasConstraint:L(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Fr.className="LSTMCell",a.Ge.registerClass(Fr);class Mr extends Er{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Fr(t),super(t)}call(t,e){return Object(a.df)(()=>{null!=this.cell.dropoutMask&&(a.Fd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.Fd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,o=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:o})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Mr.className="LSTM",a.Ge.registerClass(Mr);class Lr extends Cr{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(a.df)(()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let o;for(let s=0;s<this.cells.length;++s){const i=this.cells[s];n=r[s],o=0===s?[t[0]].concat(n):[o[0]].concat(n),o=i.call(o,e),a.push(o.slice(1))}n=[];for(const t of a.slice().reverse())n.push(...t);return[o[0]].concat(n)})}build(t){let e;Yt(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{Q("RNNCell_".concat(r),()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(t=>({className:t.getClassName(),config:t.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=[];for(const a of e.cells)r.push(we(a,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return ee(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,a=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],a[t]])}ne(e)}}function zr(t){const{ones:e,rate:n,training:r=!1,count:o=1}=t,s=()=>xt(e(),n),i=()=>wt(s,e,r);if(!o||o<=1)return a.Wd(i().clone());return Array(o).fill(void 0).map(i).map(t=>a.Wd(t.clone()))}Lr.className="StackedRNNCells",a.Ge.registerClass(Lr);var Pr=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(t);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(t,r[a])&&(n[r[a]]=t[r[a]])}return n};class Br extends Er{constructor(t){if(t.unroll)throw new l("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new l("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new re({ndim:5})]}call(t,e){return a.df(()=>{if(null!=this.cell.dropoutMask&&(a.Fd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.Fd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new u("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,o=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:o})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return a.df(()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),o=[r[0],...r.slice(2)],s=a.pf(o);return Array.isArray(e)?Array(e.length).fill(s):[s]})}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];a.df(()=>{if(!this.stateful)throw new i("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),o=[r[0],...r.slice(2)];if(null==n[0])throw new u("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>a.pf(o)):this.states_=[a.pf(o)];else if(null==t)a.Fd(this.states_),null!=this.keptStates&&(a.Fd(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>a.pf(o)):this.states_[0]=a.pf(o);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new u("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));e?this.keptStates.push(this.states_.slice()):a.Fd(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=o;if(!a.kf.arraysEqual(n.shape,r))throw new u("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(r,", received shape=").concat(n.shape));this.states_[e]=n}}this.states_=this.states_.map(t=>a.Wd(t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:a,strides:o,dilationRate:s}=this.cell,i="channelsFirst"===e,c=t[i?3:2],u=t[i?4:3],l=ur(c,r[0],a,o[0],s[0]),d=ur(u,r[1],a,o[1],s[1]);return[...t.slice(0,2),...i?[n,l,d]:[l,d,n]]}}Br.className="ConvRNN2D";class Vr extends Fr{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:a,dataFormat:o,dilationRate:s}=t;super(Object.assign({},t,{units:e})),this.filters=e,T(this.filters,"filters"),this.kernelSize=cr(n,2,"kernelSize"),this.kernelSize.forEach(t=>T(t,"kernelSize")),this.strides=cr(r||1,2,"strides"),this.strides.forEach(t=>T(t,"strides")),this.padding=a||"valid",K(this.padding),this.dataFormat=o||"channelsLast",q(this.dataFormat),this.dilationRate=cr(s||1,2,"dilationRate"),this.dilationRate.forEach(t=>T(t,"dilationRate"))}build(t){var e;t=Zt(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new u("The channel dimension of the input should be defined. "+"Found ".concat(t[n]));const r=t[n],o=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends Nt{apply(t,e){return pt([n.apply([r]),a.re([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return a.df(()=>{if(3!==t.length)throw new u("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=e.training||!1,r=t[0],o=t[1],s=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zr({ones:()=>a.se(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,c=(t,e,n)=>e&&e[n]?a.me(e[n],t):t;let l=c(r,i,0),d=c(r,i,1),p=c(r,i,2),h=c(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zr({ones:()=>a.se(o),rate:this.recurrentDropout,training:n,count:4}));const f=this.recurrentDropoutMask;let m=c(o,f,0),b=c(o,f,1),g=c(o,f,2),y=c(o,f,3);const[v,O,x,w]=a.Re(this.kernel.read(),4,3),[k,j,N,S]=this.useBias?a.Re(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,v,k,this.padding),d=this.inputConv(d,O,j,this.padding),p=this.inputConv(p,x,N,this.padding),h=this.inputConv(h,w,S,this.padding);const[I,T,E,C]=a.Re(this.recurrentKernel.read(),4,3);m=this.recurrentConv(m,I),b=this.recurrentConv(b,T),g=this.recurrentConv(g,E),y=this.recurrentConv(y,C);const A=this.recurrentActivation.apply(a.ed(l,m)),_=this.recurrentActivation.apply(a.ed(d,b)),R=a.ed(a.me(_,s),a.me(A,this.activation.apply(a.ed(p,g)))),D=a.me(this.recurrentActivation.apply(a.ed(h,y)),this.activation.apply(R));return[D,D,R]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=Pr(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const o=a.Ad(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Ot(o,n,this.dataFormat):o}recurrentConv(t,e){return a.Ad(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Vr.className="ConvLSTM2DCell",a.Ge.registerClass(Vr);class Wr extends Br{constructor(t){const e=new Vr(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Wr.className="ConvLSTM2D",a.Ge.registerClass(Wr);class Ur extends ce{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return Object(a.df)(()=>{this.invokeCallHook(t,e);const n=Jt(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return wt(()=>xt(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Ur.className="Dropout",a.Ge.registerClass(Ur);class Gr extends Ur{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Gr.className="SpatialDropout1D",a.Ge.registerClass(Gr);class Hr extends ce{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,T(this.units,"units"),this.activation=Xn(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=P(t.kernelConstraint),this.biasConstraint=P(t.biasConstraint),this.kernelRegularizer=er(t.kernelRegularizer),this.biasRegularizer=er(t.biasRegularizer),this.activityRegularizer=er(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Zt(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Zt(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Object(a.df)(()=>{this.invokeCallHook(t,e);const n=Jt(t),r=E(this.activation.getClassName());let a;return null!=r?a=bt(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=bt(n,this.kernel.read()),null!=this.bias&&(a=Ot(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const t={units:this.units,activation:qn(this.activation),useBias:this.useBias,kernelInitializer:Ut(this.kernelInitializer),biasInitializer:Ut(this.biasInitializer),kernelRegularizer:$n(this.kernelRegularizer),biasRegularizer:$n(this.biasRegularizer),activityRegularizer:$n(this.activityRegularizer),kernelConstraint:L(this.kernelConstraint),biasConstraint:L(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Hr.className="Dense",a.Ge.registerClass(Hr);class qr extends ce{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Zt(t);for(const e of t.slice(1))if(null==e)throw new u('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(t.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[t[0],et(t,1)]}call(t,e){return Object(a.df)(()=>{this.invokeCallHook(t,e);let n=Jt(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new u("batchFlatten requires a minimum rank of 2. Got rank: ".concat(t.rank,"."));const e=[t.shape[0],et(t.shape,1)];return t.reshape(e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}qr.className="Flatten",a.Ge.registerClass(qr);class Kr extends ce{constructor(t){super(t),this.supportsMasking=!0,this.activation=Xn(t.activation)}call(t,e){return Object(a.df)(()=>{this.invokeCallHook(t,e);const n=Jt(t);return this.activation.apply(n)})}getConfig(){const t={activation:qn(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Kr.className="Activation",a.Ge.registerClass(Kr);class Xr extends ce{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(a.df)(()=>{return t=Jt(t),e=t,n=this.n,Object(a.df)(()=>{if(2!==e.shape.length)throw new u("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(e.shape.length," tensor."));return ft(it(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Xr.className="RepeatVector",a.Ge.registerClass(Xr);class Yr extends ce{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let a=1,o=null;for(let i=0;i<r.length;++i){const t=r[i];if(this.isUnknown(t)){if(null!==o)throw new u("Can only specifiy one unknown dimension.");o=i}else a*=t}const s=et(t);if(null!==o){if(0===a||s%a!==0)throw new u(n);r[o]=s/a}else if(s!==a)throw new u(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(a.df)(()=>{this.invokeCallHook(t,e);const n=Jt(t),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Yr.className="Reshape",a.Ge.registerClass(Yr);class Qr extends ce{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(t.dims," instead."));const e=ot(1,t.dims.length+1);if(!a.kf.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new re({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Zt(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Object(a.gf)(Jt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Qr.className="Permute",a.Ge.registerClass(Qr);class Jr extends ce{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Jt(t);return Object(a.gd)(Object(a.pe)(n,this.maskValue),-1)}call(t,e){return Object(a.df)(()=>{this.invokeCallHook(t,e);const n=Jt(t),r=Object(a.gd)(Object(a.pe)(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}Jr.className="Masking",a.Ge.registerClass(Jr);class Zr extends ce{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(b(t.inputLength))}this.inputDim=t.inputDim,T(this.inputDim,"inputDim"),this.outputDim=t.outputDim,T(this.outputDim,"outputDim"),this.embeddingsInitializer=Gt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=er(t.embeddingsRegularizer),this.activityRegularizer=er(t.activityRegularizer),this.embeddingsConstraint=P(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Object(a.df)(()=>this.maskZero?(t=Jt(t),Object(a.pe)(t,Object(a.qf)(t))):null)}computeOutputShape(t){if(t=Zt(t),null==this.inputLength)return[...t,this.outputDim];const e=b(this.inputLength);if(e.length!==t.length-1)throw new u('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));{let n=0;for(let r=0;r<e.length;++r){const a=e[r],o=t[r+1];if(null!=a&&null!=o&&a!==o)throw new u('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));null==a&&(e[n]=o),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(a.df)(()=>{this.invokeCallHook(t,e);let n=Jt(t);"int32"!==n.dtype&&(n=st(n,"int32"));return gt(this.embeddings.read(),n.as1D()).reshape(Zt(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ut(this.embeddingsInitializer),embeddingsRegularizer:$n(this.embeddingsRegularizer),activityRegularizer:$n(this.activityRegularizer),embeddingsConstraint:L(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Zr.className="Embedding",a.Ge.registerClass(Zr);class $r extends ce{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new l}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const a=t[t.length-e.length+r],o=e[r];if(null==a||null==o||a<0||o<0)n.push(null);else if(1===a)n.push(o);else if(1===o)n.push(a);else{if(a!==o)throw new u("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(a)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Zt(t)]),(t=t).length<2)throw new u("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(t.length," input(s)."));let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=j(e),e.length>1)throw new u("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(t),"."));let n=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const e=null==t[a]?null:t[a].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===j(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(a.df)(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=at(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=it(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],o=t.slice(1).concat([r]);let i=s.reshape([r].concat(et(t.slice(1))));i=a.gf(i,[1,0]),i=i.reshape(o),e.push(i),n=!0}else if(t>1){const r=ot(1,t).concat([0]);e.push(a.gf(s,r)),n=!0}else e.push(s)}let r=this.mergeFunction(e);const o=r.rank;if(n)if(null==o){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=a.gf(r.reshape([-1,e]),[1,0]).reshape(n)}else if(o>1){const t=[o-1].concat(ot(0,o-1));r=a.gf(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=j(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return a.df(()=>{if(null==e)return null;if(!Array.isArray(e))throw new u("`mask` should be an Array");if(!Array.isArray(t))throw new u("`inputs` should be an Array");if(e.length!==t.length)throw new u("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(t.length," vs ").concat(e.length,")"));if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:a.Md(t,0)))[0];for(let t=1;t<e.length-1;++t)n=a.ce(n,e[t]);return n})}}class ta extends $r{constructor(t){super(t)}mergeFunction(t){return Object(a.df)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.ed(e,t[n]);return e})}}ta.className="Add",a.Ge.registerClass(ta);class ea extends $r{constructor(t){super(t)}mergeFunction(t){return Object(a.df)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.me(e,t[n]);return e})}}ea.className="Multiply",a.Ge.registerClass(ea);class na extends $r{constructor(t){super(t)}mergeFunction(t){return Object(a.df)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.ed(e,t[n]);return a.me(1/t.length,e)})}}na.className="Average",a.Ge.registerClass(na);class ra extends $r{constructor(t){super(t)}mergeFunction(t){return Object(a.df)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=a.ge(e,t[n]);return e})}}ra.className="Maximum",a.Ge.registerClass(ra);class aa extends $r{constructor(t){super(t)}mergeFunction(t){return Object(a.df)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=a.ke(e,t[n]);return e})}}aa.className="Minimum",a.Ge.registerClass(aa);class oa extends $r{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new u("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let o=!1;for(const t of n)if(a.kf.arraysEqual(t,e)){o=!0;break}o||n.push(e)}if(n.length>1)throw new u("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(a.df)(()=>pt(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new u("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of e.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new u("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new u("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new u("Mismatch in the length of mask (".concat(e.length,") ")+"and the legnth of inputs (".concat(t.length,")"));return a.df(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let s=0;s<t.length;++s)null==e[s]?r.push(a.se(t[s]).asType("bool")):e[s].rank<t[s].rank?r.push(a.Md(e[s],-1)):r.push(e[s]);const o=a.ud(r,this.axis);return a.fd(o,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function sa(t,e){for(;t<0;)t+=e;return t}oa.className="Concatenate",a.Ge.registerClass(oa);class ia extends $r{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){a.kf.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new l("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new u("Dimension incompatibility: "+"".concat(e[r[0]]," !== ").concat(n[r[1]]))}mergeFunction(t){if(2!==t.length)throw new u("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(t.length," input(s)."));let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>sa(e,t[n].shape.length)):[sa(this.axes,n.shape.length),sa(this.axes,r.shape.length)],this.normalize&&(n=ke(n,e[0]),r=ke(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new l("batchDot is not implemented for tensors of 4D or higher rank yet");if(a.kf.assert(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(t.shape.length)),a.kf.assert(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(e.shape.length)),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new l("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,o=e.shape.length;null==n&&(n=[r-1,o-2]);const s=n;return a.df(()=>{let n,a;if(r>o){n=r-o;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(o>r){n=o-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=s[0]===s[1]?t.mul(e).sum(s[0]):t.transpose([1,0]).mul(e).sum(s[1]);else{const n=s[0]!==t.shape.length-1,r=s[1]===e.shape.length-1;a=t.matMul(e,n,r)}if(n>0){let t;t=r>o?r+o-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[sa(this.axes,t.length),sa(this.axes,e.length)],n}computeOutputShape(t){a.kf.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new l("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const o=e.concat(n);return 1===o.length&&o.push(1),o}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}ia.className="Dot",a.Ge.registerClass(ia);class ca extends ce{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(a.df)(()=>{this.invokeCallHook(t,e);const n=Jt(t);return wt(()=>mt(n.shape,0,this.stddev).add(n),()=>n,e.training||!1)})}}ca.className="GaussianNoise",a.Ge.registerClass(ca);class ua extends ce{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(a.df)(()=>{this.invokeCallHook(t,e);const n=Jt(t);if(this.rate>0&&this.rate<1){return wt(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(mt(n.shape,1,t))},()=>n,e.training||!1)}return n})}}ua.className="GaussianDropout",a.Ge.registerClass(ua);class la extends ce{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Jt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(a.df)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return wt(()=>{const e=Jt(t),r=-1.7580993408473766;let o=Object(a.Td)(Object(a.xe)(n),this.rate);o=st(o,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return e.mul(o).add(o.add(-1).mul(r)).mul(s).add(i)},()=>Jt(t),e.training||!1)}return t})}}function da(t,e,n,r,o){let s,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===t.rank)s=a.md(t,e,n,r,o,i);else if(3===t.rank)s=a.nd(t,e,n,r,o,i);else{if(4!==t.rank)throw new l("batchNormalization is not implemented for array of rank ".concat(t.rank," ")+"yet");s=a.od(t,e,n,r,o,i)}return s}function pa(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Object(a.df)(()=>{const s=a.le(t,r),i=s.mean,c=s.variance;return[da(t,i,c,n,e,o),i,c]})}function ha(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Object(a.df)(()=>{const s=a.le(t,r),i=s.mean,c=s.variance,u=[];for(const e of ot(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const l=i.reshape(u),d=c.reshape(u),p=null==e?null:e.reshape(u),h=null==n?null:n.reshape(u);return[da(t,l,d,h,p,o),i,c]})}la.className="AlphaDropout",a.Ge.registerClass(la);class fa extends ce{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Gt(t.betaInitializer||"zeros"),this.gammaInitializer=Gt(t.gammaInitializer||"ones"),this.movingMeanInitializer=Gt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Gt(t.movingVarianceInitializer||"ones"),this.betaConstraint=P(t.betaConstraint),this.gammaConstraint=P(t.gammaConstraint),this.betaRegularizer=er(t.betaRegularizer),this.gammaRegularizer=er(t.gammaRegularizer)}build(t){t=Zt(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new u("Axis ".concat(e," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(t),"."));this.inputSpec=[new re({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(a.df)(()=>{const n=null!=e.training&&e.training,r=Jt(t),o=r.shape,s=o.length,i=ot(0,s),c=this.axis>=0?this.axis:this.axis+s;i.splice(c,1);const u=p(1,s);u[c]=o[c];const l=i.slice();l.sort();const d=!a.kf.arraysEqual(l,ot(0,s).slice(0,s-1));if(!n)return(()=>{if(d){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return da(r,t,e,n,a,this.epsilon)}return da(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,f,m]=function(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return a.kf.arraysEqual(r.slice().sort(),ot(0,t.rank-1))?pa(t,e,n,r,o):ha(t,e,n,r,o)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),b=(t,e,n)=>{a.df(()=>{const r=1-n,a=t.read(),o=a.sub(e).mul(r);t.write(a.sub(o))})};return(()=>{b(this.movingMean,f,this.momentum),b(this.movingVariance,m,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ut(this.betaInitializer),gammaInitializer:Ut(this.gammaInitializer),movingMeanInitializer:Ut(this.movingMeanInitializer),movingVarianceInitializer:Ut(this.movingVarianceInitializer),betaRegularizer:$n(this.betaRegularizer),gammaRegularizer:$n(this.gammaRegularizer),betaConstraint:L(this.betaConstraint),gammaConstraint:L(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}fa.className="BatchNormalization",a.Ge.registerClass(fa);class ma extends ce{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Gt(t.betaInitializer||"zeros"),this.gammaInitializer=Gt(t.gammaInitializer||"ones"),this.betaRegularizer=er(t.betaRegularizer),this.gammaRegularizer=er(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Zt(t)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==j(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Jt(t),r=n.shape,o=r.length;return Object(a.df)(()=>{let{mean:t,variance:e}=Object(a.le)(n,this.axis,!0);const s=p(1,o);for(const n of this.axis)s[n]=r[n];const i=t=>null!=t&&t.shape.length!==o&&this.axis!==[o-1]?t.reshape(s):t;let c=i(this.gamma.read()),u=i(this.beta.read());const l=[],d=[];for(let n=0;n<o;++n)-1!==this.axis.indexOf(n)?(l.push(r[n]),d.push(1)):(l.push(1),d.push(r[n]));return t=t.tile(l),e=e.tile(l),c=c.tile(d),u=u.tile(d),da(n,t,e,u,c,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ut(this.betaInitializer),gammaInitializer:Ut(this.gammaInitializer),betaRegularizer:$n(this.betaRegularizer),gammaRegularizer:$n(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}ma.className="LayerNormalization",a.Ge.registerClass(ma);class ba extends ce{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new u("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(t.padding.length," array."));let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new u("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(t.padding[0].length," array."));if(e=t.padding[0],2!==t.padding[1].length)throw new u("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(t.padding[1].length," array."));n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new re({ndim:4})]}computeOutputShape(t){let e,n;return t=Zt(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(a.df)(()=>{return e=Jt(t),n=this.padding,r=this.dataFormat,Object(a.df)(()=>{if(4!==e.rank)throw new u("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(e.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new u("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new u("Unknown data format: ".concat(r,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],a.te(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function ga(t,e,n,r,o,s){return Object(a.df)(()=>{let i;q(o),X(s),K(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==o&&(o="channelsLast"),null==s&&(s="max"),t=dr(t,o);const c="same"===r?"same":"valid";return i="max"===s?a.ee(t,e,n,c):a.id(t,e,n,c),"channelsFirst"===o&&(i=a.gf(i,[0,3,1,2])),i})}function ya(t,e,n,r,o,s){return Object(a.df)(()=>{let i;q(o),X(s),K(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==o&&(o="channelsLast"),null==s&&(s="max"),t=pr(t,o);const c="same"===r?"same":"valid";return i="max"===s?a.fe(t,e,n,c):a.jd(t,e,n,c),"channelsFirst"===o&&(i=a.gf(i,[0,4,1,2,3])),i})}ba.className="ZeroPadding2D",a.Ge.registerClass(ba);class va extends ce{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new u("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.poolSize)));this.poolSize=t.poolSize}if(T(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new u("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.strides)));this.strides=t.strides}T(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,K(this.padding),this.inputSpec=[new re({ndim:3})]}computeOutputShape(t){const e=ur((t=Zt(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(a.df)(()=>{this.invokeCallHook(t,e),t=it(Jt(t),2);const n=this.poolingFunction(Jt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return a.Te(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Oa extends va{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ga(t,e,n,r,a,"max")}}Oa.className="MaxPooling1D",a.Ge.registerClass(Oa);class xa extends va{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ga(t,e,n,r,a,"avg")}}xa.className="AveragePooling1D",a.Ge.registerClass(xa);class wa extends ce{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new u("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides];T(this.poolSize,"poolSize"),T(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,q(this.dataFormat),K(this.padding),this.inputSpec=[new re({ndim:4})]}computeOutputShape(t){t=Zt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=ur(e,this.poolSize[0],this.padding,this.strides[0]),n=ur(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(a.df)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Jt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ka extends wa{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ga(t,e,n,r,a,"max")}}ka.className="MaxPooling2D",a.Ge.registerClass(ka);class ja extends wa{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ga(t,e,n,r,a,"avg")}}ja.className="AveragePooling2D",a.Ge.registerClass(ja);class Na extends ce{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new u("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];T(this.poolSize,"poolSize"),T(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,q(this.dataFormat),K(this.padding),this.inputSpec=[new re({ndim:5})]}computeOutputShape(t){t=Zt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=ur(e,this.poolSize[0],this.padding,this.strides[0]),n=ur(n,this.poolSize[1],this.padding,this.strides[1]),r=ur(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Object(a.df)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Jt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Sa extends Na{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ya(t,e,n,r,a,"max")}}Sa.className="MaxPooling3D",a.Ge.registerClass(Sa);class Ia extends Na{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ya(t,e,n,r,a,"avg")}}Ia.className="AveragePooling3D",a.Ge.registerClass(Ia);class Ta extends ce{constructor(t){super(t),this.inputSpec=[new re({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new l}}class Ea extends Ta{constructor(t){super(t||{})}call(t,e){return Object(a.df)(()=>{const e=Jt(t);return a.he(e,1)})}}Ea.className="GlobalAveragePooling1D",a.Ge.registerClass(Ea);class Ca extends Ta{constructor(t){super(t||{})}call(t,e){return Object(a.df)(()=>{const e=Jt(t);return a.de(e,1)})}}Ca.className="GlobalMaxPooling1D",a.Ge.registerClass(Ca);class Aa extends ce{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,q(this.dataFormat),this.inputSpec=[new re({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new l}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class _a extends Aa{call(t,e){return Object(a.df)(()=>{const e=Jt(t);return"channelsLast"===this.dataFormat?a.he(e,[1,2]):a.he(e,[2,3])})}}_a.className="GlobalAveragePooling2D",a.Ge.registerClass(_a);class Ra extends Aa{call(t,e){return Object(a.df)(()=>{const e=Jt(t);return"channelsLast"===this.dataFormat?a.de(e,[1,2]):a.de(e,[2,3])})}}Ra.className="GlobalMaxPooling2D",a.Ge.registerClass(Ra);class Da extends ce{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=we(e.layer,n);delete e.layer;const a={layer:r};return Object.assign(a,e),new t(a)}}class Fa extends Da{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Zt(t)).length<3)throw new u("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(t)));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Zt(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Object(a.df)(()=>Tr((t,n)=>[Jt(this.layer.call(t,e)),[]],t=Jt(t),[],!1,null,null,!1,!0)[1])}}Fa.className="TimeDistributed",a.Ge.registerClass(Fa);class Ma extends Da{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=we(n),e.goBackwards=!0!==e.goBackwards;const r={};var a;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=we(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,a=this.mergeMode,S(G,"BidirectionalMergeMode",a),t.weights)throw new l("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,a=this.forwardLayer.computeOutputShape(t);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),e=a[0]):e=a[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):m(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=Ir(t,n,r,this.numConstants);if(t=a.inputs,n=a.initialState,r=a.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const o=[],s=[];if(null!=n){const t=n.length;if(t%2>0)throw new u("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,o.push(...n);const r=n.map(t=>new re({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),s.push(...r)}if(null!=r)throw new l("Support for constants in Bidirectional layers is not implemented yet.");const i=o[0]instanceof ae;for(const c of o)if(c instanceof ae!==i)throw new u("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[t].concat(o),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const i=super.apply(n,e);return this.inputSpec=a,i}return super.apply(t,e)}call(t,e){return Object(a.df)(()=>{const n=e.initialState;let r,o,s,i;if(null==n)r=this.forwardLayer.call(t,e),o=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),s=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),o=this.backwardLayer.call(t,Object.assign(e,{initialState:s}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=a.Ce(o,1)),"concat"===this.mergeMode?i=pt([r,o]):"sum"===this.mergeMode?i=a.ed(r,o):"ave"===this.mergeMode?i=a.me(.5,a.ed(r,o)):"mul"===this.mergeMode?i=a.me(r,o):null==this.mergeMode&&(i=[r,o]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Q(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Q(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=we(e.layer);if(delete e.layer,null!=e.numConstants)throw new l("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}Ma.className="Bidirectional",a.Ge.registerClass(Ma);n(82),n(3);n(139),n(23),n(273),n(170),n(14),n(24),n(225),n(150),n(22),n(130),n(110),n(76),n(132);n(67),n(253),n(254),n(256),n(257),n(258),n(222),n(259),n(260),n(83),n(169),n(220),n(151),n(262),n(63),n(263),n(153),n(98),n(214),n(163),n(49),n(268),n(144),n(112),n(269),n(210),n(159),n(217),n(270),n(218),n(212),n(59),n(37),n(250),n(272),n(244),n(166),n(219),n(231),n(155),n(158);n(206),n(90),n(27),n(207),n(108),n(245),n(149),n(156),n(274),n(243),n(247),n(224);n(152),n(275),n(276),n(208),n(111),n(248),n(209),n(185),n(251),n(91),n(31);n(20),n(277),n(278);n(232),n(233);n(100),n(25);n(109),n(131),n(70),n(78),n(134),n(79),n(84),n(135),n(171),n(58);n(48),n(80);n(115),n(227),n(249),n(246),n(283);n(95),n(124),n(141),n(28),n(203),n(204),n(205),n(221),n(167),n(279),n(280);n(52),n(154),n(125),n(45),n(271),n(160),n(13),n(85),n(113),n(119),n(99),n(281),n(282);n(161),n(143),n(162),n(213);n(86),n(229),n(157),n(133),n(136),n(223),n(142);var La=n(120),za=n(69),Pa=n(97);class Ba{constructor(){this.size=null}batch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let r;return a.kf.assert(t>0,()=>"batchSize needs to be positive, but it is\n      ".concat(t)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Va(async()=>(await n.iterator()).columnMajorBatch(t,e,Wa),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Va(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Va(async()=>(await e.iterator()).filter(e=>a.df(()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Va(async()=>(await e.iterator()).map(e=>a.df(()=>t(e))),this.size)}mapAsync(t){const e=this;return Va(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Va(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Va(async()=>{const n=Object(za.e)(async()=>({value:await e.iterator(),done:!1}));return Object(za.d)(n.take(t))},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Va(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const r=this,o=La.alea(e||a.kf.now().toString());return Va(async()=>{let e=o.int32();return n&&(e+=o.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Va(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Va(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends Ba{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Wa(t){if(null===t)return null;const e=t[0];if(Object(Pa.a)(e)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof a.Tc?a.Ue(t):a.Ze(t)}(t),recurse:!1}}return{value:null,recurse:!0}}Ba.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");za.a;za.a;var Ua=n(322);Ua.a;function Ga(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&a.kf.assert("complex64"!==t.dtype,()=>"".concat(e," does not support complex64 tensors in the CPU backend."))})}const Ha=a.Xd.whereImpl;class qa extends a.vb{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a.L(this,Object(a.Jd)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(a.Kd)().get("IS_NODE")&&a.ld.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&a.kf.isString(n[0])){const o=n.map(t=>a.kf.encodeString(t));r=this.write(o,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return a.ld.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>a.kf.decodeString(t))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(a.qd)(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Object(a.Jd)().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=a.kf.now();t();return{kernelMs:a.kf.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Ga([t],"where");const e=this.readSync(t.dataId);return Ha(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Ka(t,e,n){return r=>{let{inputs:o,attrs:s,backend:i}=r;const{x:c}=o;if(Ga(c,t),"string"===c.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(c.dataId).values,d=a.kf.sizeFromShape(c.shape),p=n||c.dtype,h=a.kf.getArrayFromDType(p,d);for(let t=0;t<d;++t)h[t]=e(l[t],s);return u.makeTensorInfo(c.shape,p,h)}}function Xa(t,e,n){return r=>{let{inputs:a,attrs:o,backend:s}=r;const{x:i}=a;if(Ga(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=s,u=c.data.get(i.dataId).values,l=n||i.dtype,d=e(u,l,o);return c.makeTensorInfo(i.shape,l,d)}}Object(a.ye)("cpu",()=>new qa,1);const Ya=Ka(a.V,t=>t>=0?t:Math.exp(t)-1),Qa={kernelName:a.V,backendName:"cpu",kernelFunc:Ya};function Ja(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Za={kernelName:a.qb,backendName:"cpu",kernelFunc:Ja};function $a(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{alpha:s}=r;Ga([o],"leakyRelu");const i=a.kf.sizeFromShape(o.shape),c=n.data.get(o.dataId).values,u=a.kf.getTypedArrayFromDType("float32",i);for(let a=0;a<c.length;a++)u[a]=c[a]<0?s*c[a]:c[a];return n.makeTensorInfo(o.shape,"float32",u)}const to={kernelName:a.yb,backendName:"cpu",kernelFunc:$a};function eo(t){return(e,n,r,o,s)=>{const i=a.ld.assertAndGetBroadcastShape(e,n),c=i.length,u=a.kf.computeStrides(i),l=a.kf.sizeFromShape(i),d=a.kf.getTypedArrayFromDType(s,l),p=e.length,h=n.length,f=a.kf.computeStrides(e),m=a.kf.computeStrides(n),b=a.ld.getBroadcastDims(e,i),g=a.ld.getBroadcastDims(n,i);if(b.length+g.length===0)for(let a=0;a<d.length;++a)d[a]=t(r[a%r.length],o[a%o.length]);else for(let y=0;y<d.length;++y){const e=a.kf.indexToLoc(y,c,u),n=e.slice(-p);b.forEach(t=>n[t]=0);const s=a.kf.locToIndex(n,p,f),i=e.slice(-h);g.forEach(t=>i[t]=0);const l=a.kf.locToIndex(i,h,m);d[y]=t(r[s],o[l])}return[d,i]}}const no=eo((t,e)=>t<0?e*t:t);function ro(t){const{inputs:e,backend:n}=t,{x:r,alpha:a}=e;Ga([r,a],"prelu");const o=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,[i,c]=no(r.shape,a.shape,o,s,r.dtype);return n.makeTensorInfo(c,r.dtype,i)}const ao={kernelName:a.gc,backendName:"cpu",kernelFunc:ro},oo=Ka(a.mc,t=>Math.max(0,t)),so={kernelName:a.mc,backendName:"cpu",kernelFunc:oo},io=Ka(a.nc,t=>Math.min(Math.max(0,t),6)),co={kernelName:a.nc,backendName:"cpu",kernelFunc:io};function uo(t,e,n,r,a){if("linear"===n)return Ja({inputs:{x:e},backend:t});if("relu"===n)return oo({inputs:{x:e},backend:t});if("elu"===n)return Ya({inputs:{x:e},backend:t});if("relu6"===n)return io({inputs:{x:e},backend:t});if("prelu"===n)return ro({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return $a({inputs:{x:e},backend:t,attrs:{alpha:a}});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function lo(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,o=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(a.shape,"float32",s)},i}const po={kernelName:a.y,backendName:"cpu",kernelFunc:lo};function ho(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return lo({inputs:{real:ho(t,e,"float32"),imag:ho(t,e,"float32")},backend:t})}const r=a.kf.makeZerosTypedArray(a.kf.sizeFromShape(e),n);return t.makeTensorInfo(e,n,r)}function fo(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,o)}const mo={kernelName:a.jc,backendName:"cpu",kernelFunc:fo};function bo(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{dtype:s}=r;if("complex64"===s){if("complex64"===o.dtype)return Ja({inputs:{x:o},backend:n});const t=ho(n,o.shape,o.dtype),e=bo({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),r=lo({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===o.dtype){const t=fo({inputs:{input:o},backend:n}),e=bo({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!a.kf.hasEncodingLoss(o.dtype,s)){const t=Ja({inputs:{x:o},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}if("int32"===s){const t=n.data.get(o.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(o.shape,"int32",e)}if("bool"===s){const t=n.data.get(o.dataId).values,e=a.kf.toTypedArray([0],o.dtype),[r,s]=eo((t,e)=>t!==e?1:0)(o.shape,[],t,e,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(s))}const go={kernelName:a.v,backendName:"cpu",kernelFunc:bo};function yo(t,e,n,r){return null==n?n=>{let{inputs:a,backend:o}=n;const{a:s,b:i}=a,c=o;Ga([s,i],t);const u=c.data.get(s.dataId).values,l=c.data.get(i.dataId).values,d=r||s.dtype,[p,h]=e(s.shape,i.shape,u,l,d);return c.makeTensorInfo(h,d,p)}:t=>{let{inputs:a,backend:o}=t;const{a:s,b:i}=a,c=o;if("complex64"===s.dtype||"complex64"===i.dtype){const t=bo({inputs:{x:s},backend:c,attrs:{dtype:"complex64"}}),e=c.data.get(t.dataId),r=e.complexTensorInfos.real,a=e.complexTensorInfos.imag,o=c.data.get(r.dataId).values,u=c.data.get(a.dataId).values,l=bo({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),d=c.data.get(l.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=c.data.get(p.dataId).values,m=c.data.get(h.dataId).values,[b,g,y]=n(s.shape,i.shape,o,u,f,m),v=c.makeTensorInfo(y,"float32",b),O=c.makeTensorInfo(y,"float32",g),x=lo({inputs:{real:v,imag:O},backend:c});return c.disposeIntermediateTensorInfo(t),c.disposeIntermediateTensorInfo(l),c.disposeIntermediateTensorInfo(v),c.disposeIntermediateTensorInfo(O),x}{const t=c.data.get(s.dataId).values,n=c.data.get(i.dataId).values,a=r||s.dtype,[o,u]=e(s.shape,i.shape,t,n,a);return c.makeTensorInfo(u,a,o)}}}function vo(t){return(e,n,r,o,s,i)=>{const c=a.ld.assertAndGetBroadcastShape(e,n),u=a.kf.sizeFromShape(c),l=c.length,d=a.kf.computeStrides(c),p=a.kf.getTypedArrayFromDType("float32",u),h=a.kf.getTypedArrayFromDType("float32",u),f=a.ld.getBroadcastDims(e,c),m=a.ld.getBroadcastDims(n,c),b=a.ld.mergeRealAndImagArrays(r,o),g=a.ld.mergeRealAndImagArrays(s,i),y=e.length,v=a.kf.computeStrides(e),O=n.length,x=a.kf.computeStrides(n);if(f.length+m.length===0)for(let a=0;a<p.length;a++){const e=a%b.length,n=a%g.length,r=t(b[2*e],b[2*e+1],g[2*n],g[2*n+1]);p[a]=r.real,h[a]=r.imag}else for(let w=0;w<p.length;w++){const e=a.kf.indexToLoc(w,l,d),n=e.slice(-y);f.forEach(t=>n[t]=0);const r=a.kf.locToIndex(n,y,v),o=e.slice(-O);m.forEach(t=>o[t]=0);const s=a.kf.locToIndex(o,O,x),i=t(b[2*r],b[2*r+1],g[2*s],g[2*s+1]);p[w]=i.real,h[w]=i.imag}return[p,h,c]}}const Oo=eo((t,e)=>t+e),xo=vo((t,e,n,r)=>({real:t+n,imag:e+r})),wo=yo(a.d,Oo,xo),ko={kernelName:a.d,backendName:"cpu",kernelFunc:wo};function jo(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{shape:s}=r,i=a.kf.sizeFromShape(o.shape),c=a.kf.inferFromImplicitShape(s,i),u=a.kf.sizeFromShape(c);a.kf.assert(i===u,()=>"The new shape (".concat(c,") has ").concat(u," elements and the old ")+"shape (".concat(o.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."),n.incRef(o.dataId);const l=n.data.get(o.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=c,e.shape=c}return{dataId:o.dataId,shape:c,dtype:o.dtype}}const No={kernelName:a.oc,backendName:"cpu",kernelFunc:jo};function So(t){const{inputs:e,backend:n,attrs:r}=t,{a:o,b:s}=e,{transposeA:i,transposeB:c}=r;Ga([o,s],"matMul");const u=o.shape.length,l=s.shape.length,d=i?o.shape[u-2]:o.shape[u-1],p=c?s.shape[l-1]:s.shape[l-2],h=i?o.shape[u-1]:o.shape[u-2],f=c?s.shape[l-2]:s.shape[l-1],m=o.shape.slice(0,-2),b=s.shape.slice(0,-2),g=a.kf.sizeFromShape(m),y=a.kf.sizeFromShape(b),v=g===y||1===g||1===y;a.kf.assert(u>=2&&l>=2&&v,()=>"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+"batch dimensions of (".concat(m,") and (").concat(b,")."));const O=(g>y?o.shape.slice(0,-2):s.shape.slice(0,-2)).concat([h,f]);a.kf.assert(d===p,()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(o.shape," and ")+"".concat(s.shape," and transposeA=").concat(i)+" and transposeB=".concat(c," must match."));const x=c?[y,f,p]:[y,p,f],w=jo({inputs:{x:o},backend:n,attrs:{shape:i?[g,d,h]:[g,h,d]}}),k=jo({inputs:{x:s},backend:n,attrs:{shape:x}}),j=i?w.shape[1]:w.shape[2],N=i?w.shape[2]:w.shape[1],S=c?k.shape[1]:k.shape[2],I=Math.max(g,y),T=n.data.get(w.dataId).values,E=n.data.get(k.dataId).values,C=a.kf.computeStrides(w.shape),A=a.kf.computeStrides(k.shape),[_,R,D]=i?[C[0],1,C[1]]:[C[0],C[1],1],[F,M,L]=c?[1,A[1],A[0]]:[A[1],1,A[0]],z=N*S,P=Object(a.qd)([I,N,S],w.dtype),B=P.values,V=n.blockSize;for(let a=0;a<I;a++)for(let t=0;t<N;t+=V)for(let e=0;e<S;e+=V)for(let n=0;n<j;n+=V){const r=Math.min(t+V,N),o=Math.min(e+V,S),s=Math.min(n+V,j);for(let i=t;i<r;i++)for(let t=e;t<o;t++){let e=0;for(let r=n;r<s;r++){const n=Math.min(a,g-1)*_,o=Math.min(a,y-1)*L;e+=T[n+i*R+r*D]*E[r*F+t*M+o]}B[a*z+(i*S+t)]+=e}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(O,P.dtype,P.values)}const Io={kernelName:a.s,backendName:"cpu",kernelFunc:So};const To={kernelName:a.cd,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:o,bias:s,preluActivationWeights:i}=e,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r;let p,h,f;const m=[];p=So({inputs:{a:a,b:o},attrs:{transposeA:c,transposeB:u},backend:n}),s&&(h=wo({inputs:{a:p,b:s},backend:n}),m.push(p),p=h),l&&(f=uo(n,p,l,i,d),m.push(p),p=f);for(const b of m)n.disposeIntermediateTensorInfo(b);return p}};function Eo(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Co={kernelName:a.a,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Ga(e,"abs");let r=new Float32Array(a.kf.sizeFromShape(e.shape));return r=Eo(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,"float32")}},Ao=Ka(a.b,t=>Math.acos(t)),_o={kernelName:a.b,backendName:"cpu",kernelFunc:Ao},Ro=Ka(a.c,t=>Math.acosh(t)),Do={kernelName:a.c,backendName:"cpu",kernelFunc:Ro};const Fo={kernelName:a.e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;Ga(e,"addN");const o=r.map(t=>n.data.get(t.dataId).values),s=Object(a.qd)(r[0].shape,r[0].dtype),i=s.values;for(let a=0;a<r.length;a++){const t=o[a];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Mo(t,e,n,r,o){const s=e.length,i=a.kf.sizeFromShape(e),c=a.kf.computeStrides(e),u=a.kf.computeStrides(o),l=a.kf.getTypedArrayFromDType(n,a.kf.sizeFromShape(o));for(let d=0;d<i;++d){const e=a.kf.indexToLoc(d,s,c),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];l[a.kf.locToIndex(n,s,u)]=t[d]}return l}function Lo(t){const{inputs:e,attrs:n,backend:r}=t,{x:a}=e,{perm:o}=n;Ga(a,"transpose");const s=a.shape.length,i=new Array(s);for(let u=0;u<i.length;u++)i[u]=a.shape[o[u]];const c=Mo(r.data.get(a.dataId).values,a.shape,a.dtype,o,i);return{dataId:r.write(c,i,a.dtype),shape:i,dtype:a.dtype}}const zo={kernelName:a.Xc,backendName:"cpu",kernelFunc:Lo};const Po={kernelName:a.f,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;Ga(o,"all");const c=a.kf.parseAxisParam(s,o.shape);let u=c;const l=a.ld.getAxesPermutation(u,o.shape.length);let d=o;null!=l&&(d=Lo({inputs:{x:o},backend:n,attrs:{perm:l}}),u=a.ld.getInnerMostAxes(u.length,o.shape.length)),a.ld.assertAxesAreInnerMostDims("all",u,d.shape.length);const[p,h]=a.ld.computeOutAndReduceShapes(d.shape,u),f=a.kf.sizeFromShape(h),m=a.kf.makeZerosTypedArray(a.kf.sizeFromShape(p),d.dtype),b=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const t=a*f;let e=b[t];for(let n=0;n<f;++n){const r=b[t+n];e=e&&r}m[a]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(p,d.dtype,m);if(i){const t=jo({inputs:{x:g},backend:n,attrs:{shape:a.ld.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const Bo={kernelName:a.g,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;Ga(o,"any");const c=a.kf.parseAxisParam(s,o.shape);let u=c;const l=a.ld.getAxesPermutation(u,o.shape.length);let d=o;null!=l&&(d=Lo({inputs:{x:o},backend:n,attrs:{perm:l}}),u=a.ld.getInnerMostAxes(u.length,o.shape.length)),a.ld.assertAxesAreInnerMostDims("any",u,d.shape.length);const[p,h]=a.ld.computeOutAndReduceShapes(d.shape,u),f=a.kf.sizeFromShape(h),m=a.kf.makeZerosTypedArray(a.kf.sizeFromShape(p),d.dtype),b=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const t=a*f;let e=b[t];for(let n=0;n<f;++n){const r=b[t+n];e=e||r}m[a]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(p,d.dtype,m);if(i){const t=jo({inputs:{x:g},backend:n,attrs:{shape:a.ld.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const Vo={kernelName:a.h,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s}=r;Ga(o,"argMax");let i=a.kf.parseAxisParam(s,o.shape);const c=a.ld.getAxesPermutation(i,o.shape.length);let u=o;const l=[];null!=c&&(u=Lo({inputs:{x:o},backend:n,attrs:{perm:c}}),l.push(u),i=a.ld.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],a.ld.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[d,p]=a.ld.computeOutAndReduceShapes(u.shape,i),h=a.kf.sizeFromShape(d),f=a.kf.makeZerosTypedArray(h,"int32"),m=a.kf.sizeFromShape(p),b=n.data.get(u.dataId).values;for(let a=0;a<f.length;++a){const t=a*m;let e=b[t],n=0;for(let r=0;r<m;++r){const a=b[t+r];a>e&&(e=a,n=r)}f[a]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(d,"int32",f)}};const Wo={kernelName:a.i,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s}=r;Ga(o,"argMin");let i=a.kf.parseAxisParam(s,o.shape);const c=a.ld.getAxesPermutation(i,o.shape.length);let u=o;const l=[];null!=c&&(u=Lo({inputs:{x:o},backend:n,attrs:{perm:c}}),l.push(u),i=a.ld.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],a.ld.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[d,p]=a.ld.computeOutAndReduceShapes(u.shape,i),h=a.kf.sizeFromShape(d),f=a.kf.makeZerosTypedArray(h,"int32"),m=a.kf.sizeFromShape(p),b=n.data.get(u.dataId).values;for(let a=0;a<f.length;++a){const t=a*m;let e=b[t],n=0;for(let r=0;r<m;++r){const a=b[t+r];a<e&&(e=a,n=r)}f[a]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(d,"int32",f)}},Uo=Ka(a.j,t=>Math.asin(t)),Go={kernelName:a.j,backendName:"cpu",kernelFunc:Uo},Ho=Ka(a.k,t=>Math.asinh(t)),qo={kernelName:a.k,backendName:"cpu",kernelFunc:Ho},Ko=Ka(a.l,t=>Math.atan(t)),Xo={kernelName:a.l,backendName:"cpu",kernelFunc:Ko},Yo=eo((t,e)=>Math.atan2(t,e)),Qo=yo(a.m,Yo),Jo={kernelName:a.m,backendName:"cpu",kernelFunc:Qo},Zo=Ka(a.n,t=>Math.atanh(t)),$o={kernelName:a.n,backendName:"cpu",kernelFunc:Zo};function ts(t,e,n,r,o,s){const i=o.strideHeight,c=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,d=o.effectiveFilterHeight,p=o.effectiveFilterWidth,h=o.padInfo.top,f=o.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(a.qd)(o.outShape,n),g=b.values,y=o.outShape[1]*o.outShape[2]*o.outShape[3],v=o.outShape[2]*o.outShape[3],O=o.outShape[3];for(let a=0;a<o.batchSize;++a){const e=a*y,n=a*r[0];for(let a=0;a<o.inChannels;++a)for(let b=0;b<o.outHeight;++b){const y=b*i-h,x=Math.max(0,y),w=Math.min(o.inHeight,d+y),k=e+b*v;for(let e=0;e<o.outWidth;++e){const i=e*c-f,d=Math.max(0,i),h=Math.min(o.inWidth,p+i);let b=m,y=0,v=0;for(let e=x;e<w;e+=u){const o=n+e*r[1];for(let e=d;e<h;e+=l){const n=t[o+e*r[2]+a];"max"===s&&n>b?b=n:"avg"===s&&(y+=n,v++)}if(isNaN(b))break}g[k+e*O+a]="avg"===s?y/v:b}}}return b}function es(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Object(a.qd)(r.outShape,"int32"),c=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterHeight,h=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,b=Object(a.qd)(e,n,t);for(let a=0;a<r.batchSize;++a)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*c-f;let g=n;for(;g<0;)g+=l;const y=Math.min(r.inHeight,p+n);for(let c=0;c<r.outWidth;++c){const p=c*u-m;let f=p;for(;f<0;)f+=d;const v=Math.min(r.inWidth,h+p);let O=Number.NEGATIVE_INFINITY,x=-1;for(let e=g;e<y;e+=l){const i=e-n;for(let n=f;n<v;n+=d){const c=n-p,u=b.get(a,e,n,t);u>O&&(O=u,x=o?s?((a*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:i*h+c)}}i.set(x,a,e,c,t)}}return i}function ns(t,e,n,r,o,s){const i=o.strideDepth,c=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,d=o.dilationHeight,p=o.dilationWidth,h=o.effectiveFilterDepth,f=o.effectiveFilterHeight,m=o.effectiveFilterWidth,b=o.padInfo.front,g=o.padInfo.top,y=o.padInfo.left,v="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,O=Object(a.qd)(o.outShape,n),x=O.values,w=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],k=o.outShape[2]*o.outShape[3]*o.outShape[4],j=o.outShape[3]*o.outShape[4],N=o.outShape[4];for(let a=0;a<o.batchSize;++a){const e=a*w,n=a*r[0];for(let a=0;a<o.inChannels;++a)for(let O=0;O<o.outDepth;++O){const w=O*i-b;let S=w;for(;S<0;)S+=l;const I=Math.min(o.inDepth,h+w),T=e+O*k;for(let e=0;e<o.outHeight;++e){const i=e*c-g;let h=i;for(;h<0;)h+=d;const b=Math.min(o.inHeight,f+i),O=T+e*j;for(let e=0;e<o.outWidth;++e){const i=e*u-y;let c=i;for(;c<0;)c+=p;const f=Math.min(o.inWidth,m+i),g=O+e*N;let w=v,k=0,j=0;for(let e=S;e<I;e+=l){const o=n+e*r[1];for(let e=h;e<b;e+=d){const n=o+e*r[2];for(let e=c;e<f;e+=p){const o=t[n+e*r[3]+a];if("max"===s&&o>w?w=o:"avg"===s&&(k+=o,j++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}x[g+a]="avg"===s?k/j:w}}}}return O}const rs={kernelName:a.o,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e;Ga(o,"avgPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=r;a.kf.assert(a.ld.eitherStridesOrDilationsAreOne(i,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.ld.computePool2DInfo(o.shape,s,i,1,c,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&a.kf.arraysEqual(l.inShape,l.outShape))d=Ja({inputs:{x:o},backend:n});else{const t=n.data.get(o.dataId).values,e=a.kf.computeStrides(o.shape),r=ts(t,o.shape,o.dtype,e,l,"avg");d=n.makeTensorInfo(l.outShape,o.dtype,r.values)}return d}};const as={kernelName:a.p,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{filterSize:s,strides:i,pad:c,dimRoundingMode:u,dataFormat:l,dilations:d}=r;Ga(o,"avgPool3d");let p=d;null==p&&(p=[1,1,1]);const h=a.ld.computePool3DInfo(o.shape,s,i,p,c,u,l),f=ns(n.data.get(o.dataId).values,o.shape,o.dtype,a.kf.computeStrides(o.shape),h,"avg");return n.makeTensorInfo(f.shape,"float32",f.values)}};const os={kernelName:a.q,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,{filterSize:i,strides:c,pad:u,dilations:l,dimRoundingMode:d}=r;Ga([o,s],"avgPool3DGrad");const p=a.ld.computePool3DInfo(s.shape,i,c,l,u,d),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,b=p.filterDepth,g=p.filterHeight,y=p.filterWidth,v=p.dilationDepth,O=p.dilationHeight,x=p.dilationWidth,w=p.effectiveFilterDepth,k=p.effectiveFilterHeight,j=p.effectiveFilterWidth,N=w-1-p.padInfo.front,S=j-1-p.padInfo.left,I=k-1-p.padInfo.top,T=Object(a.qd)(s.shape,"float32"),E=1/(b*g*y),C=n.bufferSync(o);for(let a=0;a<p.batchSize;++a)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inDepth;++e)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const o=e-N,s=n-I,i=r-S;let c=0;for(let e=0;e<w;e+=v){const n=(o+e)/h;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let e=0;e<k;e+=O){const r=(s+e)/f;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let e=0;e<j;e+=x){const o=(i+e)/m;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;c+=C.get(a,n,r,o,t)}}}T.set(c*E,a,e,n,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const ss={kernelName:a.r,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,i=s;Ga([o,s],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=r,d=a.ld.computePool2DInfo(i.shape,c,u,1,l),p=d.strideHeight,h=d.strideWidth,f=d.filterHeight,m=d.filterWidth,b=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,v=d.effectiveFilterWidth,O=v-1-d.padInfo.left,x=y-1-d.padInfo.top,w=Object(a.qd)(i.shape,"float32"),k=1/(f*m),j=n.data.get(o.dataId).values,N=Object(a.qd)(o.shape,"float32",j);for(let a=0;a<d.batchSize;++a)for(let t=0;t<d.inChannels;++t)for(let e=0;e<d.inHeight;++e)for(let n=0;n<d.inWidth;++n){const r=e-x,o=n-O;let s=0;for(let e=0;e<y;e+=b){const n=(r+e)/p;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let e=0;e<v;e+=g){const r=(o+e)/h;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;s+=N.get(a,n,r,t)}}w.set(s*k,a,e,n,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const is={kernelName:a.ib,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,scale:s,offset:i,mean:c,variance:u}=e;a.kf.assert(c.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),a.kf.assert(null==i||c.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),a.kf.assert(null==s||c.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ga([o,c,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const d=n.data.get(o.dataId).values,p=n.data.get(c.dataId).values,h=n.data.get(u.dataId).values,f=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),b=new Float32Array(d.length),g=m.length,y=f.length,v=h.length,O=p.length;let x=0,w=0,k=0,j=0;for(let a=0;a<d.length;++a)b[a]=m[x++]+(d[a]-p[w++])*f[k++]/Math.sqrt(h[j++]+l),x>=g&&(x=0),w>=O&&(w=0),k>=y&&(k=0),j>=v&&(j=0);return n.makeTensorInfo(o.shape,o.dtype,b)}};function cs(t,e,n,r,o){const s=a.Oe.isSliceContinous(r,e,n),i=a.kf.sizeFromShape(n),c=a.kf.computeStrides(r);if(s){const n=a.Oe.computeFlatOffset(e,c);return"string"===o?t.slice(n,n+i):t.subarray(n,n+i)}const u="string"===o?a.ld.fromUint8ToStringArray(t):t,l=Object(a.qd)(r,o,u),d=Object(a.qd)(n,o);for(let a=0;a<d.size;++a){const t=d.indexToLoc(a),n=t.map((t,n)=>t+e[n]);d.set(l.get(...n),...t)}return"string"===o?a.ld.fromStringArrayToUint8(d.values):d.values}function us(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{begin:s,size:i}=r;Ga(o,"slice");const[c,u]=a.Oe.parseSliceParams(o,s,i);a.Oe.assertParamsValid(o,c,u);const l=cs(n.data.get(o.dataId).values,c,u,o.shape,o.dtype);return n.makeTensorInfo(u,o.dtype,l)}const ls={kernelName:a.Ec,backendName:"cpu",kernelFunc:us};const ds={kernelName:a.t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockShape:s,crops:i}=r;Ga([o],"batchToSpaceND");const c=s.reduce((t,e)=>t*e),u=a.ld.getReshaped(o.shape,s,c),l=a.ld.getPermuted(u.length,s.length),d=a.ld.getReshapedPermuted(o.shape,s,c),p=a.ld.getSliceBeginCoords(i,s.length),h=a.ld.getSliceSize(d,i,s.length),f=jo({inputs:{x:o},backend:n,attrs:{shape:u}}),m=Lo({inputs:{x:f},backend:n,attrs:{perm:l}}),b=jo({inputs:{x:m},backend:n,attrs:{shape:d}}),g=us({inputs:{x:b},backend:n,attrs:{begin:p,size:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}};function ps(t,e,n,r,o){const s=a.kf.sizeFromShape(r),i=a.kf.makeZerosTypedArray(o,n);for(let a=0;a<t.length;a++){const n=t[a];if(n<0)throw new Error("Input x must be non-negative!");n>=o||(i[n]+=s>0?e[a]:1)}return i}function hs(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o=t.shape[0],s=t.shape[1],i=Object(a.qd)([o,n],e.dtype);for(let a=0;a<o;a++)for(let o=0;o<s;o++){const s=t.get(a,o);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,a,s):e.size>0?i.set(i.get(a,s)+e.get(a,o),a,s):i.set(i.get(a,s)+1,a,s))}return i}const fs={kernelName:a.u,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:o}=e,{size:s}=r,i=ps(n.data.get(a.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,i)}};function ms(t){return(e,n,r)=>{const o=a.kf.getTypedArrayFromDType(n,e.length);for(let a=0;a<e.length;++a)o[a]=t(e[a],r);return o}}const bs=ms(t=>Math.ceil(t)),gs=Xa(a.w,bs),ys={kernelName:a.w,backendName:"cpu",kernelFunc:gs},vs=Ka(a.x,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),Os={kernelName:a.x,backendName:"cpu",kernelFunc:vs},xs={kernelName:a.z,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(a.kf.sizeFromShape(e.shape)),o=n.data.get(e.dataId),s=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,c=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let a=0;a<c.length;a++){const t=c[a],e=u[a];r[a]=Math.hypot(t,e)}return n.makeOutput(r,e.shape,"float32")}};function ws(t,e,n,r){const o=a.kf.getArrayFromDType(n,a.kf.sizeFromShape(e));if(r&&"string"!==n){let e=0;t.forEach(t=>{const n=a.kf.sizeFromShape(t.shape);o.set(t.vals,e),e+=n})}else{let r=0;t.forEach(t=>{const s="string"===n?a.ld.fromUint8ToStringArray(t.vals):t.vals;let i=0;for(let n=0;n<t.shape[0];++n){const a=n*e[1]+r;for(let e=0;e<t.shape[1];++e)o[a+e]=s[i++]}r+=t.shape[1]})}return o}function ks(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.imag,o=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,o)}const js={kernelName:a.rb,backendName:"cpu",kernelFunc:ks};function Ns(t){const{inputs:e,backend:n,attrs:r}=t,{axis:o}=r,s=a.kf.parseAxisParam(o,e[0].shape)[0];let i=a.ld.computeOutShape(e.map(t=>t.shape),s);if(0===a.kf.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(t=>a.kf.sizeFromShape(t.shape)>0);if(1===c.length)return Ja({inputs:{x:c[0]},backend:n});const u=c.map(t=>t.shape);if(a.ld.assertParamsConsistent(u,s),"complex64"===c[0].dtype){const t=c.map(t=>fo({inputs:{input:t},backend:n})),e=c.map(t=>ks({inputs:{input:t},backend:n})),r=Ns({inputs:t,backend:n,attrs:{axis:s}}),a=Ns({inputs:e,backend:n,attrs:{axis:s}}),o=lo({inputs:{real:r,imag:a},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),o}const l=c.map(t=>{const e=a.kf.sizeFromShape(t.shape.slice(s));return jo({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}),d=l.map(t=>({vals:n.data.get(t.dataId).values,shape:t.shape}));i=a.ld.computeOutShape(l.map(t=>t.shape),1);const p=1===l[0].shape[0],h=ws(d,i,e[0].dtype,p),f=a.ld.computeOutShape(c.map(t=>t.shape),s),m=n.makeTensorInfo(f,e[0].dtype,h);return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),m}const Ss={kernelName:a.A,backendName:"cpu",kernelFunc:Ns};function Is(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dataFormat:u,dilations:l,dimRoundingMode:d}=r;Ga([o,s],"conv2d");const p=a.ld.convertConv2DDataFormat(u),h=a.ld.computeConv2DInfo(o.shape,s.shape,i,l,c,d,!1,p),f=h.filterHeight,m=h.filterWidth,b=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,v=h.padInfo.top,O="channelsLast"===h.dataFormat,x=new a.Uc(h.outShape,o.dtype),w=a.kf.computeStrides(o.shape),k=a.kf.computeStrides(s.shape),j=w[0],N=O?w[1]:w[2],S=O?w[2]:1,I=O?1:w[1],T=x.strides[0],E=O?x.strides[1]:x.strides[2],C=O?x.strides[2]:1,A=O?1:x.strides[1],_=n.data.get(o.dataId).values,R=n.data.get(s.dataId).values,D=x.values;for(let a=0;a<h.batchSize;++a){const t=a*j,e=a*T;for(let n=0;n<h.outHeight;++n){const r=e+n*E,a=n*h.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*b;if(n<0||n>=h.inHeight)continue;const o=e*k[0],s=t+n*N;for(let t=0;t<h.outWidth;++t){const e=r+t*C,n=t*h.strideWidth-y;for(let t=0;t<m;++t){const r=n+t*g;if(r<0||r>=h.inWidth)continue;const a=s+r*S;let i=o+t*k[1];for(let t=0;t<h.inChannels;++t){const n=_[a+t*I];for(let t=0;t<h.outChannels;++t)D[e+t*A]+=n*R[i+t];i+=h.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,D)}const Ts={kernelName:a.B,backendName:"cpu",kernelFunc:Is};const Es={kernelName:a.C,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:d}=r;Ga([o,s],"conv2dBackpropFilter");const p=a.ld.convertConv2DDataFormat(u),h=a.ld.computeConv2DInfo(o.shape,d,i,1,c,l,!1,p),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=h,y="channelsLast"===h.dataFormat,v=new a.Uc(h.filterShape,"float32"),O=h.padInfo.left,x=h.padInfo.top,w=n.data.get(o.dataId).values,k=n.data.get(s.dataId).values,j=new a.Uc(o.shape,o.dtype,w),N=new a.Uc(s.shape,s.dtype,k);for(let a=0;a<b;++a){const t=Math.max(0,Math.ceil((x-a)/f)),e=Math.min(h.outHeight,(h.inHeight+x-a)/f);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((O-n)/m)),o=Math.min(h.outWidth,(h.inWidth+O-n)/m);for(let s=0;s<h.inChannels;++s)for(let i=0;i<h.outChannels;++i){let c=0;for(let u=0;u<h.batchSize;++u)for(let l=t;l<e;++l){const t=a+l*f-x;for(let e=r;e<o;++e){const r=n+e*m-O;c+=y?j.get(u,t,r,s)*N.get(u,l,e,i):j.get(u,s,t,r)*N.get(u,i,l,e)}}v.set(c,a,n,s,i)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Cs={kernelName:a.D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{inputShape:i,strides:c,pad:u,dataFormat:l,dimRoundingMode:d}=r;Ga([o,s],"conv2dBackpropInput");const p=a.kf.computeStrides(s.shape),h=a.kf.computeStrides(o.shape);let f=a.ld.convertConv2DDataFormat(l);const m=a.ld.computeConv2DInfo(i,s.shape,c,1,u,d,!1,f),b=new a.Uc(m.inShape,"float32"),g=b.values,y=n.data.get(o.dataId).values,v=n.data.get(s.dataId).values,[O,x,w]=p,{batchSize:k,filterHeight:j,filterWidth:N,inChannels:S,inHeight:I,inWidth:T,outChannels:E,outHeight:C,outWidth:A,strideHeight:_,strideWidth:R}=m;f=m.dataFormat;const D=j-1-m.padInfo.top,F=N-1-m.padInfo.left,M="channelsLast"===f,L=b.strides[0],z=M?b.strides[1]:b.strides[2],P=M?b.strides[2]:1,B=M?1:b.strides[1],V=h[0],W=M?h[1]:h[2],U=M?h[2]:1,G=M?1:h[1];for(let a=0;a<k;++a)for(let t=0;t<S;++t)for(let e=0;e<I;++e){const n=e-D,r=Math.max(0,Math.ceil(n/_)),o=Math.min(C,(j+n)/_);for(let s=0;s<T;++s){const i=s-F,c=Math.max(0,Math.ceil(i/R)),u=Math.min(A,(N+i)/R);let l=0;for(let e=r;e<o;++e){const r=e*_-n;for(let n=c;n<u;++n){const o=V*a+W*e+U*n,s=O*(j-1-r)+x*(N-1-(n*R-i))+w*t;for(let t=0;t<E;++t){l+=y[o+G*t]*v[s+t]}}}g[L*a+z*e+P*s+B*t]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const As={kernelName:a.E,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dilations:u}=r;Ga([o,s],"conv3d");const l=a.ld.computeConv3DInfo(o.shape,s.shape,i,u,c),{filterDepth:d,filterHeight:p,filterWidth:h,dilationDepth:f,dilationHeight:m,dilationWidth:b,padInfo:g}=l,y=g.front,v=g.left,O=g.top,x=new a.Uc(l.outShape,o.dtype),w=n.data.get(o.dataId).values,k=n.data.get(s.dataId).values,j=x.values,N=a.kf.computeStrides(o.shape),S=a.kf.computeStrides(s.shape);for(let a=0;a<l.batchSize;++a){const t=a*N[0],e=a*x.strides[0];for(let n=0;n<l.outDepth;++n){const r=e+n*x.strides[1],a=n*l.strideDepth-y;for(let e=0;e<d;++e){const n=a+e*f;if(n<0||n>=l.inDepth)continue;const o=e*S[0],s=t+n*N[1];for(let t=0;t<l.outHeight;++t){const e=r+t*x.strides[2],n=t*l.strideHeight-O;for(let t=0;t<p;++t){const r=n+t*m;if(r<0||r>=l.inHeight)continue;const a=o+t*S[1],i=s+r*N[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-v;for(let t=0;t<h;++t){const e=r+t*b;if(e<0||e>=l.inWidth)continue;const o=a+t*S[2],s=i+e*l.inChannels;let c=o;for(let t=0;t<l.inChannels;++t){const e=w[s+t];for(let t=0;t<l.outChannels;++t)j[n+t]+=e*k[c+t];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const _s={kernelName:a.F,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,pad:c,filterShape:u}=r;Ga([o,s],"conv3dBackpropFilterV2");const l=a.kf.computeStrides(o.shape),d=a.kf.computeStrides(s.shape),p=a.ld.computeConv3DInfo(o.shape,u,i,1,c),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,b=p.filterDepth,g=p.filterHeight,y=p.filterWidth,v=new a.Uc(p.filterShape,"float32"),O=v.values,[x,w,k,j]=v.strides,N=n.data.get(s.dataId).values,[S,I,T,E]=d,C=n.data.get(o.dataId).values,[A,_,R,D]=l,F=p.padInfo.front,M=p.padInfo.left,L=p.padInfo.top;for(let a=0;a<b;++a){const t=Math.max(0,Math.ceil((F-a)/h)),e=Math.min(p.outDepth,(p.inDepth+F-a)/h),n=a*x;for(let r=0;r<g;++r){const o=Math.max(0,Math.ceil((L-r)/f)),s=Math.min(p.outHeight,(p.inHeight+L-r)/f),i=r*w+n;for(let n=0;n<y;++n){const c=Math.max(0,Math.ceil((M-n)/m)),u=Math.min(p.outWidth,(p.inWidth+M-n)/m),l=n*k+i;for(let i=0;i<p.inChannels;++i){const d=i*j+l;for(let l=0;l<p.outChannels;++l){let b=0;for(let d=0;d<p.batchSize;++d){const p=d*A,g=d*S;for(let d=t;d<e;++d){const t=(a+d*h-F)*_+p,e=d*I+g;for(let a=o;a<s;++a){const o=(r+a*f-L)*R+t,s=a*T+e;for(let t=c;t<u;++t){const e=t*E+s;b+=C[(n+t*m-M)*D+o+i]*N[e+l]}}}}O[d+l]=b}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Rs={kernelName:a.G,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{pad:i,strides:c,inputShape:u}=r;Ga([o],"conv3dBackpropInputV2");const l=a.kf.computeStrides(o.shape),d=a.kf.computeStrides(s.shape),p=a.ld.computeConv3DInfo(u,s.shape,c,1,i),h=new a.Uc(p.inShape,"float32"),f=h.values,[m,b,g,y]=h.strides,v=n.data.get(o.dataId).values,[O,x,w,k]=l,j=n.data.get(s.dataId).values,[N,S,I,T]=d,{batchSize:E,filterDepth:C,filterHeight:A,filterWidth:_,inChannels:R,inDepth:D,inHeight:F,inWidth:M,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:V,strideHeight:W,strideWidth:U}=p,G=C-1-p.padInfo.front,H=A-1-p.padInfo.top,q=_-1-p.padInfo.left;for(let a=0;a<E;++a)for(let t=0;t<R;++t)for(let e=0;e<D;++e){const n=e-G,r=Math.max(0,Math.ceil(n/V)),o=Math.min(z,(C+n)/V);for(let s=0;s<F;++s){const i=s-H,c=Math.max(0,Math.ceil(i/W)),u=Math.min(P,(A+i)/W);for(let l=0;l<M;++l){const d=l-q,p=Math.max(0,Math.ceil(d/U)),h=Math.min(B,(_+d)/U);let E=0;for(let e=r;e<o;++e){const r=e*V-n;for(let n=c;n<u;++n){const o=n*W-i;for(let s=p;s<h;++s){const i=O*a+x*e+w*n+k*s,c=N*(C-1-r)+S*(A-1-o)+I*(_-1-(s*U-d))+T*t;for(let t=0;t<L;++t){E+=v[i+t]*j[c+t]}}}}f[m*a+b*e+g*s+y*l+t]=E}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},Ds=Ka(a.H,t=>Math.cos(t)),Fs={kernelName:a.H,backendName:"cpu",kernelFunc:Ds},Ms=Ka(a.I,t=>Math.cosh(t)),Ls={kernelName:a.I,backendName:"cpu",kernelFunc:Ms};const zs={kernelName:a.J,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:o,boxes:s,boxInd:i}=e,{cropSize:c,method:u,extrapolationValue:l}=r,[d,p,h,f]=o.shape,m=s.shape[0],[b,g]=c,y=Object(a.qd)([m,b,g,f],"float32"),v=n.data.get(s.dataId).values,O=n.data.get(i.dataId).values,x=n.data.get(o.dataId).values,w=a.kf.computeStrides(o.shape),k=a.kf.computeStrides(y.shape);for(let a=0;a<m;a++){const t=4*a,e=v[t],n=v[t+1],r=v[t+2],o=v[t+3],s=O[a];if(s>=d)continue;const i=b>1?(r-e)*(p-1)/(b-1):0,c=g>1?(o-n)*(h-1)/(g-1):0;for(let d=0;d<b;d++){const t=b>1?e*(p-1)+d*i:.5*(e+r)*(p-1);if(t<0||t>p-1)for(let e=0;e<g;e++)for(let t=0;t<f;t++){const n=t+e*k[2]+d*k[1]+a*k[0];y.values[n]=l}else if("bilinear"===u){const e=Math.floor(t),r=Math.ceil(t),i=t-e;for(let t=0;t<g;t++){const u=g>1?n*(h-1)+t*c:.5*(n+o)*(h-1);if(u<0||u>h-1){for(let e=0;e<f;e++){const n=e+t*k[2]+d*k[1]+a*k[0];y.values[n]=l}continue}const p=Math.floor(u),m=Math.ceil(u),b=u-p;for(let n=0;n<f;n++){let o=n+p*w[2]+e*w[1]+s*w[0];const c=x[o];o=n+m*w[2]+e*w[1]+s*w[0];const u=x[o];o=n+p*w[2]+r*w[1]+s*w[0];const l=x[o];o=n+m*w[2]+r*w[1]+s*w[0];const h=c+(u-c)*b,f=l+(x[o]-l)*b;o=n+t*k[2]+d*k[1]+a*k[0],y.values[o]=h+(f-h)*i}}}else for(let e=0;e<g;++e){const r=g>1?n*(h-1)+e*c:.5*(n+o)*(h-1);if(r<0||r>h-1){for(let t=0;t<f;t++){const n=t+e*k[2]+d*k[1]+a*k[0];y.values[n]=l}continue}const i=Math.round(r),u=Math.round(t);for(let t=0;t<f;t++){const n=t+i*w[2]+u*w[1]+s*w[0],r=t+e*k[2]+d*k[1]+a*k[0];y.values[r]=x[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Ps={kernelName:a.K,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,exclusive:i,reverse:c}=r;Ga(o,"cumsum");const u=a.ld.getAxesPermutation([s],o.shape.length);let l=o;null!=u&&(l=Lo({inputs:{x:o},backend:n,attrs:{perm:u}}));const d=a.ld.getInnerMostAxes(1,o.shape.length)[0];if(d!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(d));const p=Object(a.jf)(l.dtype,"int32"),h=a.kf.makeZerosTypedArray(a.kf.sizeFromShape(l.shape),p),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],b=c?(t,e)=>t+m-e-1:(t,e)=>t+e;for(let a=0;a<f.length;a+=m)for(let t=0;t<m;t++){const e=b(a,t);if(0===t)h[e]=i?0:f[e];else{const n=b(a,t-1);h[e]=i?f[n]+h[n]:f[e]+h[n]}}const g=n.makeTensorInfo(l.shape,p,h);if(null!=u){const t=Lo({inputs:{x:g},backend:n,attrs:{perm:a.ld.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}};const Bs={kernelName:a.M,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:o}=e,{size:s,binaryOutput:i}=r;if(1===a.shape.length){const t=ps(n.data.get(a.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,t)}if(2===a.shape.length){const t=hs(n.bufferSync(a),n.bufferSync(o),s,i);return n.makeTensorInfo(t.shape,o.dtype,t.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(a.shape.length,"."))}};const Vs={kernelName:a.N,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockSize:s,dataFormat:i}=r;a.kf.assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(i)),a.kf.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(s));const c=o.shape[0],u=o.shape[1],l=o.shape[2],d=o.shape[3],p=u*s,h=l*s,f=d/(s*s),m=n.data.get(o.dataId).values,b=new Float32Array(c*p*h*f);let g=0;for(let a=0;a<c;++a)for(let t=0;t<p;++t){const e=Math.floor(t/s),n=t%s;for(let t=0;t<h;++t){const r=Math.floor(t/s),o=(n*s+t%s)*f;for(let t=0;t<f;++t){const n=t+o+d*(r+l*(e+u*a));b[g++]=m[n]}}}return n.makeTensorInfo([c,p,h,f],o.dtype,b)}};function Ws(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dilations:u,dimRoundingMode:l}=r;Ga([o,s],"depthwiseConv2DNative");const d=a.kf.computeStrides(o.shape),p=a.kf.computeStrides(s.shape);let h=u;null==h&&(h=[1,1]),a.kf.assert(a.ld.eitherStridesOrDilationsAreOne(i,h),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(h,"'"));const f=a.ld.computeConv2DInfo(o.shape,s.shape,i,h,c,l,!0),{filterHeight:m,filterWidth:b,dilationHeight:g,dilationWidth:y,padInfo:v}=f,O=v.left,x=v.top,w=f.outChannels/f.inChannels,k=new a.Uc(f.outShape,o.dtype),j=n.data.get(o.dataId).values,N=n.data.get(s.dataId).values,S=k.values;for(let a=0;a<f.batchSize;++a){const t=a*d[0],e=a*k.strides[0];for(let n=0;n<f.outHeight;++n){const r=e+n*k.strides[1],a=n*f.strideHeight-O;for(let e=0;e<m;++e){const n=a+e*g;if(n<0||n>=f.inHeight)continue;const o=e*p[0],s=t+n*d[1];for(let t=0;t<f.outWidth;++t){const e=r+t*k.strides[2],n=t*f.strideWidth-x;for(let t=0;t<b;++t){const r=n+t*y;if(r<0||r>=f.inWidth)continue;const a=o+t*p[1],i=s+r*f.inChannels;let c=e,u=a;for(let t=0;t<f.inChannels;++t){const e=j[i+t];for(let t=0;t<w;++t)S[c+t]+=e*N[u+t];c+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Us={kernelName:a.O,backendName:"cpu",kernelFunc:Ws};const Gs={kernelName:a.P,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,filterShape:d}=r;Ga([o,s],"depthwiseConv2dNativeBackpropFilter");const p=a.ld.computeConv2DInfo(o.shape,d,i,c,u,l,!0),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:b}=p,g=new a.Uc(p.filterShape,"float32"),y=p.padInfo.left,v=p.padInfo.top,O=p.outChannels/p.inChannels,x=n.data.get(o.dataId).values,w=new a.Uc(o.shape,o.dtype,x),k=n.data.get(s.dataId).values,j=new a.Uc(s.shape,s.dtype,k);for(let a=0;a<m;++a){const t=Math.max(0,Math.ceil((v-a)/h)),e=Math.min(p.outHeight,(p.inHeight+v-a)/h);for(let n=0;n<b;++n){const r=Math.max(0,Math.ceil((y-n)/f)),o=Math.min(p.outWidth,(p.inWidth+y-n)/f);for(let s=0;s<p.outChannels;++s){const i=Math.trunc(s/O),c=s%O;let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<e;++c){const t=a+c*h-v;for(let e=r;e<o;++e){const r=n+e*f-y;u+=w.get(l,t,r,i)*j.get(l,c,e,s)}}g.set(u,a,n,i,c)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Hs={kernelName:a.Q,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,inputShape:d}=r;Ga([o,s],"depthwiseConv2DNativeBackpropInput");const p=a.kf.computeStrides(o.shape),h=a.kf.computeStrides(s.shape),f=a.ld.computeConv2DInfo(d,s.shape,i,c,u,l,!0),m=new a.Uc(f.inShape,"float32"),b=m.values,[g,y,v]=m.strides,O=n.data.get(o.dataId).values,[x,w,k]=p,j=n.data.get(s.dataId).values,[N,S,I]=h,{batchSize:T,filterHeight:E,filterWidth:C,inChannels:A,inHeight:_,inWidth:R,outChannels:D,outHeight:F,outWidth:M,strideHeight:L,strideWidth:z}=f,P=E-1-f.padInfo.top,B=C-1-f.padInfo.left,V=D/A;for(let a=0;a<T;++a)for(let t=0;t<A;++t)for(let e=0;e<_;++e){const n=e-P,r=Math.max(0,Math.ceil(n/L)),o=Math.min(F,(E+n)/L);for(let s=0;s<R;++s){const i=s-B,c=Math.max(0,Math.ceil(i/z)),u=Math.min(M,(C+i)/z);let l=0;for(let e=r;e<o;++e){const r=e*L-n;for(let n=c;n<u;++n){const o=x*a+w*e+k*n,s=N*(E-1-r)+S*(C-1-(n*z-i))+I*t;for(let e=0;e<V;++e){l+=O[o+(t*V+e)]*j[s+e]}}}b[g*a+y*e+v*s+t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const qs={kernelName:a.R,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,o=a.kf.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Object(a.qd)([o,o],r.dtype),c=i.values;for(let a=0;a<s.length;a++)c[a*o+a]=s[a];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Ks={kernelName:a.S,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:r}=t;const{x:o,filter:s}=e,{strides:i,pad:c,dilations:u}=r,l=n,d=l.data.get(o.dataId).values,p=o.shape.length,h=l.data.get(s.dataId).values,f=s.shape.length,{batchSize:m,inHeight:b,inWidth:g,inChannels:y,outHeight:v,outWidth:O,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:j,filterWidth:N,dilationHeight:S,dilationWidth:I,outShape:T}=a.ld.computeDilation2DInfo(o.shape,s.shape,i,c,"NHWC",u),E=a.kf.sizeFromShape(T),C=T.length,A=a.kf.getArrayFromDType(o.dtype,E);for(let _=0;_<m;++_)for(let t=0;t<v;++t){const e=t*w-x.top;for(let n=0;n<O;++n){const r=n*k-x.left;for(let i=0;i<y;++i){let c=Number.MIN_SAFE_INTEGER;for(let t=0;t<j;++t){const n=e+t*S;if(n>=0&&n<b)for(let e=0;e<N;++e){const u=r+e*I;if(u>=0&&u<g){const r=a.kf.locToIndex([_,n,u,i],p,a.kf.computeStrides(o.shape)),l=a.kf.locToIndex([t,e,i],f,a.kf.computeStrides(s.shape)),m=d[r]+h[l];m>c&&(c=m)}}}A[a.kf.locToIndex([_,t,n,i],C,a.kf.computeStrides(T))]=c}}}return{dataId:l.write(a.kf.toTypedArray(A,o.dtype),T,o.dtype),shape:T,dtype:o.dtype}}},Xs={kernelName:a.T,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:r}=t;const{x:o,filter:s,dy:i}=e,{strides:c,pad:u,dilations:l}=r,d=n,p=a.kf.toNestedArray(o.shape,d.data.get(o.dataId).values),h=a.kf.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:v,padInfo:O,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:j,dilationHeight:N,dilationWidth:S,outShape:I}=a.ld.computeDilation2DInfo(o.shape,s.shape,c,u,"NHWC",l);a.kf.assert(i.rank===I.length,()=>"Error in ".concat(a.T,", dy ")+"must have the same rank as output ".concat(I.length,", but got ")+"".concat(i.rank));const T=a.kf.toNestedArray(I,d.data.get(i.dataId).values),E=a.kf.makeZerosNestedTypedArray(s.shape,s.dtype);for(let a=0;a<f;++a)for(let t=0;t<y;++t){const e=t*x-O.top;for(let n=0;n<v;++n){const r=n*w-O.left;for(let o=0;o<g;++o){let s=Number.MIN_SAFE_INTEGER,i=0,c=0;for(let t=0;t<k;++t){const n=e+t*N;if(n>=0&&n<m)for(let e=0;e<j;++e){const u=r+e*S;if(u>=0&&u<b){const r=p[a][n][u][o]+h[t][e][o];r>s&&(s=r,i=t,c=e)}}}E[i][c][o]+=T[a][t][n][o]}}}return{dataId:d.write(a.kf.toTypedArray(E,o.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Ys={kernelName:a.U,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:r}=t;const{x:o,filter:s,dy:i}=e,{strides:c,pad:u,dilations:l}=r,d=n,p=a.kf.toNestedArray(o.shape,d.data.get(o.dataId).values),h=a.kf.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:v,padInfo:O,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:j,dilationHeight:N,dilationWidth:S,outShape:I}=a.ld.computeDilation2DInfo(o.shape,s.shape,c,u,"NHWC",l);a.kf.assert(i.rank===I.length,()=>"Error in ".concat(a.U,", dy ")+"must have the same rank as output ".concat(I.length,", but got ")+"".concat(i.rank));const T=a.kf.toNestedArray(I,d.data.get(i.dataId).values),E=a.kf.makeZerosNestedTypedArray(o.shape,o.dtype);for(let a=0;a<f;++a)for(let t=0;t<y;++t){const e=t*x-O.top;for(let n=0;n<v;++n){const r=n*w-O.left;for(let o=0;o<g;++o){let s=Number.MIN_SAFE_INTEGER,i=e<0?0:e,c=r<0?0:r;for(let t=0;t<k;++t){const n=e+t*N;if(n>=0&&n<m)for(let e=0;e<j;++e){const u=r+e*S;if(u>=0&&u<b){const r=p[a][n][u][o]+h[t][e][o];r>s&&(s=r,i=n,c=u)}}}E[a][i][c][o]+=T[a][t][n][o]}}}return{dataId:d.write(a.kf.toTypedArray(E,o.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};const Qs={kernelName:a.W,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:o}=e;Ga([r,o],"eluGrad");const s=new Float32Array(a.kf.sizeFromShape(o.shape)),i=n.data.get(o.dataId).values,c=n.data.get(r.dataId).values;for(let a=0;a<i.length;++a){const t=i[a];s[a]=t>=1?c[a]:c[a]*(t+1)}return n.makeTensorInfo(o.shape,"float32",s)}},Js=eo((t,e)=>t===e?1:0),Zs=yo(a.X,Js,null,"bool"),$s={kernelName:a.X,backendName:"cpu",kernelFunc:Zs},ti=a.ld.ERF_P,ei=a.ld.ERF_A1,ni=a.ld.ERF_A2,ri=a.ld.ERF_A3,ai=a.ld.ERF_A4,oi=a.ld.ERF_A5,si=Ka(a.Y,t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+ti*n);return e*(1-((((oi*r+ai)*r+ri)*r+ni)*r+ei)*r*Math.exp(-n*n))}),ii={kernelName:a.Y,backendName:"cpu",kernelFunc:si},ci=ms(t=>Math.exp(t)),ui=Xa(a.Z,ci),li={kernelName:a.Z,backendName:"cpu",kernelFunc:ui};function di(t){const{inputs:e,backend:n,attrs:r}=t,{input:o}=e,{dim:s}=r,i=o.shape.length,c=o.shape.slice();let u=s;return s<0&&(a.kf.assert(-(i+1)<=s,()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]")),u=i+s+1),c.splice(u,0,1),jo({inputs:{x:o},backend:n,attrs:{shape:c}})}const pi={kernelName:a.ab,backendName:"cpu",kernelFunc:di},hi=ms(t=>Math.expm1(t)),fi=Xa(a.bb,hi),mi={kernelName:a.bb,backendName:"cpu",kernelFunc:fi},bi=eo((t,e)=>t*e),gi=vo((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),yi=yo(a.Ub,bi,gi),vi={kernelName:a.Ub,backendName:"cpu",kernelFunc:yi},Oi=eo((t,e)=>t/e),xi=yo(a.kc,Oi),wi={kernelName:a.kc,backendName:"cpu",kernelFunc:xi},ki=eo((t,e)=>t-e),ji=vo((t,e,n,r)=>({real:t-n,imag:e-r})),Ni=yo(a.Pc,ki,ji),Si={kernelName:a.Pc,backendName:"cpu",kernelFunc:Ni};function Ii(t,e,n){const r=t.shape,o=r[0],s=r[1],i=n.data.get(t.dataId),c=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[o,s],d=a.kf.sizeFromShape(l),p=a.kf.getTypedArrayFromDType("float32",d),h=a.kf.getTypedArrayFromDType("float32",d);for(let g=0;g<o;g++){const t=us({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=us({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),o=lo({inputs:{real:t,imag:r},backend:n}),{real:i,imag:l}=Ti(o,e,n),d=a.ld.mergeRealAndImagArrays(i,l);for(let e=0;e<s;e++){const t=a.ld.getComplexWithIndex(d,e);p[g*s+e]=t.real,h[g*s+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o)}const f=n.makeTensorInfo(l,"float32",p),m=n.makeTensorInfo(l,"float32",h),b=lo({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function Ti(t,e,n){const r=a.kf.sizeFromShape(t.shape),o=n.data.get(t.dataId),s=n.data.get(o.complexTensorInfos.real.dataId).values,i=n.data.get(o.complexTensorInfos.imag.dataId).values;if(0===((c=r)&c-1)){const o=function t(e,n,r,o,s){if(1===r)return{real:e,imag:n};const i=a.ld.mergeRealAndImagArrays(e,n),c=r/2,u=a.ld.complexWithEvenIndex(i),l=u.real,d=u.imag,p=[l.length],h=s.makeTensorInfo(p,"float32",l),f=s.makeTensorInfo(p,"float32",d),m=lo({inputs:{real:h,imag:f},backend:s}),b=a.ld.complexWithOddIndex(i),g=b.real,y=b.imag,v=[g.length],O=s.makeTensorInfo(v,"float32",g),x=s.makeTensorInfo(v,"float32",y),w=lo({inputs:{real:O,imag:x},backend:s}),k=t(l,d,c,o,s),j=k.real,N=k.imag,S=[j.length],I=s.makeTensorInfo(S,"float32",j),T=s.makeTensorInfo(S,"float32",N),E=lo({inputs:{real:I,imag:T},backend:s}),C=t(g,y,c,o,s),A=C.real,_=C.imag,R=[A.length],D=s.makeTensorInfo(R,"float32",A),F=s.makeTensorInfo(R,"float32",_),M=lo({inputs:{real:D,imag:F},backend:s}),L=a.ld.exponents(r,o),z=[L.real.length],P=s.makeTensorInfo(z,"float32",L.real),B=s.makeTensorInfo(z,"float32",L.imag),V=lo({inputs:{real:P,imag:B},backend:s}),W=yi({inputs:{a:V,b:M},backend:s}),U=wo({inputs:{a:E,b:W},backend:s}),G=Ni({inputs:{a:E,b:W},backend:s}),H=fo({inputs:{input:U},backend:s}),q=fo({inputs:{input:G},backend:s}),K=ks({inputs:{input:U},backend:s}),X=ks({inputs:{input:G},backend:s}),Y=Ns({inputs:[H,q],backend:s,attrs:{axis:0}}),Q=Ns({inputs:[K,X],backend:s,attrs:{axis:0}}),J=s.data.get(Y.dataId).values,Z=s.data.get(Q.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(Y),s.disposeIntermediateTensorInfo(Q),{real:J,imag:Z}}(s,i,r,e,n),c=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(c,"float32",o.real),e=n.makeTensorInfo(c,"float32",o.imag),s=n.makeTensorInfo([],"float32",a.kf.createScalarValue(r,"float32")),i=Ja({inputs:{x:s},backend:n}),u=wi.kernelFunc({inputs:{a:t,b:s},backend:n}),l=wi.kernelFunc({inputs:{a:e,b:i},backend:n}),d=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:d,imag:p}}return o}{const t=function(t,e,n){const r=new Float32Array(2*e);for(let o=0;o<e;o++){let s=0,i=0;for(let r=0;r<e;r++){const c=a.ld.exponent(o*r,e,n),u=a.ld.getComplexWithIndex(t,r);s+=u.real*c.real-u.imag*c.imag,i+=u.real*c.imag+u.imag*c.real}n&&(s/=e,i/=e),a.ld.assignToTypedArray(r,s,i,o)}return r}(a.ld.mergeRealAndImagArrays(s,i),r,e);return a.ld.splitRealAndImagArrays(t)}var c}const Ei={kernelName:a.cb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,o=a.kf.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=jo({inputs:{x:r},backend:n,attrs:{shape:[o/s,s]}}),c=Ii(i,!1,n),u=jo({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}};function Ci(t){const{backend:e,attrs:n}=t,{shape:r,value:o,dtype:s}=n,i=s||a.kf.inferDtype(o),c=a.kf.getArrayFromDType(i,a.kf.sizeFromShape(r));return function(t,e,n){t.fill(e)}(c,o),e.makeTensorInfo(r,i,c)}const Ai={kernelName:a.db,backendName:"cpu",kernelFunc:Ci};const _i={kernelName:a.eb,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{image:o}=e,s=r,i=a.kf.getTypedArrayFromDType(o.dtype,a.kf.sizeFromShape(o.shape)),[c,u,l,d]=o.shape,p=s.data.get(o.dataId).values;for(let a=0;a<c;a++){const t=a*l*u*d;for(let e=0;e<u;e++){const n=e*(l*d);for(let r=0;r<l;r++){const a=r*d;for(let o=0;o<d;o++){const s=[c,e,r,o][2],u=Math.round(l-s),h=t+n+a+o;let f=p[h];if(u>=0&&u<l){f=p[t+n+u*d+o]}i[h]=f}}}}return{dataId:s.write(i,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},Ri=ms(t=>Math.floor(t)),Di=Xa(a.fb,Ri),Fi={kernelName:a.fb,backendName:"cpu",kernelFunc:Di},Mi=eo((t,e)=>Math.floor(t/e)),Li=yo(a.gb,Mi,null,"int32"),zi={kernelName:a.gb,backendName:"cpu",kernelFunc:Li};const Pi={kernelName:a.jb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:o,bias:s,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Is({inputs:{x:a,filter:o},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p}});if(s){const t=m;m=wo({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(t)}if(h){const t=m;m=uo(n,m,h,i,f),n.disposeIntermediateTensorInfo(t)}return m}};const Bi={kernelName:a.kb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:o,bias:s,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Ws({inputs:{x:a,filter:o},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:p}});if(s){const t=m;m=wo({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(t)}if(h){const t=m;m=uo(n,m,h,i,f),n.disposeIntermediateTensorInfo(t)}return m}};const Vi={kernelName:a.lb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:o}=e,s=a.kf.sizeFromShape(r.shape),i=o.shape,c=i[i.length-1],[u,l,d,p]=a.ld.prepareAndValidate(r,o);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const h=Object(a.qd)([l,d],r.dtype),f=n.data.get(o.dataId).values,m=n.data.get(r.dataId).values;for(let a=0;a<l;a++){const t=[];let e=0;for(let n=0;n<c;n++){const r=f[a*c+n];e+=r*p[n],t.push(r)}if(e<0||e>=s/d)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(r.shape));for(let n=0;n<d;n++)h.values[a*d+n]=m[e*d+n]}return n.makeTensorInfo(u,h.dtype,h.values)}};function Wi(t,e,n){const r=Object(a.qd)(n,t.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),o=n[0],s=n[2],i=e.locToIndex([o,s]);n[2]=e.values[i];const c=t.locToIndex(n);r.values[a]=t.values[c]}return r}const Ui={kernelName:a.mb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,indices:s}=e,{axis:i,batchDims:c}=r;Ga([o,s],"gatherV2");let u=c;null==c&&(u=0);const l=a.kf.sizeFromShape(s.shape),d=a.kf.parseAxisParam(i,o.shape)[0],p=a.ld.segment_util.collectGatherOpShapeInfo(o,s,d,u),h=jo({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=jo({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,l/p.batchSize]}}),m=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize],b=n.bufferSync(f),g=Wi(n.bufferSync(h),b,m);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(p.outputShape,g.dtype,g.values)}},Gi=eo((t,e)=>t>e?1:0),Hi=yo(a.nb,Gi,null,"bool"),qi={kernelName:a.nb,backendName:"cpu",kernelFunc:Hi},Ki=eo((t,e)=>t>=e?1:0),Xi=yo(a.ob,Ki,null,"bool"),Yi={kernelName:a.ob,backendName:"cpu",kernelFunc:Xi};const Qi={kernelName:a.pb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,o=a.kf.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=jo({inputs:{x:r},backend:n,attrs:{shape:[o/s,s]}}),c=Ii(i,!0,n),u=jo({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}},Ji=Ka(a.sb,t=>Number.isFinite(t)?1:0,"bool"),Zi={kernelName:a.sb,backendName:"cpu",kernelFunc:Ji},$i=Ka(a.tb,t=>Math.abs(t)===1/0?1:0,"bool"),tc={kernelName:a.tb,backendName:"cpu",kernelFunc:$i},ec=Ka(a.ub,t=>Number.isNaN(t)?1:0,"bool"),nc={kernelName:a.ub,backendName:"cpu",kernelFunc:ec},rc=eo((t,e)=>t<e?1:0),ac=yo(a.zb,rc,null,"bool"),oc={kernelName:a.zb,backendName:"cpu",kernelFunc:ac},sc=eo((t,e)=>t<=e?1:0),ic=yo(a.Ab,sc,null,"bool"),cc={kernelName:a.Ab,backendName:"cpu",kernelFunc:ic};function uc(t,e,n){const r=(e-t)/(n-1),o=a.kf.makeZerosTypedArray(n,"float32");o[0]=t;for(let a=1;a<o.length;a++)o[a]=o[a-1]+r;return o}const lc={kernelName:a.Bb,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,num:o}=n,s=uc(r,a,o);return e.makeTensorInfo([s.length],"float32",s)}},dc=ms(t=>Math.log(t)),pc=Xa(a.Cb,dc),hc={kernelName:a.Cb,backendName:"cpu",kernelFunc:pc},fc=Ka(a.Db,t=>Math.log1p(t)),mc={kernelName:a.Db,backendName:"cpu",kernelFunc:fc},bc=eo((t,e)=>t&&e),gc=yo(a.Eb,bc,null,"bool"),yc={kernelName:a.Eb,backendName:"cpu",kernelFunc:gc},vc=Ka(a.Fb,t=>t?0:1,"bool"),Oc={kernelName:a.Fb,backendName:"cpu",kernelFunc:vc},xc=eo((t,e)=>t||e),wc=yo(a.Gb,xc,null,"bool"),kc={kernelName:a.Gb,backendName:"cpu",kernelFunc:wc};const jc={kernelName:a.wb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{depthRadius:s,bias:i,alpha:c,beta:u}=r;Ga(o,"LRN");const l=o.shape[3],d=l-1,p=n.data.get(o.dataId).values,h=a.kf.sizeFromShape(o.shape),f=new Float32Array(h);function m(t){const e=t%l;let n=t-e+Math.max(0,e-s);const r=t-e+Math.min(e+s,d);let a=0;for(;n<=r;n++){const t=p[n];a+=t*t}return a}for(let a=0;a<h;a++){const t=m(a),e=p[a]*Math.pow(i+c*t,-u);f[a]=e}return n.makeTensorInfo(o.shape,o.dtype,f)}};const Nc={kernelName:a.xb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,y:s,dy:i}=e,{depthRadius:c,bias:u,alpha:l,beta:d}=r;Ga(i,"LRNGrad");const p=a.kf.sizeFromShape(i.shape),h=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(o.dataId).values,b=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let a=0;a<y;a++){const t=a%h,e=a-t+Math.max(0,t-c),n=a-t+Math.min(h,t+c+1);let r=0;for(let a=e;a<n;a++)r+=Math.pow(m[a],2);r=l*r+u;for(let o=e;o<n;o++){let t=-2*l*d*m[o]*b[a]/r;a===o&&(t+=Math.pow(r,-d)),t*=f[a],g[o]+=t}}return n.makeTensorInfo(i.shape,o.dtype,g)}};function Sc(t,e,n,r){const o=a.kf.getTypedArrayFromDType(r,a.kf.sizeFromShape(n));for(let a=0;a<o.length;++a){const n=a*e;let r=t[n];for(let a=0;a<e;++a){const e=t[n+a];e>r&&(r=e)}o[a]=r}return o}function Ic(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{reductionIndices:s,keepDims:i}=r,c=n;let u=o.shape;const l=u.length,d=a.kf.parseAxisParam(s,u);let p=d;const h=a.ld.getAxesPermutation(p,l);let f=c.data.get(o.dataId).values;if(null!=h){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=u[h[e]];f=Mo(f,u,o.dtype,h,t),p=a.ld.getInnerMostAxes(p.length,l),u=t}Ga(o,"max"),a.ld.assertAxesAreInnerMostDims("max",p,l);const[m,b]=a.ld.computeOutAndReduceShapes(u,p),g=Sc(f,a.kf.sizeFromShape(b),m,o.dtype),y=c.write(g,m,o.dtype);let v=m;if(i){v=a.ld.expandShapeToKeepDim(m,d)}return{dataId:y,shape:v,dtype:o.dtype}}const Tc={kernelName:a.Hb,backendName:"cpu",kernelFunc:Ic},Ec=eo((t,e)=>Math.max(t,e)),Cc=yo(a.Nb,Ec),Ac={kernelName:a.Nb,backendName:"cpu",kernelFunc:Cc};const _c={kernelName:a.Ib,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e;Ga(o,"maxPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=r;a.kf.assert(a.ld.eitherStridesOrDilationsAreOne(i,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.ld.computePool2DInfo(o.shape,s,i,1,c,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&a.kf.arraysEqual(l.inShape,l.outShape))d=Ja({inputs:{x:o},backend:n});else{const t=n.data.get(o.dataId).values,e=a.kf.computeStrides(o.shape),r=ts(t,o.shape,o.dtype,e,l,"max");d=n.makeTensorInfo(l.outShape,o.dtype,r.values)}return d}};const Rc={kernelName:a.Jb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{filterSize:s,strides:i,pad:c,dimRoundingMode:u,dataFormat:l,dilations:d}=r;Ga(o,"maxPool3d");let p=d;null==p&&(p=[1,1,1]);const h=a.ld.computePool3DInfo(o.shape,s,i,p,c,u,l),f=ns(n.data.get(o.dataId).values,o.shape,o.dtype,a.kf.computeStrides(o.shape),h,"max");return n.makeTensorInfo(f.shape,"float32",f.values)}};const Dc={kernelName:a.Kb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,{filterSize:i,strides:c,pad:u,dilations:l,dimRoundingMode:d}=r;Ga([o,s],"maxPool3DGrad");const p=a.ld.computePool3DInfo(s.shape,i,c,l,u,d),h=function(t,e){const n=Object(a.qd)(e.outShape,"int32"),r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left;for(let a=0;a<e.batchSize;++a)for(let b=0;b<e.inChannels;++b)for(let g=0;g<e.outDepth;++g){const y=g*r-h;let v=y;for(;v<0;)v+=i;const O=Math.min(e.inDepth,l+y);for(let r=0;r<e.outHeight;++r){const l=r*o-f;let h=l;for(;h<0;)h+=c;const x=Math.min(e.inHeight,d+l);for(let o=0;o<e.outWidth;++o){const f=o*s-m;let w=f;for(;w<0;)w+=u;const k=Math.min(e.inWidth,p+f);let j=Number.NEGATIVE_INFINITY,N=-1;for(let e=v;e<O;e+=i){const n=e-y;for(let r=h;r<x;r+=c){const o=r-l;for(let s=w;s<k;s+=u){const i=s-f,c=t.get(a,e,r,s,b);c>=j&&(j=c,N=n*d*p+o*d+i)}}}n.set(N,a,g,r,o,b)}}}return n}(n.bufferSync(s),p),f=p.strideDepth,m=p.strideHeight,b=p.strideWidth,g=p.dilationDepth,y=p.dilationHeight,v=p.dilationWidth,O=p.effectiveFilterDepth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=O-1-p.padInfo.front,j=w-1-p.padInfo.left,N=x-1-p.padInfo.top,S=Object(a.qd)(s.shape,"float32"),I=n.bufferSync(o);for(let a=0;a<p.batchSize;++a)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inDepth;++e)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const o=e-k,s=n-N,i=r-j;let c=0;for(let e=0;e<O;e+=g){const n=(o+e)/f;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=y){const o=(s+r)/m;if(!(o<0||o>=p.outHeight||Math.floor(o)!==o))for(let s=0;s<w;s+=v){const u=(i+s)/b;if(u<0||u>=p.outWidth||Math.floor(u)!==u)continue;const l=O*x*w-1-h.get(a,n,o,u,t)===e*x*w+r*w+s?1:0;if(0===l)continue;c+=I.get(a,n,o,u,t)*l}}}S.set(c,a,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const Fc={kernelName:a.Lb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s,output:i}=e,c=s;Ga([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:d,dimRoundingMode:p}=r,h=a.ld.computePool2DInfo(c.shape,u,l,1,d,p),f=n.data.get(c.dataId).values,m=Object(a.qd)(h.outShape,c.dtype,es(f,c.shape,c.dtype,h).values),b=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,v=h.dilationWidth,O=h.effectiveFilterHeight,x=h.effectiveFilterWidth,w=x-1-h.padInfo.left,k=O-1-h.padInfo.top,j=Object(a.qd)(c.shape,"float32"),N=n.data.get(o.dataId).values,S=Object(a.qd)(o.shape,"float32",N);for(let a=0;a<h.batchSize;++a)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inHeight;++e)for(let n=0;n<h.inWidth;++n){const r=e-k,o=n-w;let s=0;for(let e=0;e<O;e+=y){const n=(r+e)/b;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let r=0;r<x;r+=v){const i=(o+r)/g;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;const c=O*x-1-m.get(a,n,i,t)===e*x+r?1:0;if(0===c)continue;s+=S.get(a,n,i,t)*c}}j.set(s,a,e,n,t)}return n.makeTensorInfo(j.shape,j.dtype,j.values)}};const Mc={kernelName:a.Mb,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{x:o}=e,{filterSize:s,strides:i,pad:c,includeBatchInIndex:u}=n,l=r;Ga(o,"MaxPoolWithArgmax");const d=l.data.get(o.dataId).values,p=a.ld.computePool2DInfo(o.shape,s,i,[1,1],c),[h,f]=function(t,e,n,r,o){const s=ts(t,0,n,a.kf.computeStrides(e),o,"max"),i=es(t,e,n,o,!0,r);return[s.values,i.values]}(d,o.shape,o.dtype,u,p),m=l.write(h,p.outShape,o.dtype),b=l.write(f,p.outShape,o.dtype);return[{dataId:m,shape:p.outShape,dtype:o.dtype},{dataId:b,shape:p.outShape,dtype:"int32"}]}};function Lc(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;let c;Ga(o,"sum"),c="bool"===o.dtype?bo({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):Ja({inputs:{x:o},backend:n});const u=c.shape.length,l=a.kf.parseAxisParam(s,c.shape),d=a.ld.getAxesPermutation(l,u);let p=l,h=c;null!=d&&(h=Lo({inputs:{x:c},backend:n,attrs:{perm:d}}),p=a.ld.getInnerMostAxes(p.length,u)),a.ld.assertAxesAreInnerMostDims("sum",p,h.shape.length);const[f,m]=a.ld.computeOutAndReduceShapes(h.shape,p);let b=ho(n,f,a.ld.upcastType(h.dtype,"int32"));const g=a.kf.sizeFromShape(m),y=n.data.get(b.dataId).values,v=n.data.get(h.dataId).values;for(let a=0;a<y.length;++a){const t=a*g;let e=0;for(let n=0;n<g;++n)e+=v[t+n];y[a]=e}if(i){const t=b;b=jo({inputs:{x:b},backend:n,attrs:{shape:a.ld.expandShapeToKeepDim(b.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(c),null!=d&&n.disposeIntermediateTensorInfo(h),b}const zc={kernelName:a.Qc,backendName:"cpu",kernelFunc:Lc};const Pc={kernelName:a.Ob,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r,c=a.kf.parseAxisParam(s,o.shape),u=a.ld.computeOutAndReduceShapes(o.shape,c)[1],l=a.kf.sizeFromShape(u),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(p);const h=bo({inputs:{x:o},backend:n,attrs:{dtype:"float32"}});d.push(h);const f=xi({inputs:{a:h,b:p},backend:n});d.push(f);const m=Lc({inputs:{x:f},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach(t=>n.disposeIntermediateTensorInfo(t)),m}};const Bc={kernelName:a.Pb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;Ga(o,"min");const c=a.kf.parseAxisParam(s,o.shape);let u=c;const l=a.ld.getAxesPermutation(u,o.shape.length);let d=o;null!=l&&(d=Lo({inputs:{x:o},backend:n,attrs:{perm:l}}),u=a.ld.getInnerMostAxes(u.length,o.shape.length)),a.ld.assertAxesAreInnerMostDims("min",u,d.shape.length);const[p,h]=a.ld.computeOutAndReduceShapes(d.shape,u),f=a.kf.sizeFromShape(h),m=a.kf.makeZerosTypedArray(a.kf.sizeFromShape(p),d.dtype),b=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const t=a*f;let e=b[t];for(let n=0;n<f;++n){const r=b[t+n];r<e&&(e=r)}m[a]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(p,d.dtype,m);if(i){const t=jo({inputs:{x:g},backend:n,attrs:{shape:a.ld.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Vc=eo((t,e)=>Math.min(t,e)),Wc=yo(a.Qb,Vc),Uc={kernelName:a.Qb,backendName:"cpu",kernelFunc:Wc};const Gc={kernelName:a.Rb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{paddings:s,mode:i}=r;Ga(o,"mirrorPad");const c=s.map((t,e)=>t[0]+o.shape[e]+t[1]),u=s.map(t=>t[0]),l=s.map((t,e)=>t[0]+o.shape[e]),d="reflect"===i?0:1,p=n.data.get(o.dataId).values,h=o.shape.length,f=a.kf.computeStrides(o.shape),m=a.kf.sizeFromShape(c),b=c.length,g=a.kf.computeStrides(c),y=a.kf.getTypedArrayFromDType(o.dtype,m);for(let v=0;v<m;v++){let t=a.kf.indexToLoc(v,b,g);for(let n=0;n<b;n++)t[n]<u[n]?t[n]=2*u[n]-t[n]-d:t[n]>=l[n]&&(t[n]=2*(l[n]-1)-t[n]+d);t=t.map((t,e)=>t-u[e]);const e=a.kf.locToIndex(t,h,f);y[v]=p[e]}return{dataId:n.write(y,c,o.dtype),shape:c,dtype:o.dtype}}},Hc=eo((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),qc=yo(a.Sb,Hc),Kc={kernelName:a.Sb,backendName:"cpu",kernelFunc:qc};function Xc(t){const{inputs:e,backend:n,attrs:r}=t,{logits:o}=e,{dim:s}=r,i=o.shape.length;let c=s;if(-1===c&&(c=i-1),c!==i-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(i," and dim was ").concat(c));const u=a.kf.parseAxisParam([c],o.shape),l=Ic({inputs:{x:o},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),d=a.ld.expandShapeToKeepDim(l.shape,u),p=jo({inputs:{x:l},backend:n,attrs:{shape:d}}),h=Ni({inputs:{a:o,b:p},backend:n}),f=ui({inputs:{x:h},backend:n}),m=Lc({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),b=jo({inputs:{x:m},backend:n,attrs:{shape:d}}),g=xi({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const Yc={kernelName:a.Fc,backendName:"cpu",kernelFunc:Xc};const Qc={kernelName:a.Tb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:o}=e,{numSamples:s,seed:i,normalized:c}=r;Ga(o,"multinomial");const u=c?o:Xc({inputs:{logits:o},backend:n,attrs:{dim:-1}}),l=u.shape[0],d=u.shape[1],p=n.data.get(u.dataId).values,h=[l,s],f=a.kf.makeZerosTypedArray(a.kf.sizeFromShape(h),"int32");for(let a=0;a<l;++a){const t=a*d,e=new Float32Array(d-1);e[0]=p[t];for(let a=1;a<e.length;++a)e[a]=e[a-1]+p[t+a];const n=La.alea(i.toString()),r=a*s;for(let a=0;a<s;++a){const t=n();f[r+a]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){f[r+a]=n;break}}}return c||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",f)}};function Jc(t,e,n){const r=a.kf.createScalarValue(-1,n);return bi([],e,r,t,n)}const Zc={kernelName:a.Vb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;Ga(r,"neg");const a=n.data.get(r.dataId).values,[o,s]=Jc(a,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,o)}},$c=a.Xd.nonMaxSuppressionV3Impl;const tu={kernelName:a.Wb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:o}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=r;Ga(a,"NonMaxSuppression");const u=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values,{selectedIndices:d}=$c(u,l,s,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},eu=a.Xd.nonMaxSuppressionV4Impl;const nu={kernelName:a.Xb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:o}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=r;Ga(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,{selectedIndices:p,validOutputs:h}=eu(l,d,s,i,c,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},ru=a.Xd.nonMaxSuppressionV5Impl;const au={kernelName:a.Yb,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:o}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=r;Ga(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,p=s,h=i,f=c,m=u,{selectedIndices:b,selectedScores:g}=ru(l,d,p,h,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}},ou=eo((t,e)=>t!==e?1:0),su=yo(a.Zb,ou,null,"bool"),iu={kernelName:a.Zb,backendName:"cpu",kernelFunc:su};const cu={kernelName:a.ac,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:o}=e,{depth:s,onValue:i,offValue:c}=r;Ga(o,"oneHot");const u=a.kf.sizeFromShape(o.shape),l=new Float32Array(u*s);l.fill(c);const d=n.data.get(o.dataId).values;for(let a=0;a<u;++a)d[a]>=0&&d[a]<s&&(l[a*s+d[a]]=i);return n.makeTensorInfo([...o.shape,s],"int32",l)}};function uu(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=fo({inputs:{input:r},backend:n}),e=uu({inputs:{x:t},backend:n}),a=ks({inputs:{input:r},backend:n}),o=uu({inputs:{x:a},backend:n}),s=lo({inputs:{real:e,imag:o},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}return Ci({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const lu={kernelName:a.bd,backendName:"cpu",kernelFunc:uu};const du={kernelName:a.bc,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const e=fo({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r}),o=ks({inputs:{input:a},backend:r}),s=uu({inputs:{x:o},backend:r}),i=lo({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),i}return Ci({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function pu(t){const{inputs:e,backend:n,attrs:r}=t,{axis:o}=r;if(1===e.length)return di({inputs:{input:e[0]},backend:n,attrs:{dim:o}});const s=e[0].shape,i=e[0].dtype;e.forEach(t=>{a.kf.assertShapesMatch(s,t.shape,"All tensors passed to stack must have matching shapes"),a.kf.assert(i===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=Ns({inputs:e.map(t=>{const e=di({inputs:{input:t},backend:n,attrs:{dim:o}});return c.push(e),e}),backend:n,attrs:{axis:o}});return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),u}const hu={kernelName:a.dc,backendName:"cpu",kernelFunc:pu};const fu={kernelName:a.ec,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{paddings:s,constantValue:i}=r;Ga(o,"pad");const c=s.map((t,e)=>t[0]+o.shape[e]+t[1]),u=s.map(t=>t[0]),l=n.data.get(o.dataId).values,d=a.kf.sizeFromShape(o.shape),p=o.shape.length,h=a.kf.computeStrides(o.shape),f=a.kf.sizeFromShape(c),m=c.length,b=a.kf.computeStrides(c),g=a.kf.getTypedArrayFromDType(o.dtype,f);0!==i&&g.fill(i);for(let y=0;y<d;y++){const t=a.kf.indexToLoc(y,p,h).map((t,e)=>t+u[e]);g[a.kf.locToIndex(t,m,b)]=l[y]}return{dataId:n.write(g,c,o.dtype),shape:c,dtype:o.dtype}}},mu=eo((t,e)=>Math.pow(t,e)),bu=yo(a.fc,mu),gu={kernelName:a.fc,backendName:"cpu",kernelFunc:bu};function yu(t,e,n,r){const[o,s]=a.ld.computeOutAndReduceShapes(t,r),i=Object(a.jf)(e,"int32"),c=a.kf.makeZerosTypedArray(a.kf.sizeFromShape(o),i),u=a.kf.sizeFromShape(s);for(let a=0;a<c.length;++a){const t=a*u;let e=1;for(let r=0;r<u;++r)e*=n[t+r];c[a]=e}return{outVals:c,outShape:o,outDtype:i}}const vu={kernelName:a.hc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;Ga(o,"prod");const c=o.shape.length,u=a.kf.parseAxisParam(s,o.shape),l=a.ld.getAxesPermutation(u,c);let d=u,p=o;const h=[];null!=l&&(p=Lo({inputs:{x:o},backend:n,attrs:{perm:l}}),h.push(p),d=a.ld.getInnerMostAxes(d.length,c));const f=n.data.get(p.dataId).values,{outVals:m,outShape:b,outDtype:g}=yu(p.shape,p.dtype,f,d);let y=b;return i&&(y=a.ld.expandShapeToKeepDim(b,u)),h.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(y,g,m)}};function Ou(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return a.kf.makeZerosTypedArray(0,r);const o=Math.abs(Math.ceil((e-t)/n)),s=a.kf.makeZerosTypedArray(o,r);e<t&&1===n&&(n=-1),s[0]=t;for(let a=1;a<s.length;a++)s[a]=s[a-1]+n;return s}const xu={kernelName:a.ic,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,dtype:o,step:s}=n,i=Ou(r,a,s,o);return e.makeTensorInfo([i.length],o,i)}},wu=Ka(a.lc,t=>1/t),ku={kernelName:a.lc,backendName:"cpu",kernelFunc:wu};const ju={kernelName:a.pc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:c}=r;Ga(o,"resizeBilinear");const u=a.kf.computeStrides(o.shape),[l,d]=c,[p,h,f,m]=o.shape,b=n.data.get(o.dataId).values,g=new Float32Array(a.kf.sizeFromShape([p,l,d,m])),y=[s&&l>1?h-1:h,s&&d>1?f-1:f],v=[s&&l>1?l-1:l,s&&d>1?d-1:d];let O=0;const x=y[0]/v[0],w=y[1]/v[1];for(let a=0;a<p;a++)for(let t=0;t<l;t++){let e;e=i?x*(t+.5)-.5:x*t;const n=Math.max(0,Math.floor(e)),r=e-n,o=Math.min(h-1,Math.ceil(e)),s=a*u[0]+n*u[1],c=a*u[0]+o*u[1];for(let t=0;t<d;t++){let e;e=i?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),a=e-n,o=Math.min(f-1,Math.ceil(e)),l=s+n*u[2],d=c+n*u[2],p=s+o*u[2],h=c+o*u[2];for(let t=0;t<m;t++){const e=b[l+t],n=b[d+t],o=e+(b[p+t]-e)*a,s=o+(n+(b[h+t]-n)*a-o)*r;g[O++]=s}}}return n.makeTensorInfo([p,l,d,m],"float32",g)}};const Nu={kernelName:a.qc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:o,dy:s}=e,{alignCorners:i}=r;Ga([s,o],"resizeBilinearGrad");const c=a.kf.computeStrides(o.shape),[u,l,d,p]=o.shape,[,h,f]=s.shape,m=new Float32Array(u*l*d*p),b=[i&&h>1?l-1:l,i&&f>1?d-1:d],g=[i&&h>1?h-1:h,i&&f>1?f-1:f],y=b[0]/g[0],v=b[1]/g[1],O=n.data.get(s.dataId).values;let x=0;for(let a=0;a<u;a++){const t=a*c[0];for(let e=0;e<h;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),o=t+r*c[1],s=t+a*c[1],i=n-r,u=1-i;for(let t=0;t<f;t++){const e=t*v,n=Math.floor(e),r=Math.min(Math.ceil(e),d-1),a=e-n,l=1-a,h=o+n*c[2],f=o+r*c[2],b=s+n*c[2],g=s+r*c[2],y=u*l,w=u*a,k=i*l,j=i*a;for(let t=0;t<p;t++){const e=O[x++];m[h+t]+=e*y,m[f+t]+=e*w,m[b+t]+=e*k,m[g+t]+=e*j}}}}return n.makeTensorInfo([u,d,l,p],"float32",m)}};const Su={kernelName:a.rc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:c}=r;Ga(o,"resizeNearestNeighbor");const u=a.kf.computeStrides(o.shape),[l,d]=c,[p,h,f,m]=o.shape,b=n.data.get(o.dataId).values,g=new Float32Array(p*l*d*m),y=[s&&l>1?h-1:h,s&&d>1?f-1:f],v=[s&&l>1?l-1:l,s&&d>1?d-1:d],O=y[0]/v[0],x=y[1]/v[1];let w=0;for(let a=0;a<p;a++){const t=a*u[0];for(let e=0;e<l;e++){const n=i?O*(e+.5):O*e;let r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let t=0;t<d;t++){const e=i?x*(t+.5):x*t;let n=Math.min(f-1,s?Math.round(e):Math.floor(e));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let t=0;t<m;t++){const e=b[r+t];g[w++]=e}}}}return n.makeTensorInfo([p,l,d,m],o.dtype,g)}};const Iu={kernelName:a.sc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:o,dy:s}=e,{alignCorners:i}=r;Ga([s,o],"resizeNearestNeighborGrad");const c=a.kf.computeStrides(o.shape),u=a.kf.computeStrides(s.shape),[l,d,p,h]=o.shape,[,f,m]=s.shape,b=new Float32Array(l*d*p*h),g=n.data.get(s.dataId).values,y=[i&&f>1?d-1:d,i&&m>1?p-1:p],v=[i&&f>1?f-1:f,i&&m>1?m-1:m],O=y[0]/v[0],x=y[1]/v[1],w=1/O,k=1/x,j=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let a=0;a<l;a++){const t=a*c[0];for(let e=0;e<d;e++){const n=t+e*c[1],r=Math.floor(e*w),a=Math.floor(r-j/2);for(let o=0;o<p;o++){const r=n+o*c[2],s=Math.floor(o*k),l=Math.floor(s-N/2);for(let n=0;n<h;n++){let s=0;for(let r=0;r<j;r++){const c=r+a;if(c<0||c>=f)continue;const h=t+c*u[1],b=c*O;if(e===Math.min(d-1,i?Math.round(b):Math.floor(b)))for(let t=0;t<N;t++){const e=t+l;if(e<0||e>=m)continue;const r=h+e*u[2],a=e*x;o===Math.min(p-1,i?Math.round(a):Math.floor(a))&&(s+=g[r+n])}}b[r+n]=s}}}}return n.makeTensorInfo(o.shape,o.dtype,b)}};const Tu={kernelName:a.tc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{dims:s}=r;Ga(o,"reverse");const i=o.shape.length,c=a.kf.parseAxisParam(s,o.shape);if(0===i)return Ja({inputs:{x:o},backend:n});const u=new a.Uc(o.shape,o.dtype),l=n.bufferSync(o);for(let a=0;a<u.size;a++){const t=u.indexToLoc(a),e=t.slice();c.forEach(t=>e[t]=o.shape[t]-1-e[t]),u.set(l.get(...e),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Eu={kernelName:a.uc,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{image:o}=e,{radians:s,fillValue:i,center:c}=n,u=r,l=a.kf.getTypedArrayFromDType(o.dtype,a.kf.sizeFromShape(o.shape)),[d,p,h,f]=o.shape,[m,b]=a.ld.getImageCenter(c,p,h),g=Math.sin(s),y=Math.cos(s),v=u.data.get(o.dataId).values;for(let a=0;a<d;a++){const t=a*h*p*f;for(let e=0;e<p;e++){const n=e*(h*f);for(let r=0;r<h;r++){const a=r*f;for(let o=0;o<f;o++){const s=[d,e,r,o],c=s[2],u=s[1];let O=(c-m)*y-(u-b)*g,x=(c-m)*g+(u-b)*y;O=Math.round(O+m),x=Math.round(x+b);let w=i;if("number"!==typeof i&&(w=3===o?255:i[o]),O>=0&&O<h&&x>=0&&x<p){w=v[t+x*(h*f)+O*f+o]}l[t+n+a+o]=w}}}}return{dataId:u.write(l,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},Cu=Ka(a.vc,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),Au={kernelName:a.vc,backendName:"cpu",kernelFunc:Cu},_u=ms(t=>1/Math.sqrt(t)),Ru=Xa(a.wc,_u),Du={kernelName:a.wc,backendName:"cpu",kernelFunc:Ru};function Fu(t,e,n,r,o,s,i,c,u,l){const d=[r/o,o],p=t.values,h=e.values;if(0===r)return Object(a.qd)(n,e.dtype);const f=Object(a.qd)(d,e.dtype);f.values.fill(u);for(let a=0;a<s;a++){const t=[];let s=0;for(let e=0;e<i;e++){const n=p[a*i+e];t.push(n),s+=n*c[e]}if(s<0||s>=r/o)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(n));for(let n=0;n<o;n++)l?f.values[s*o+n]+=h[a*o+n]:f.values[s*o+n]=0===e.rank?h[0]:h[a*o+n]}return f}const Mu={kernelName:a.xc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:o,updates:s}=e,{shape:i}=r,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=a.ld.calculateShapes(s,o,i),h=Fu(n.bufferSync(o),n.bufferSync(s),i,p,l,u,c,d,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}};const Lu={kernelName:a.yc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:o,e:s}=e;Ga([r,o,s],"select");const i=r.shape.length,c=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,l=n.data.get(s.dataId).values,d=Object(a.jf)(o.dtype,s.dtype),p=a.kf.makeZerosTypedArray(a.kf.sizeFromShape(o.shape),d);let h=0;const f=0===i||i>1||1===o.shape.length?1:a.kf.sizeFromShape(o.shape.slice(1));for(let a=0;a<c.length;a++)for(let t=0;t<f;t++)1===c[a]?p[h++]=u[a]:p[h++]=l[a];return n.makeTensorInfo(o.shape,d,p)}},zu=a.ld.SELU_SCALEALPHA,Pu=a.ld.SELU_SCALE,Bu=Ka(a.zc,t=>t>=0?Pu*t:zu*(Math.exp(t)-1)),Vu={kernelName:a.zc,backendName:"cpu",kernelFunc:Bu},Wu=Ka(a.Ac,t=>1/(1+Math.exp(-t))),Uu={kernelName:a.Ac,backendName:"cpu",kernelFunc:Wu},Gu=Ka(a.Bc,t=>t<0?-1:t>0?1:0),Hu={kernelName:a.Bc,backendName:"cpu",kernelFunc:Gu},qu=Ka(a.Cc,t=>Math.sin(t)),Ku={kernelName:a.Cc,backendName:"cpu",kernelFunc:qu},Xu=Ka(a.Dc,t=>Math.sinh(t)),Yu={kernelName:a.Dc,backendName:"cpu",kernelFunc:Xu},Qu=Math.log(1.1920928955078125e-7)+2,Ju=Ka(a.Gc,t=>{const e=t>-Qu,n=t<Qu,r=Math.exp(t);let a;return a=n?r:e?t:Math.log(1+r),a}),Zu={kernelName:a.Gc,backendName:"cpu",kernelFunc:Ju};const $u={kernelName:a.Hc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockShape:s,paddings:i}=r;Ga([o],"spaceToBatchND");const c=a.kf.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let a=1+s.length;a<o.shape.length;++a)u.push([0,0]);const l=fu.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:u,constantValue:0}}),d=a.ld.getReshaped(l.shape,s,c,!1),p=a.ld.getPermuted(d.length,s.length,!1),h=a.ld.getReshapedPermuted(l.shape,s,c,!1),f=jo({inputs:{x:l},backend:n,attrs:{shape:d}}),m=Lo({inputs:{x:f},backend:n,attrs:{perm:p}}),b=jo({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}};const tl={kernelName:a.Ic,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:c}=r,{sliceRank:u,numUpdates:l,sliceSize:d,strides:p,outputSize:h}=a.ld.calculateShapes(s,o,c),f=Fu(n.bufferSync(o),n.bufferSync(s),c,h,d,l,u,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(c,f.dtype,f.values)}};const el={kernelName:a.Jc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{numOrSizeSplits:s,axis:i}=r,c=a.kf.parseAxisParam(i,o.shape)[0],u=a.ld.prepareSplitSize(o,s,c),l=new Array(o.shape.length).fill(0),d=o.shape.slice();return u.map(t=>{const e=[...d];e[c]=t;const r=us({inputs:{x:o},backend:n,attrs:{begin:l,size:e}});return l[c]+=t,r})}},nl=Ka(a.Kc,t=>Math.sqrt(t)),rl={kernelName:a.Kc,backendName:"cpu",kernelFunc:nl},al={kernelName:a.Lc,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{x:r}=e,a=n;Ga(r,"square");const o=a.data.get(r.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){const t=o[i];s[i]=t*t}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ol=eo((t,e)=>{const n=t-e;return n*n}),sl=yo(a.Mc,ol),il={kernelName:a.Mc,backendName:"cpu",kernelFunc:sl},cl=Ka(a.Nc,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),ul={kernelName:a.Nc,backendName:"cpu",kernelFunc:cl};function ll(t,e,n,r){const o=Object(a.qd)(t,e.dtype);for(let a=0;a<o.size;a++){const t=o.indexToLoc(a),s=new Array(t.length);for(let e=0;e<s.length;e++)s[e]=t[e]*n[e]+r[e];o.set(e.get(...s),...t)}return o}const dl={kernelName:a.Oc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{begin:s,end:i,strides:c,beginMask:u,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r;Ga(o,"stridedSlice");const{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:v}=a.Oe.sliceInfo(o.shape,s,i,c,u,l,d,p,h),O=jo({inputs:{x:o},backend:n,attrs:{shape:y}});let x;if(f){const t=us({inputs:{x:O},backend:n,attrs:{begin:m,size:g}});x=jo({inputs:{x:t},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(t)}else if(v.some(t=>0===t))x=n.makeTensorInfo(v,o.dtype,[]);else{const t=ll(v,n.bufferSync(O),b,m);x=n.makeTensorInfo(t.shape,t.dtype,t.values)}const w=jo({inputs:{x:x},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(x),w}},pl=Ka(a.Rc,t=>Math.tan(t)),hl={kernelName:a.Rc,backendName:"cpu",kernelFunc:pl},fl=Ka(a.Sc,t=>Math.tanh(t)),ml={kernelName:a.Sc,backendName:"cpu",kernelFunc:fl};function bl(t,e){const n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=t.shape[a]*e[a];const r=Object(a.qd)(n,t.dtype);for(let a=0;a<r.values.length;++a){const e=r.indexToLoc(a),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const o=t.locToIndex(n);r.values[a]=t.values[o]}return r}const gl={kernelName:a.Vc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reps:o}=r;Ga(a,"tile");const s=bl(n.bufferSync(a),o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function yl(t,e,n,r,o){const s=e[e.length-1],[i,c]=[t.length/s,s],u=a.kf.getTypedArrayFromDType(n,i*r),l=a.kf.getTypedArrayFromDType("int32",i*r);for(let a=0;a<i;a++){const e=a*c,n=t.subarray(e,e+c),o=[];for(let t=0;t<n.length;t++)o.push({value:n[t],index:t});o.sort((t,e)=>e.value-t.value);const s=a*r,i=u.subarray(s,s+r),d=l.subarray(s,s+r);for(let t=0;t<r;t++)i[t]=o[t].value,d[t]=o[t].index}const d=e.slice();return d[d.length-1]=r,[Object(a.qd)(d,n,u),Object(a.qd)(d,"int32",l)]}const vl={kernelName:a.Wc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{k:o,sorted:s}=r;Ga(a,"topk");const i=n.data.get(a.dataId).values,[c,u]=yl(i,a.shape,a.dtype,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};function Ol(t,e,n,r){const o=a.kf.parseAxisParam(e,n)[0],s=[1,n[0],1];for(let a=0;a<o;a++)s[0]*=n[a];s[1]=n[o];for(let a=o+1;a<n.length;a++)s[2]*=n[a];const i={},c=new Int32Array(n[o]),u=new a.Uc(s,r,t),l=[],d=1===s[0]&&1===s[2];for(let a=0;a<n[o];a++){let e;if(d)e=t[a].toString();else{const t=[];for(let e=0;e<s[0];e++)for(let n=0;n<s[2];n++)t.push(u.get(e,a,n));e=t.join(",")}if(void 0!==i[e])c[a]=i[e];else{const t=Object.keys(i).length;i[e]=t,c[a]=t,l.push(a)}}const p=s.slice();p[1]=Object.keys(i).length;const h=new a.Uc(p,r);l.forEach((t,e)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)h.set(u.get(n,t,r),n,e,r)});const f=n.slice();return f[o]=p[1],{outputValues:h.values,outputShape:f,indices:c}}const xl={kernelName:a.Yc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:o}=e;Ga(o,"unique");const s=r.data.get(o.dataId).values,{outputValues:i,outputShape:c,indices:u}=Ol(s,a,o.shape,o.dtype);return[r.makeTensorInfo(c,o.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}};const wl={kernelName:a.Zc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:a}=e;let{axis:o}=r;o<0&&(o+=a.shape.length);const s=a.shape.length,i=a.shape[o],c=new Array(s-1);let u=0;for(let h=0;h<s;h++)h!==o&&(c[u++]=a.shape[h]);const l=new Array(s).fill(0),d=a.shape.slice();d[o]=1;const p=new Array(i);for(let h=0;h<p.length;h++){l[o]=h;const t=us({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});p[h]=jo({inputs:{x:t},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(t)}return p}};const kl={kernelName:a.ad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,segmentIds:s}=e,{numSegments:i}=r;Ga(o,"unsortedSegmentSum");const c=[],u=[],l=o.shape.length-s.shape.length;let d=s;for(let a=0;a<l;++a){const t=di({inputs:{input:d},backend:n,attrs:{dim:a+1}});d=t,u.push(t)}for(let h=0;h<i;++h){const t=a.kf.createScalarValue(h,"int32"),e=n.makeTensorInfo([],"int32",t),r=Zs({inputs:{a:e,b:d},backend:n}),s=bo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=yi({inputs:{a:s,b:o},backend:n}),l=Lc({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});c.push(l),u.push(e),u.push(r),u.push(s),u.push(i),u.push(l)}const p=pu({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}},jl=[To,Co,_o,Do,ko,Fo,Po,Bo,Vo,Wo,Go,qo,Xo,Jo,$o,rs,as,os,ss,Io,is,ds,fs,go,ys,Os,po,xs,Ss,Es,Cs,Ts,_s,Rs,As,Fs,Ls,zs,Ps,Bs,Vs,Us,Gs,Hs,qs,Ks,Ys,Xs,wi,Qa,Qs,$s,ii,li,pi,mi,Ei,Ai,_i,Fi,zi,Pi,Bi,Vi,Ui,qi,Yi,Za,Qi,js,Zi,tc,nc,to,oc,cc,lc,hc,mc,yc,Oc,kc,jc,Nc,Ac,_c,Rc,Dc,Fc,Mc,Tc,Pc,Bc,Uc,Gc,Kc,Qc,vi,Zc,tu,nu,au,iu,cu,du,hu,fu,gu,ao,vu,xu,mo,ku,so,co,No,ju,Nu,Su,Iu,Tu,Eu,Au,Du,Mu,Lu,Vu,Uu,Hu,Ku,Yu,ls,Yc,Zu,$u,tl,el,rl,al,il,ul,dl,Si,zc,hl,ml,gl,vl,zo,xl,wl,kl,lu];for(const Ky of jl)Object(a.ze)(Ky);const Nl={},Sl={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Il(t){if(!(t in Nl)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!==typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete Nl[t]},!1),1===t)return e.getContext("webgl",Sl)||e.getContext("experimental-webgl",Sl);return e.getContext("webgl2",Sl)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;Nl[t]=e}const e=Nl[t];return e.isContextLost()?(delete Nl[t],Il(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Nl[t])}var Tl,El,Cl;function Al(t,e){return[e,t]}function _l(t){const e=a.kf.sizeFromShape(t),n=Math.ceil(e/4);return a.kf.sizeToSquarishShape(n)}function Rl(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Dl(t,e){const n=t;let r,o,s,i,c,u,l,d,p,h;return 2===Object(a.Kd)().getNumber("WEBGL_VERSION")?(r=n.R32F,o=n.R16F,s=n.RGBA16F,i=n.RGBA32F,c=n.RED,l=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT):(r=t.RGBA,o=t.RGBA,s=t.RGBA,i=n.RGBA,c=t.RGBA,l=4,d=4,p=null!=e?e.HALF_FLOAT_OES:null,h=t.FLOAT),u=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function Fl(t,e){const n=e();return Object(a.Kd)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(e)}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(Tl||(Tl={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(El||(El={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Cl||(Cl={}));function Ml(t){return!!(Object(a.Kd)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function Ll(t,e){return ql(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function zl(t,e){const n=ql(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Fl(t,()=>t.shaderSource(n,e)),Fl(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=Pl.exec(e);if(null==n)return console.log("Couldn't parse line number in error: ".concat(e)),void console.log(t);const r=+n[1],o=t.split("\n"),s=o.length.toString().length+2,i=o.map((t,e)=>a.kf.rightPad((e+1).toString(),s)+t);let c=0;for(let a=0;a<i.length;a++)c=Math.max(i[a].length,c);const u=i.slice(0,r-1),l=i.slice(r-1,r),d=i.slice(r);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log("%c ".concat(a.kf.rightPad(l[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Pl=/ERROR: [0-9]+:([0-9]+):/g;function Bl(t,e){if(Fl(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Vl(t,e,n,r,a,o,s){const i=t.getAttribLocation(e,n);return-1!==i&&(Fl(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),Fl(t,()=>t.vertexAttribPointer(i,a,t.FLOAT,!1,o,s)),Fl(t,()=>t.enableVertexAttribArray(i)),!0)}function Wl(t,e,n,r){Fl(t,()=>function(t,e,n){Kl(t,n),Fl(t,()=>t.activeTexture(t.TEXTURE0+n)),Fl(t,()=>t.bindTexture(t.TEXTURE_2D,e))}(t,e,r)),Fl(t,()=>t.uniform1i(n,r))}function Ul(t,e,n){Fl(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),Fl(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function Gl(t,e){Fl(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),Fl(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Hl(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(e)}}(t,e))}function ql(t,e,n){const r=Fl(t,()=>e());if(null==r)throw new Error(n);return r}function Kl(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){const t="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(t,"."))}}function Xl(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return a.kf.sizeFromShape(t.slice(0,t.length-e))}function Yl(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Ql(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Xl(t),...Yl(t)]),e}function Jl(t){return t%2===0}function Zl(t,e){if(t=t.slice(-2),e=e.slice(-2),a.kf.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Jl(n)&&Jl(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Jl(t[0])&&Jl(e[0])}let $l,td;function ed(t,e){return null!=t.getExtension(e)}function nd(t){try{if(null!=Il(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function rd(t){if(0===t)return!1;const e=Il(t);if(1!==t){if(ed(e,"EXT_color_buffer_float"))return ad(e);const t="EXT_color_buffer_half_float";if(ed(e,t)){const n=e.getExtension(t);return function(t,e){const n=Dl(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(a),o}(e,n)}return!1}if(!ed(e,"OES_texture_float"))return!1;if(!ed(e,"WEBGL_color_buffer_float"))return!1;return ad(e)}function ad(t){const e=Dl(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),a}function od(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&a.kf.assert("complex64"!==t.dtype,()=>"".concat(e," does not support complex64 tensors ")+"in the WebGL backend.")})}const sd=Object(a.Kd)();function id(){let t,e,n,r,o,s,i,c,u,l;return 2===Object(a.Kd)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",o="texture",s="outputColor",i="out vec4 outputColor;",c="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",o="texture2D",s="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:o,output:s,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:u,defineRound:l}}function cd(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=a.kf.computeStrides(e);return r.map((e,a)=>{const o="int ".concat(t[a]," = ").concat(n," / ").concat(e),s=a===r.length-1?"int ".concat(t[a+1]," = ").concat(n," - ").concat(t[a]," * ").concat(e):"index -= ".concat(t[a]," * ").concat(e);return"".concat(o,"; ").concat(s,";")}).join("")}function ud(t){const e=a.kf.computeStrides(t).map(t=>t.toString());return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(e[0]," + coords.y * ").concat(e[1]," + coords.z;\n  }\n")}sd.registerFlag("HAS_WEBGL",()=>sd.getNumber("WEBGL_VERSION")>0),sd.registerFlag("WEBGL_VERSION",()=>nd(2)?2:nd(1)?1:0),sd.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),sd.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===sd.get("WEBGL_VERSION")),sd.registerFlag("WEBGL_CPU_FORWARD",()=>!0),sd.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),sd.registerFlag("WEBGL_PACK",()=>sd.getBool("HAS_WEBGL")),sd.registerFlag("WEBGL_PACK_NORMALIZATION",()=>sd.getBool("WEBGL_PACK")),sd.registerFlag("WEBGL_PACK_CLIP",()=>sd.getBool("WEBGL_PACK")),sd.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),sd.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>sd.getBool("WEBGL_PACK")),sd.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>sd.getBool("WEBGL_PACK")),sd.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>sd.getBool("WEBGL_PACK")),sd.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>sd.getBool("WEBGL_PACK")),sd.registerFlag("WEBGL_PACK_REDUCE",()=>sd.getBool("WEBGL_PACK")),sd.registerFlag("WEBGL_LAZILY_UNPACK",()=>sd.getBool("WEBGL_PACK")),sd.registerFlag("WEBGL_CONV_IM2COL",()=>sd.getBool("WEBGL_PACK")),sd.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==$l){const e=Il(t);$l=e.getParameter(e.MAX_TEXTURE_SIZE)}return $l}(sd.getNumber("WEBGL_VERSION"))),sd.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==td){const e=Il(t);td=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,td)}(sd.getNumber("WEBGL_VERSION"))),sd.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=sd.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Il(t);return e=ed(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:ed(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),sd.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>sd.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.Ed.isMobile()),sd.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=Il(t);if(1===t){if(!ed(e,"OES_texture_float"))return!1}else if(!ed(e,"EXT_color_buffer_float"))return!1;return ad(e)}(sd.getNumber("WEBGL_VERSION"))),sd.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!sd.getBool("WEBGL_FORCE_F16_TEXTURES")&&sd.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),sd.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>rd(sd.getNumber("WEBGL_VERSION"))),sd.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=sd.getNumber("WEBGL_VERSION"))&&null!=Il(t).fenceSync;var t}),sd.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>sd.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),sd.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(t,"."))});const ld="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class dd{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Tl.DENSE;const e=_l(t),n=id();this.outputShape=t,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(cd(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(e[0],", ").concat(e[1],"));\n        int index = 4 * (resTexRC.x * ").concat(e[1]," + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(n.output," = result;\n      }\n    ")}}class pd{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Tl.DENSE;const e=_l(t),n=id();this.outputShape=t,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(cd(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(e[0],", ").concat(e[1],"));\n        int index = 4 * (resTexRC.x * ").concat(e[1]," + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(n.output," = result;\n      }\n    ")}}class hd{constructor(t){this.variableNames=["A"],this.outTexUsage=El.DOWNLOAD;const e=id();this.outputShape=t,this.userCode="\n      ".concat(ld,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class fd{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=El.DOWNLOAD;const e=id();this.outputShape=t,this.userCode="\n      ".concat(ld,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class md{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.variableNames=["A"];const r=id(),[a,o]=e;this.outputShape=t;let s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode="\n      ".concat(ud(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ").concat(o,";\n        int c = imod(flatIndex, ").concat(o,");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(").concat(o,".0, ").concat(a,".0);\n        vec4 values = ").concat(r.texture2D,"(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ").concat(r.output," = vec4(").concat(s,", 0., 0., 0.);\n      }\n    ")}}class bd{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=id(),[a,o]=e;this.outputShape=t;let s="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let c=0;c<=1;c++)for(let e=0;e<=1;e++){const n=2*c+e;s+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(e," < ").concat(t[2],") {\n            localCoords[2] += ").concat(e,";\n            if(localCoords[1] + ").concat(c," < ").concat(t[1],") {\n              localCoords[1] += ").concat(c,";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ").concat(o,";\n              c = imod(flatIndex, ").concat(o,");\n              uv = (vec2(c, r) + halfCR) / vec2(").concat(o,".0, ").concat(a,".0);\n              values = ").concat(r.texture2D,"(A, uv);\n\n              if(offset == 0) {\n                result[").concat(n,"] = values[0];\n              } else if(offset == 1) {\n                result[").concat(n,"] = values[1];\n              } else if(offset == 2) {\n                result[").concat(n,"] = values[2];\n              } else {\n                result[").concat(n,"] = values[3];\n              }\n            }\n          }\n        ")}this.userCode="\n      ".concat(ud(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ").concat(s,"\n\n        ").concat(r.output," = ").concat(i,";\n      }\n    ")}}function gd(t){const e=id();return function(t,e){const n=ql(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Fl(t,()=>t.shaderSource(n,e)),Fl(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,"".concat(e.version,"\n    precision highp float;\n    ").concat(e.attribute," vec3 clipSpacePos;\n    ").concat(e.attribute," vec2 uv;\n    ").concat(e.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function yd(t){return function(t,e){const n=ql(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Fl(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Fl(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function vd(t){return function(t,e){const n=ql(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Fl(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),Fl(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Uint16Array([0,1,2,2,1,3]))}function Od(t,e,n,r,o,s){!function(t,e){const n=Object(a.Kd)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const n="[".concat(t,"x").concat(e,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(t>n||e>n){const r="[".concat(t,"x").concat(e,"]"),a="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}(e,n);const i=function(t){return ql(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),c=t.TEXTURE_2D;return Fl(t,()=>t.bindTexture(c,i)),Fl(t,()=>t.texParameteri(c,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),Fl(t,()=>t.texParameteri(c,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),Fl(t,()=>t.texParameteri(c,t.TEXTURE_MIN_FILTER,t.NEAREST)),Fl(t,()=>t.texParameteri(c,t.TEXTURE_MAG_FILTER,t.NEAREST)),Fl(t,()=>t.texImage2D(c,0,r,e,n,0,o,s,null)),Fl(t,()=>t.bindTexture(t.TEXTURE_2D,null)),i}function xd(t){return t.internalFormatFloat}function wd(t){return t.internalFormatHalfFloat}function kd(t){return t.downloadTextureFormat}function jd(t){return t.internalFormatPackedFloat}function Nd(t){return t.internalFormatPackedHalfFloat}function Sd(t,e,n,r,a,o,s,i){const c=t,u=new Float32Array(function(t,e){const[n,r]=Rl(t,e);return n*r*4}(o,s));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}class Id{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(a.Kd)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){Nl[t]=e}(e,t)):this.gl=Il(e);let n="WEBGL_color_buffer_float";if(1===Object(a.Kd)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=Ll(this.gl,t),ed(this.gl,e))this.textureHalfFloatExtension=Ll(this.gl,e);else if(Object(a.Kd)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ed(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=Ll(this.gl,"EXT_color_buffer_half_float");else if(Object(a.Kd)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ed(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ed(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=yd(this.gl),this.indexBuffer=vd(this.gl),this.framebuffer=function(t){return ql(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Dl(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(a.Kd)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Fl(t,()=>t.finish()),Fl(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Fl(t,()=>t.deleteFramebuffer(this.framebuffer)),Fl(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Fl(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Fl(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,o]=Al(e,n);return Od(t,a,o,xd(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,o]=Al(e,n);return Od(t,a,o,wd(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,o]=Al(e,n);return Od(t,a,o,kd(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){Fl(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?Fl(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):Fl(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),Fl(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,a,o){let s,i,c;Fl(t,()=>t.bindTexture(t.TEXTURE_2D,e)),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),i=t.UNSIGNED_BYTE,c=t.RGBA):(s=new Float32Array(n*r*4),i=t.FLOAT,c=o.internalFormatPackedFloat),s.set(a),Fl(t,()=>t.texImage2D(t.TEXTURE_2D,0,c,n,r,0,t.RGBA,i,s)),Fl(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,o]=Rl(e,n);return Od(t,a,o,Nd(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,o]=Rl(e,n);return Od(t,a,o,jd(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Gl(this.gl,this.framebuffer),this.outputTexture=null),Fl(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const[a,o]=Al(e,n),s=new Uint8Array(e*n*4);return Fl(t,()=>t.readPixels(0,0,a,o,r.downloadTextureFormat,t.UNSIGNED_BYTE,s)),new Float32Array(s.buffer)}(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,a,o){return Sd(this.gl,t,0,0,0,a,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const a=t.createBuffer();Fl(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const o=16*e*n;return Fl(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,o,t.STREAM_READ)),Fl(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),Fl(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(a.Kd)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(a,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=a}else Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n){const r=new Float32Array(e*n*4);return Fl(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=zl(e,t),r=gd(e),a=function(t){return ql(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);return Fl(e,()=>e.attachShader(a,r)),Fl(e,()=>e.attachShader(a,n)),function(t,e){if(Fl(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,a),this.debug&&Bl(e,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(t,e,n){return Fl(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Vl(t,e,"clipSpacePos",n,3,20,0)&&Vl(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),a}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Fl(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Bl(this.gl,this.program),Fl(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(t,e,n){return ql(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Fl(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),Wl(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,a]=Rl(e,n);this.setOutputMatrixTextureDriver(t,r,a)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Bl(this.gl,this.program),Hl(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Fl(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Fl(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Ll(this.gl,2===Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await a.kf.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||a.kf.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Ul(this.gl,t,this.framebuffer),this.debug&&Hl(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Ul(this.gl,this.outputTexture,this.framebuffer),this.debug&&Hl(this.gl)):Gl(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;Ul(r,t,this.framebuffer),this.debug&&Hl(r),this.outputTexture=t,Fl(r,()=>r.viewport(0,0,e,n)),Fl(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),Fl(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Td}=a.ld;function Ed(t,e,n,r){const o=[];t.forEach(t=>{const e=a.kf.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?o.push("uniform float ".concat(t.name).concat(e>1?"[".concat(e,"]"):"",";")):(o.push("uniform sampler2D ".concat(t.name,";")),o.push("uniform int offset".concat(t.name,";")))});const s=o.join("\n"),i=t.map(t=>function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r="";r+=n?Ad(t):Cd(t);const a=t.shapeInfo.logicalShape,o=e.logicalShape;a.length<=o.length&&(r+=n?zd(t,e):Pd(t,e));return r}(t,e,r)).join("\n"),c=e.texShape,u=id(),l=function(t){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(t.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(u);let d,p,h=function(t){return"".concat(t.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(t.varyingFs," vec2 resultUV;\n    ").concat(t.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(t.defineSpecialNaN,"\n    ").concat(t.defineSpecialInf,"\n    ").concat(t.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(_d,"\n    ").concat(Rd,"\n    ").concat(Dd,"\n  ")}(u);e.isPacked?(d=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(n[1],".0);\n      }\n    ");if(1===n[1])return"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(n[0],".0);\n      }\n    ");return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n      return 2 * (resTexRC.x * ").concat(n[1]," + resTexRC.y);\n    }\n  ")}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(a.kf.arraysEqual(t,e))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(n[0],", ").concat(n[1],"));\n      }\n    ");const r=Math.ceil(t[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),a=r*Math.ceil(t[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n\n      int b = index / ").concat(a,";\n      index -= b * ").concat(a,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),a=r*Math.ceil(t[t.length-2]/2);let o=a,s="",i="b, r, c";for(let c=2;c<t.length-1;c++)o*=t[t.length-c-1],s="\n      int b".concat(c," = index / ").concat(o,";\n      index -= b").concat(c," * ").concat(o,";\n    ")+s,i="b".concat(c,", ")+i;return"\n    ivec".concat(t.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(n[0],", ").concat(n[1],"));\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n\n      ").concat(s,"\n\n      int b = index / ").concat(a,";\n      index -= b * ").concat(a,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(t.length,"(").concat(i,");\n    }\n  ")}(t,e)}}(e.logicalShape,c),p=function(t){return"\n    void setOutput(vec4 val) {\n      ".concat(t.output," = val;\n    }\n  ")}(u)):(d=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){if(1===e[0])return"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(e[1],".0);\n      }\n    ");if(1===e[1])return"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(e[0],".0);\n      }\n    ");return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      return resTexRC.x * ").concat(e[1]," + resTexRC.y;\n    }\n  ")}(0,e);case 2:return function(t,e){if(a.kf.arraysEqual(t,e))return"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(e[0],", ").concat(e[1],"));\n      }\n    ");if(1===t[1])return"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===t[0])return"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      int r = index / ").concat(t[1],";\n      int c = index - r * ").concat(t[1],";\n      return ivec2(r, c);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=cd(["r","c","d"],t);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,e);case 4:return function(t,e){const n=cd(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(n,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(t,e);case 5:return function(t,e){const n=cd(["r","c","d","d2","d3"],t);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(e[0],",\n                             ").concat(e[1],"));\n\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(t,e);case 6:return function(t,e){const n=cd(["r","c","d","d2","d3","d4"],t);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(t,e);default:throw new Error("".concat(t.length,"-D output sampling is not yet supported"))}}(e.logicalShape,c),p=function(t){return"\n    void setOutput(float val) {\n      ".concat(t.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(u)),r&&(h+=Fd);return[h,l,p,s,d,i,n].join("\n")}function Cd(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"float ".concat(n,"() {return ").concat(e,";}");const[r,a]=t.shapeInfo.texShape;if(1===r&&1===a)return"\n      float ".concat(n,"() {\n        return sampleTexture(").concat(e,", halfCR);\n      }\n    ");const[o,s]=t.shapeInfo.texShape,i=Md(e);return"\n    float ".concat(n,"() {\n      vec2 uv = uvFromFlat(").concat(o,", ").concat(s,", ").concat(i,");\n      return sampleTexture(").concat(e,", uv);\n    }\n  ")}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"\n      float ".concat(n,"(int index) {\n        ").concat(Ld(t),"\n      }\n    ");const r=t.shapeInfo.texShape,a=r[0],o=r[1];if(1===o&&1===a)return"\n      float ".concat(n,"(int index) {\n        return sampleTexture(").concat(e,", halfCR);\n      }\n    ");const s=Md(e);if(1===o)return"\n      float ".concat(n,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(s,") + 0.5) / ").concat(a,".0);\n        return sampleTexture(").concat(e,", uv);\n      }\n    ");if(1===a)return"\n      float ".concat(n,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(s,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(e,", uv);\n      }\n    ");return"\n    float ".concat(n,"(int index) {\n      vec2 uv = uvFromFlat(").concat(a,", ").concat(o,", index + ").concat(s,");\n      return sampleTexture(").concat(e,", uv);\n    }\n  ")}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape;if(null!=o&&a.kf.arraysEqual(e,o)){const t=o[0],e=o[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(e,".0, ").concat(t,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}const{newShape:s,keptDims:i}=a.kf.squeezeShape(e),c=s;if(c.length<e.length){const e=Vd(t,c),n=["row","col"];return"\n      ".concat(Cd(e),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(Wd(n,i),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(e[1],", 1)));\n        ").concat(Ld(t),"\n      }\n    ");const u=o[0],l=o[1],d=Md(n);if(1===l)return"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(e[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");if(1===u)return"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(e[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(l,".0, 0.5);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(e[1]," + col + ").concat(d,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(l,", index);\n    return sampleTexture(").concat(n,", uv);\n  }\n")}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[1]*e[2],s=e[2],{newShape:i,keptDims:c}=a.kf.squeezeShape(e),u=i;if(u.length<e.length){const e=Vd(t,u),n=["row","col","depth"];return"\n        ".concat(Cd(e),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(Wd(n,c),");\n        }\n      ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(o,", ").concat(s,", 1)));\n        ").concat(Ld(t),"\n      }\n    ");const l=t.shapeInfo.texShape,d=l[0],p=l[1],h=t.shapeInfo.flatOffset;if(p===o&&null==h)return"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(s,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(d,".0);\n          return sampleTexture(").concat(n,", uv);\n        }\n      ");if(p===s&&null==h)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(e[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(d,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const f=Md(n);return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(o," + col * ").concat(s," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n        return sampleTexture(").concat(n,", uv);\n      }\n  ")}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[3],s=e[2]*o,i=e[1]*s,{newShape:c,keptDims:u}=a.kf.squeezeShape(e);if(c.length<e.length){const e=Vd(t,c),n=["row","col","depth","depth2"];return"\n      ".concat(Cd(e),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(Wd(n,u),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(s,", ").concat(o,", 1)));\n        ").concat(Ld(t),"\n      }\n    ");const l=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&null==l)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(s,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(h===o&&null==l)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(e[1]*e[2],", ").concat(e[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=Md(n);return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(s," +\n          depth * ").concat(o," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(h,", index + ").concat(f,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[4],s=e[3]*o,i=e[2]*s,c=e[1]*i,{newShape:u,keptDims:l}=a.kf.squeezeShape(e);if(u.length<e.length){const e=Vd(t,u),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(Cd(e),"\n      float ").concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(r,"(").concat(Wd(n,l),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(i,", ").concat(s,", ").concat(o,")) +\n          depth3;\n        ").concat(Ld(t),"\n      }\n    ");const d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,h=p[0],f=p[1];if(f===c&&null==d)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i,", ").concat(s,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===o&&null==d)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3],",\n               ").concat(e[2]*e[3],", ").concat(e[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=Md(n);return"\n    float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," + depth * ").concat(s," +\n          depth2 * ").concat(o," + depth3 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(h,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:o,keptDims:s}=a.kf.squeezeShape(e);if(o.length<e.length){const e=Vd(t,o),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(Cd(e),"\n      float ").concat(r,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(r,"(").concat(Wd(n,s),");\n      }\n    ")}const i=e[5],c=e[4]*i,u=e[3]*c,l=e[2]*u,d=e[1]*l;if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(d,", ").concat(l,", ").concat(u,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(i,", 1)));\n        ").concat(Ld(t),"\n      }\n    ");const p=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,f=h[0],m=h[1];if(m===d&&null==p)return"\n      float ".concat(r,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(u,", ").concat(c,", ").concat(i,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(m===i&&null==p)return"\n      float ".concat(r,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3]*e[4],",\n               ").concat(e[2]*e[3]*e[4],",\n               ").concat(e[3]*e[4],",\n               ").concat(e[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const b=Md(n);return"\n    float ".concat(r,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(d," + col * ").concat(l," + depth * ").concat(u," +\n          depth2 * ").concat(c," + depth3 * ").concat(i," + depth4 + ").concat(b,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(m,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);default:throw new Error("".concat(e.length,"-D input sampling")+" is not yet supported")}}function Ad(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=id();return"\n    vec4 ".concat(n,"() {\n      return ").concat(r.texture2D,"(").concat(e,", halfCR);\n    }\n  ")}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],o=id();return"\n    vec4 ".concat(n,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(a[0],", ").concat(a[1],", index);\n      return ").concat(o.texture2D,"(").concat(e,", uv);\n    }\n  ")}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape,s=o[0],i=o[1],c=id();if(null!=o&&a.kf.arraysEqual(e,o))return"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(s,".0);\n\n        return ").concat(c.texture2D,"(").concat(n,", uv);\n      }\n    ");const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(e[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(l,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){const n=e.slice(1),a=[1,2],o=Vd(t,n),s=["b","row","col"];return"\n        ".concat(Ad(o),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(Wd(s,a),");\n        }\n      ")}const s=o[0],i=o[1],c=Math.ceil(e[2]/2),u=c*Math.ceil(e[1]/2),l=id();return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(s,", ").concat(i,", ").concat(u,", ").concat(c,", b, row, col);\n      return ").concat(l.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],i=s[0],c=s[1],u=Math.ceil(e[n-1]/2);let l=u*Math.ceil(e[n-2]/2),d="int b, int row, int col",p="b * ".concat(l," + (row / 2) * ").concat(u," + (col / 2)");for(let f=2;f<n-1;f++)d="int b".concat(f,", ")+d,l*=e[n-f-1],p="b".concat(f," * ").concat(l," + ")+p;const h=id();return"\n    vec4 ".concat(a,"(").concat(d,") {\n      int index = ").concat(p,";\n      int texR = index / ").concat(c,";\n      int texC = index - texR * ").concat(c,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(c,", ").concat(i,");\n      return ").concat(h.texture2D,"(").concat(r,", uv);\n    }\n  ")}(t)}}const _d="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Rd="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Dd="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Fd="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Md(t){return"offset".concat(t)}function Ld(t){const e=t.name,n=a.kf.sizeFromShape(t.shapeInfo.logicalShape);return n<2?"return ".concat(e,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(e,"[i];\n      }\n    }\n  ")}function zd(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",s=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,c=Td(t.shapeInfo.logicalShape,e.logicalShape),u=Bd(i),l=i-s;let d;const p=["x","y","z","w","u","v"];d=0===s?"":i<2&&c.length>=1?"coords = 0;":c.map(t=>"coords.".concat(p[t+l]," = 0;")).join("\n");let h="";h=i<2&&s>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords.".concat(p[e+l])).join(", ");let f="return outputValue;";const m=1===a.kf.sizeFromShape(t.shapeInfo.logicalShape),b=1===a.kf.sizeFromShape(e.logicalShape);if(1!==s||m||b){if(m&&!b)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const t=s-2,e=s-1;c.indexOf(t)>-1&&c.indexOf(e)>-1?f="return vec4(outputValue.x);":c.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(o,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(d,"\n      vec4 outputValue = get").concat(r,"(").concat(h,");\n      ").concat(f,"\n    }\n  ")}function Pd(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",s=e.texShape,i=t.shapeInfo.texShape,c=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&c===u&&null==t.shapeInfo.flatOffset&&a.kf.arraysEqual(i,s))return"\n      float ".concat(o,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=Bd(u),d=Td(t.shapeInfo.logicalShape,e.logicalShape),p=u-c;let h;const f=["x","y","z","w","u","v"];h=0===c?"":u<2&&d.length>=1?"coords = 0;":d.map(t=>"coords.".concat(f[t+p]," = 0;")).join("\n");let m="";return m=u<2&&c>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords.".concat(f[e+p])).join(", "),"\n    float ".concat(o,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(h,"\n      return get").concat(r,"(").concat(m,");\n    }\n  ")}function Bd(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error("GPU for rank ".concat(t," is not yet supported"))}function Vd(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Wd(t,e){return e.map(e=>t[e]).join(", ")}function Ud(t,e){if(t.length!==e.length)throw Error("Binary was compiled with ".concat(t.length," inputs, but ")+"was executed with ".concat(e.length," inputs"));t.forEach((t,n)=>{const r=t.logicalShape,o=e[n],s=o.shape;if(!a.kf.arraysEqual(r,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(r," and ").concat(s," must match"));if(t.isUniform&&o.isUniform)return;const i=t.texShape,c=o.isUniform?null:o.texData.texShape;if(!a.kf.arraysEqual(i,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(i," and ").concat(c," must match"))})}const{addImpl:Gd,bincountImpl:Hd,bincountReduceImpl:qd,ceilImpl:Kd,concatImpl:Xd,expImpl:Yd,expm1Impl:Qd,floorImpl:Jd,gatherV2Impl:Zd,greaterImpl:$d,lessImpl:tp,linSpaceImpl:ep,logImpl:np,maxImpl:rp,maximumImpl:ap,minimumImpl:op,multiplyImpl:sp,negImpl:ip,prodImpl:cp,rangeImpl:up,rsqrtImpl:lp,simpleAbsImpl:dp,sliceImpl:pp,stridedSliceImpl:hp,subImpl:fp,tileImpl:mp,topKImpl:bp,transposeImpl:gp,uniqueImpl:yp}=r;function vp(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>"".concat(t,".").concat(e))}function Op(t,e){return 1===e?[t]:vp(t,e)}class xp{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Op("rc",e),r=Bd(e),a=function(t,e,n){if(1===t)return"rc > ".concat(e[0]);let r="";for(let a=t-2;a<t;a++)r+="".concat(n[a]," >= ").concat(e[a]),a<t-1&&(r+="||");return r}(e,t,n),o=function(t,e,n,r){if(1===t)return"";const a=r.slice(-2);return"\n    int r = ".concat(a[0],";\n    int c = ").concat(a[1],";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ").concat(e,";\n    bool rEdge = rp1 >= ").concat(n,";\n  ")}(e,t[t.length-1],t[t.length-2],n),s=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let o="".concat(0===r?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let n=2;n<t;n++)o="".concat(e[e.length-1-n],",")+o;n.push(o)}return n}(n,e);if(1===n)return"getA(rc),\n            rc + 1 >= ".concat(t[0]," ? 0. : getA(rc + 1),\n            0, 0");return"getA(".concat(r[0],"),\n          cEdge ? 0. : getA(").concat(r[1],"),\n          rEdge ? 0. : getA(").concat(r[2],"),\n          rEdge || cEdge ? 0. : getA(").concat(r[3],")")}(t,n);this.userCode="\n        void main() {\n          ".concat(r," rc = getOutputCoords();\n\n          if(").concat(a,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(o,"\n\n            setOutput(vec4(").concat(s,"));\n          }\n        }\n      ")}}}class wp{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let r=0;r<4;r++){let t="thisRC = rc;";r%2===1&&(t+="thisRC.z += 1;"),r>1&&(t+="thisRC.y += 1;"),n+="\n        ".concat(t,"\n        ").concat(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(r,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(r>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(t){const e=cd(["r","c","d"],t);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(e,"\n      return ivec3(r, c, d);\n    }\n  ")}(e),"\n      ").concat(ud(t),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(t[1],";\n        int cols = ").concat(t[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class kp{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=Np(e,n),a=Sp(t,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const o=jp(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const t=this.freeTextures[a].shift();return this.usedTextures[a].push(t),t}let s;return r===Cl.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Cl.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Cl.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Cl.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Cl.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),s}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const o=Np(n,r),s=Sp(e,o,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=jp(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),c=Object(a.Kd)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(t,")"));const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*e),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function jp(t,e,n,r,a){const o=function(t,e){switch(t){case Cl.PACKED_2X2_FLOAT32:return jd(e);case Cl.PACKED_2X2_FLOAT16:return Nd(e);case Cl.UNPACKED_FLOAT32:return xd(e);case Cl.UNPACKED_FLOAT16:return wd(e);case Cl.PACKED_4X1_UNSIGNED_BYTE:return kd(e);default:throw new Error("Unknown physical texture type ".concat(t))}}(e,r);let s;if(a){const[e,n]=Rl(t[0],t[1]);s=e*n}else{const[e,n]=Al(t[0],t[1]);s=e*n}return s*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format ".concat(e))}(n,o)}function Np(t,e){if(t===El.UPLOAD)return Cl.PACKED_2X2_FLOAT32;if(t===El.RENDER||null==t)return function(t){return Object(a.Kd)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Cl.PACKED_2X2_FLOAT32:Cl.UNPACKED_FLOAT32:t?Cl.PACKED_2X2_FLOAT16:Cl.UNPACKED_FLOAT16}(e);if(t===El.DOWNLOAD||t===El.PIXELS)return Cl.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(t))}function Sp(t,e,n){return"".concat(t[0],"_").concat(t[1],"_").concat(e,"_").concat(n)}class Ip{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      float unaryOperation(float x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const Tp="if (isnan(x)) return x;",Ep="return abs(x);";const Cp=Tp+"\n  return (x < 0.0) ? 0.0 : x;\n",Ap=Tp+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",_p="return x;",Rp="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Dp="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Fp="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";class Mp{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class Lp{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=Op("rc",e),r=Bd(e),a=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),o=n.slice(-2),s=e<=1?"rc":"vec2(".concat(o.join(","),")");this.userCode="\n      void main() {\n        ".concat(r," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(a,");\n\n        setOutput(getChannel(packedInput, ").concat(s,"));\n      }\n    ")}}const zp=a.Xd.whereImpl,Pp={};class Bp extends a.vb{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(a.Kd)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Il(Object(a.Kd)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Object(a.Kd)().getNumber("WEBGL_VERSION"))in Pp||(Pp[e]={}),Pp[e]),this.gpgpu=new Id(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new kp(this.gpgpu),this.numMBBeforeWarning=null==Object(a.Kd)().global.screen?1024:Object(a.Kd)().global.screen.height*Object(a.Kd)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new a.L(this,Object(a.Jd)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Object(a.Kd)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(a.Kd)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:El.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}decComplexRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.complexParentRefCount>0&&e.refCount--}}move(t,e,n,r){if(Object(a.Kd)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:El.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:o,slice:s,shape:i,isPacked:c}=e;if(null!=s){let e;e=c?new Mp(i,_p):new Ip(i,_p);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let l,d;if(u&&(l=a.kf.now()),"complex64"===r){const t=this.readSync(o.real.dataId),e=this.readSync(o.imag.dataId);d=a.ld.mergeRealAndImagArrays(t,e)}else d=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=a.kf.now()-l),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:o,dtype:s,complexTensorInfos:i,isPacked:c}=e;if(null!=o){let e;e=c?new Mp(r,_p):new Ip(r,_p);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(a.Kd)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(a.Kd)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,d=null;if("complex64"!==s&&Object(a.Kd)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(e.texture,..._l(r))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),e=t[0],n=t[1];l=a.ld.mergeRealAndImagArrays(e,n)}else if(null==d)l=this.getValuesFromTexture(t);else{const t=a.kf.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const p=this.convertAndCacheOnCPU(t,l),h=this.pendingRead.get(t);return this.pendingRead.delete(t),h.forEach(t=>t(p)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),p}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>a.kf.decodeString(t))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(a.qd)(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!Ml(n)){if(Object(a.Kd)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),o=a.kf.sizeFromShape(e);if(Object(a.Kd)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,..._l(e)).subarray(0,o);return this.disposeIntermediateTensorInfo(n),a}const s=Object(a.Kd)().getBool("WEBGL_PACK")&&!0===r,i=s?Ql(e):e,c=s?new fd(i):new hd(i),u=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:t}],"float32"),l=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),d}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const o=a.kf.flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),s=a.kf.flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(o);i.kernelMs=a.kf.sum(t),i.getExtraProfileInfo=()=>t.map((t,e)=>({name:s[e],ms:t})).map(t=>"".concat(t.name,": ").concat(t.ms)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:a.kf.now(),endMs:null}}endTimer(t){return Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=a.kf.now(),t)}async getQueryTime(t){if(Object(a.Kd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:a,isPacked:o,slice:s}=this.texData.get(t),i=s&&s.origDataId||t,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,a,o)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(a.Kd)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(a.Jd)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:128;const n=this.getCPUBackend();return Object(a.Kd)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every(t=>null==this.texData.get(t.dataId).texture&&a.kf.sizeFromShape(t.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){a.ld.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return zp(t.shape,e)}packedUnaryOp(t,e,n){const r=new Mp(t.shape,e);return this.compileAndRun(r,[t],n)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=dp(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Object(a.Kd)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Ep,t.dtype);const e=new Ip(t.shape,Ep);return this.compileAndRun(e,[t])}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&a.kf.isString(n[0])){const o=n.map(t=>a.kf.encodeString(t));r=this.write(o,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Object(a.Jd)().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new Lp(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new xp(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Xl(t.shape),...Yl(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},a=[Xl(e),...Yl(e)],o=new wp(a,n),s=this.runWebGLProgram(o,[r],t.dtype,null,!0);return{dataId:s.dataId,shape:e,dtype:s.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:a}=e,o=Ql(r);let s;s=n?new pd(o):new dd(o);return{dtype:a,shape:r,dataId:this.runWebGLProgram(s,[{shape:o,dtype:a,dataId:t}],a,null,!0).dataId}}runWebGLProgram(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(s.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===Tl.DENSE){const e=_l(t.outputShape);i.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===a.kf.sizeFromShape(s.shape))return i.values=a.kf.getTypedArrayFromDType(s.dtype,0),s;const c=[],u=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&a.kf.sizeFromShape(e.shape)<=Object(a.Kd)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),c.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!Zl(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),c.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},d=function(t,e,n){let r="";e.concat(n).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+="".concat(t.shape,"_").concat(n,"_").concat(e)});const a=t.userCode;let o=t.constructor.name;return o+="_"+r+"_"+a,o}(t,u,l),p=this.getAndSaveBinary(d,()=>function(t,e,n,r){const o=e.userCode,s=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),i=s.map(t=>t.shapeInfo),c={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Ed(s,c,o,e.packedInputs),l=t.createProgram(u);let d=null;const p=t.getUniformLocation(l,"NAN",!1);1===Object(a.Kd)().getNumber("WEBGL_VERSION")&&(d=t.getUniformLocation(l,"INFINITY",!1));const h={};for(let a=0;a<e.variableNames.length;a++){const n=e.variableNames[a],r=!1;h[n]=t.getUniformLocation(l,n,r),h["offset".concat(n)]=t.getUniformLocation(l,"offset".concat(n),r)}return{program:e,source:u,webGLProgram:l,uniformLocations:h,inShapeInfos:i,outShapeInfo:c,infLoc:d,nanLoc:p}}(this.gpgpu,t,u,l)),h=null!=this.activeTimers;let f;if(h&&(f=this.startTimer()),function(t,e,n,r,o){Ud(e.inShapeInfos,n),Ud([e.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(s,i[0],i[1]):t.setOutputMatrixTexture(s,i[0],i[1]),t.setProgram(e.webGLProgram),1===Object(a.Kd)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const o=e.program.variableNames[r],s=e.uniformLocations[o],i=e.uniformLocations["offset".concat(o)];if(null!=s)if(n.isUniform)if(a.kf.sizeFromShape(n.shape)<2)t.gl.uniform1f(s,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,s,r)}),null!=o&&o(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,p,u,l,r),c.forEach(t=>this.disposeIntermediateTensorInfo(t)),h&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!Object(a.Kd)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===o){const t=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),t}return s}compileAndRun(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||e[0].dtype;const s=this.runWebGLProgram(t,e,n,r,o);return Object(a.Jd)().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(a.Kd)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(a.df)(()=>{if(!Object(a.Kd)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(a.Kd)().getBool("DEBUG");Object(a.Kd)().set("DEBUG",!1);const e=this.abs(Object(a.De)(1e-8)).dataSync()[0];if(Object(a.Kd)().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:o,texture:s,usage:i,isPacked:c}=e;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=a.kf.now());let d=e.texShape;if(null==d&&(d=function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Object(a.Kd)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?a.kf.nearestLargerEven(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=a.kf.squeezeShape(t);t=e.newShape}let r=a.kf.sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Xl(t);let n=2,o=2;return t.length&&([n,o]=Yl(t)),r=e*(n/2)*(o/2),a.kf.sizeToSquarishShape(r).map(t=>2*t)}return a.kf.sizeToSquarishShape(r)}(n,c),e.texShape=d),null!=o){const t=Ql(n);let s,i=d[1],p=d[0];const h=o instanceof Uint8Array;c?([i,p]=Rl(d[0],d[1]),s=new bd(t,[p,i],h)):s=new md(t,[p,i],h);const f=this.makeTensorInfo([p,i],r);this.texData.get(f.dataId).usage=h?El.PIXELS:El.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,o);const m=!0,b=this.runWebGLProgram(s,[f],r,null,m),g=this.texData.get(b.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),e.values=null,u&&(this.uploadWaitMs+=a.kf.now()-l)}else{const t=this.acquireTexture(d,i,r,c);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype ".concat(e))}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(t," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*a.kf.bytesPerElement(e)}}a.Ed.isBrowser()&&Object(a.ye)("webgl",()=>new Bp,2);class Vp{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=a.ld.assertAndGetBroadcastShape(e,n),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}class Wp{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a.ld.assertAndGetBroadcastShape(e,n);const o=this.outputShape.length;let s="";if(r)if(0===o||1===a.kf.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const t=Bd(o);if(s="\n          ".concat(t," coords = getOutputCoords();\n        "),1===o)s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const t=Op("coords",o);s+="\n            bool nextRowOutOfBounds =\n              (".concat(t[o-2]," + 1) >= ").concat(this.outputShape[o-2],";\n            bool nextColOutOfBounds =\n              (").concat(t[o-1]," + 1) >= ").concat(this.outputShape[o-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function Up(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Gp={kernelName:a.qb,backendName:"webgl",kernelFunc:Up};function Hp(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,o=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(o.dataId),i=Up({inputs:{x:r},backend:n});n.texData.get(i.dataId).complexParentRefCount++;const c=Up({inputs:{x:a},backend:n});return n.texData.get(c.dataId).complexParentRefCount++,s.complexTensorInfos={real:i,imag:c},o}const qp={kernelName:a.y,backendName:"webgl",kernelFunc:Hp},Kp="return (a < 0.) ? b * a : a;",Xp="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Yp={kernelName:a.yb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{alpha:s}=r,i=n.makeTensorInfo([],"float32",a.kf.createScalarValue(s,"float32")),c=Object(a.Kd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wp(Xp,o.shape,i.shape):new Vp(Kp,o.shape,i.shape),u=n.runWebGLProgram(c,[o,i],o.dtype);return n.disposeIntermediateTensorInfo(i),u}},Qp="return (a < 0.) ? b * a : a;",Jp="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Zp={kernelName:a.gc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:o}=e,s=Object(a.Kd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wp(Jp,r.shape,o.shape):new Vp(Qp,r.shape,o.shape);return n.runWebGLProgram(s,[r,o],r.dtype)}};function $p(t){let{opSnippet:e,packedOpSnippet:n,cpuKernelImpl:r,dtype:o}=t;return t=>{let{inputs:s,backend:i}=t;const{x:c}=s,u=i,l=o||c.dtype;if(u.shouldExecuteOnCPU([c])&&null!=r){const t=u.texData.get(c.dataId),e=r(t.values,l);return u.makeTensorInfo(c.shape,l,e)}let d;return d=Object(a.Kd)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new Mp(c.shape,n):new Ip(c.shape,e),u.runWebGLProgram(d,[c],l)}}function th(t){let{opSnippet:e,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:o=!1,cpuKernelImpl:s,dtype:i}=t;return t=>{let{inputs:c,backend:u}=t;const{a:l,b:d}=c,p=u;if(o&&"complex64"===l.dtype){const t=p.texData.get(l.dataId),n=p.texData.get(d.dataId),[r,o]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,o={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:d.shape},i=new Vp(e,l.shape,d.shape);return p.runWebGLProgram(i,[o,s],Object(a.jf)(n.dtype,r.dtype))}),s=Hp({inputs:{real:r,imag:o},backend:p});return p.disposeIntermediateTensorInfo(r),p.disposeIntermediateTensorInfo(o),s}const h=i||Object(a.jf)(l.dtype,d.dtype);if(p.shouldExecuteOnCPU([l,d])&&null!=s){const t=p.texData.get(l.dataId),e=p.texData.get(d.dataId),[n,r]=s(l.shape,d.shape,t.values,e.values,h),a=p.makeTensorInfo(r,h);return p.texData.get(a.dataId).values=n,a}let f;return f=Object(a.Kd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Wp(n,l.shape,d.shape,r):new Vp(e,l.shape,d.shape),p.runWebGLProgram(f,[l,d],h)}}function eh(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===t)return"return x;";if("relu"===t)return e?Dp:Cp;if("elu"===t)return e?Rp:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?Fp:Ap;if("prelu"===t)return e?Jp:Qp;if("leakyrelu"===t)return e?Xp:Kp;throw new Error("Activation ".concat(t," has not been implemented for the WebGL backend."))}class nh{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],l=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";s&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(s,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(s,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(s,"\n        }"),b="result = activation(result);");const g=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";t[0]<e[0]?y="int(min(float(rc.x), ".concat(t[0]-1,".))"):e[0]<t[0]&&(v="int(min(float(rc.x), ".concat(e[0]-1,".))")),this.userCode="\n      ".concat(m,"\n\n      const float sharedDimension = ").concat(l,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ").concat(l,"; i++) {\n          int batchA = ").concat(y,";\n          int batchB = ").concat(v,";\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(p,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(h[0]," * ").concat(f[0],");\n          result += (").concat(h[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(g,"\n\n        ").concat(b,"\n\n        setOutput(result);\n      }\n    ")}}const rh="return areal * breal - aimag * bimag;",ah="return areal * bimag + aimag * breal;";class oh{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a.ld.assertAndGetBroadcastShape(e,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const sh="return a * b;";function ih(t){const{inputs:e,backend:n}=t,{a:r,b:o}=e,s=a.ld.upcastType(r.dtype,o.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(o.dataId),a=new oh(rh,r.shape,o.shape),s=new oh(ah,r.shape,o.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:o.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:o.shape}],c=n.runWebGLProgram(a,i,"float32"),u=n.runWebGLProgram(s,i,"float32"),l=Hp({inputs:{real:c,imag:u},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),l}if(n.shouldExecuteOnCPU([r,o])){const t=n.texData.get(r.dataId),e=n.texData.get(o.dataId),[a,i]=sp(r.shape,o.shape,t.values,e.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=a,c}let i;return i=Object(a.Kd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wp(sh,r.shape,o.shape):new Vp(sh,r.shape,o.shape),n.runWebGLProgram(i,[r,o],s)}const ch={kernelName:a.Ub,backendName:"webgl",kernelFunc:ih};function uh(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{shape:s}=r,i=n,c=a.kf.sizeFromShape(o.shape),u=a.kf.inferFromImplicitShape(s,c),l=a.kf.sizeFromShape(u);a.kf.assert(c===l,()=>"The new shape (".concat(u,") has ").concat(l," elements and the old ")+"shape (".concat(o.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements.");const d=i.texData.get(o.dataId);return!d.isPacked||Zl(o.shape,u)||null!==d.texture&&Zl(d.shape,u)?(i.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype}):function(t,e,n){const r=[Xl(t.shape),...Yl(t.shape)],a={dtype:t.dtype,shape:r,dataId:t.dataId},o=[Xl(e),...Yl(e)],s=new wp(o,r),i=n.runWebGLProgram(s,[a],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}(o,u,i)}const lh={kernelName:a.oc,backendName:"webgl",kernelFunc:uh};class dh{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:o,outSize:s}=t;this.outputShape=[r,s];const i=4*Math.floor(n/4),c=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u="sumValue += dot(values * ".concat(a.kf.isInt(t)?t.toPrecision(2):t,", ones);")}let l="";o%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(o,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(u,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class ph{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=t;this.outputShape=[r,o];let s="0.0",i="";"prod"===e?s="1.0":"min"===e?(s="1.0 / 1e-20",i="min"):"max"===e&&(s="-1.0 / 1e-20",i="max");let c="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===e?c="sumValue":"prod"===e?c="prodValue":"all"===e?c="allValue":"any"===e&&(c="anyValue");const u=4*Math.floor(n/4),l=n%4;let d="\n      if (".concat("sum"===e,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===e,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n      }\n    "),p="vec4";"all"===e?(s="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(s="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(s,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(h,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(s,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(u,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(u,";\n        if (").concat(1===l,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===l,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===l,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function hh(t,e,n,r){const o=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=a.ld.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let s=t;for(let a=0;a<o.length;a++){const{inSize:i,windowSize:c,outSize:u}=o[a];let l,d;l="mean"===n?0===a?new dh({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:u},i):new dh({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:u}):new ph({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:u},n),d=s,s=r.runWebGLProgram(l,[s],e),d.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class fh{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.rank=n.length;const r=Bd(this.rank),a=function(t){const e=t.length;if(e>6)throw Error("Transpose for rank ".concat(e," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let a=0;a<t.length;a++)r[t[a]]=n[a];return r.join()}(e);this.userCode="\n    void main() {\n      ".concat(r," resRC = getOutputCoords();\n      setOutput(getA(").concat(a,"));\n    }\n    ")}}class mh{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let u=0;u<n.length;u++)n[u]=t[e[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const r=Bd(this.rank),a=vp("rc",this.rank),o=new Array(this.rank);for(let u=0;u<e.length;u++)o[e[u]]=a[u];const s="vec2(".concat(o.slice(-2).join(),")"),i="++".concat(a[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(o.join(),"), ").concat(s,")");this.userCode="\n    void main() {\n      ".concat(r," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(a[this.rank-1],";\n      if(++").concat(a[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function bh(t,e,n){const r=Object(a.Kd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mh(t.shape,e):new fh(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function gh(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;return function(t,e,n,r){const o=e,s=t.shape.length,i=a.kf.parseAxisParam(o,t.shape);let c=i;const u=a.ld.getAxesPermutation(c,s),l=null!=u;let d=t;l&&(d=bh(t,u,r),c=a.ld.getInnerMostAxes(c.length,s)),a.ld.assertAxesAreInnerMostDims("sum",c,s);const[p,h]=a.ld.computeOutAndReduceShapes(d.shape,c);let f=p;n&&(f=a.ld.expandShapeToKeepDim(p,i));const m=a.kf.sizeFromShape(h),b=uh({inputs:{x:d},attrs:{shape:[a.kf.sizeFromShape(t.shape)/m,m]},backend:r}),g=hh(b,Object(a.Xe)(t.dtype),"sum",r),y=uh({inputs:{x:g},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(d),y}(o,s,i,n)}const yh={kernelName:a.Qc,backendName:"webgl",kernelFunc:gh};function vh(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{perm:o}=r,s=n,i=a.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=a.shape[o[l]];let u;if(s.shouldExecuteOnCPU([a])){const t=s.texData.get(a.dataId).values,e=gp(t,a.shape,a.dtype,o,c);u=s.makeTensorInfo(c,a.dtype);s.texData.get(u.dataId).values=e}else u=bh(a,o,s);return u}const Oh={kernelName:a.Xc,backendName:"webgl",kernelFunc:vh};function xh(t){let{a:e,b:n,transposeA:r,transposeB:o,backend:s,bias:i=null,preluActivationWeights:c=null,leakyreluAlpha:u=0,activation:l=null}=t;const d=e.shape.length,p=n.shape.length,h=r?e.shape[d-2]:e.shape[d-1],f=o?n.shape[p-1]:n.shape[p-2],m=r?e.shape[d-1]:e.shape[d-2],b=o?n.shape[p-2]:n.shape[p-1],g=e.shape.slice(0,-2),y=n.shape.slice(0,-2),v=a.kf.sizeFromShape(g),O=a.kf.sizeFromShape(y),x=v===O||1===v||1===O;a.kf.assert(d>=2&&p>=2&&x,()=>"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+"batch dimensions of (".concat(g,") and (").concat(y,")."));const w=(v>O?e.shape.slice(0,-2):n.shape.slice(0,-2)).concat([m,b]);a.kf.assert(h===f,()=>"Error in matMul: inner shapes (".concat(h,") and (")+"".concat(f,") of Tensors with shapes ").concat(e.shape," and ")+"".concat(n.shape," and transposeA=").concat(r)+" and transposeB=".concat(o," must match."));const k=r?[v,h,m]:[v,m,h],j=o?[O,b,f]:[O,f,b],N=uh({inputs:{x:e},backend:s,attrs:{shape:k}}),S=uh({inputs:{x:n},backend:s,attrs:{shape:j}}),I=[N,S],T=Math.max(v,O),E=r?N.shape[1]:N.shape[2],C=null!=i,A=null!=c,_="leakyrelu"===l,R=null!=l?eh(l,!0):null;let D;if((1===m||1===b)&&E>1e3&&!1===(C||A||_||null!=R)){let t=N,e=S;r&&(t=vh({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),I.push(t)),o&&(e=vh({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),I.push(e));const n=1===b;let a=t;1!==b&&(a=uh({inputs:{x:t},backend:s,attrs:{shape:[T,E,1]}}),I.push(a));const i=1===b?2:1;let c=e;n&&(c=uh({inputs:{x:e},backend:s,attrs:{shape:[T,1,E]}}),I.push(c));const u=ih({inputs:{a:a,b:c},backend:s});D=gh({inputs:{x:u},backend:s,attrs:{axis:i,keepDims:!0}}),I.push(u)}else{const t=Object(a.jf)(e.dtype,n.dtype),l=new nh(k,j,[T,m,b],r,o,C,R,A,_),d=[N,S];if(null!=i&&d.push(i),A&&d.push(c),_){const t=s.makeTensorInfo([],"float32",a.kf.createScalarValue(u,"float32"));d.push(t),I.push(t)}D=s.runWebGLProgram(l,d,t)}const F=uh({inputs:{x:D},backend:s,attrs:{shape:w}});I.push(D);for(const a of I)s.disposeIntermediateTensorInfo(a);return F}const wh={kernelName:a.cd,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:o,bias:s,preluActivationWeights:i}=e,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r;return xh({a:a,b:o,transposeA:c,transposeB:u,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}};const kh={kernelName:a.a,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=dp(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let o;return o=Object(a.Kd)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Mp(r.shape,"return abs(x);"):new Ip(r.shape,"return abs(x);"),n.runWebGLProgram(o,[r],r.dtype)}},jh=$p({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Nh={kernelName:a.b,backendName:"webgl",kernelFunc:jh},Sh=$p({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Ih={kernelName:a.c,backendName:"webgl",kernelFunc:Sh},Th="return a + b;",Eh=th({opSnippet:Th,packedOpSnippet:Th,supportsComplex:!0,cpuKernelImpl:Gd}),Ch={kernelName:a.d,backendName:"webgl",kernelFunc:Eh};class Ah{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T".concat(e));const n=[];this.variableNames.forEach(t=>{n.push("float v".concat(t," = get").concat(t,"AtOutCoords();"))});const r=this.variableNames.map(t=>"v".concat(t)).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(r,";\n        setOutput(result);\n      }\n    ")}}class _h{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T".concat(e));const n=[];this.variableNames.forEach(t=>{n.push("vec4 v".concat(t," = get").concat(t,"AtOutCoords();"))});const r=this.variableNames.map(t=>"v".concat(t)).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(r,";\n        setOutput(result);\n      }\n    ")}}const Rh={kernelName:a.e,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,o=n;if(1===o.length)return Up({inputs:{x:o[0]},backend:r});if(o.length>Object(a.Kd)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(o.length/2),n=t({inputs:o.slice(0,e),backend:r}),a=t({inputs:o.slice(e),backend:r});return t({inputs:[n,a],backend:r})}const s=o.map(t=>t.dtype).reduce((t,e)=>Object(a.jf)(t,e)),i=o.map(t=>t.shape),c=Object(a.Kd)().getBool("WEBGL_PACK")?new _h(o[0].shape,i):new Ah(o[0].shape,i);return r.runWebGLProgram(c,o,s)}};const Dh={kernelName:a.f,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r,c=o.shape.length,u=a.kf.parseAxisParam(s,o.shape);let l=u;const d=a.ld.getAxesPermutation(l,c);let p=o;null!=d&&(p=vh({inputs:{x:o},backend:n,attrs:{perm:d}}),l=a.ld.getInnerMostAxes(l.length,c)),a.ld.assertAxesAreInnerMostDims("all",l,c);const[h,f]=a.ld.computeOutAndReduceShapes(p.shape,l),m=uh({inputs:{x:p},backend:n,attrs:{shape:[-1,a.kf.sizeFromShape(f)]}}),b=hh(m,m.dtype,"all",n);let g;if(i){g=uh({inputs:{x:b},backend:n,attrs:{shape:a.ld.expandShapeToKeepDim(h,u)}})}else g=uh({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}};const Fh={kernelName:a.g,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r,c=o.shape.length,u=a.kf.parseAxisParam(s,o.shape);let l=u;const d=a.ld.getAxesPermutation(l,c);let p=o;null!=d&&(p=vh({inputs:{x:o},backend:n,attrs:{perm:d}}),l=a.ld.getInnerMostAxes(l.length,c)),a.ld.assertAxesAreInnerMostDims("any",l,c);const[h,f]=a.ld.computeOutAndReduceShapes(p.shape,l),m=uh({inputs:{x:p},backend:n,attrs:{shape:[-1,a.kf.sizeFromShape(f)]}}),b=hh(m,m.dtype,"any",n);let g;if(i){g=uh({inputs:{x:b},backend:n,attrs:{shape:a.ld.expandShapeToKeepDim(h,u)}})}else g=uh({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}};class Mh{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,o];const s="max"===e?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(r,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(r,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(s," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Lh{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a.kf.assert(t.length>2,()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2."));const o=t[t.length-1],s=Math.ceil(o/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,u=Bd(c),l=Op("coords",c);let d,p;if(1===s){p=c+1;const t=Bd(p);d="\n        ".concat(t," sourceLocR = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[c-1],";\n        ").concat(t," sourceLocG = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[c-2],";\n        ").concat(t," sourceLocA = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[c-1],";\n        ").concat(t," sourceLocB = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[c-2],";")}else p=c,d="\n        ".concat(u," sourceLocR = coords;\n        ++").concat(l[c-1],";\n        ").concat(u," sourceLocG = coords;\n        ++").concat(l[c-2],";\n        ").concat(u," sourceLocA = coords;\n        --").concat(l[c-1],";\n        ").concat(u," sourceLocB = coords;\n        --").concat(l[c-2],";");const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map(t=>"int "+t),b=Op("sourceLocR",p-1).concat("inIdx.r"),g=Op("sourceLocG",p-1).concat("inIdx.g"),y=Op("sourceLocB",p-1).concat("inIdx.b"),v=Op("sourceLocA",p-1).concat("inIdx.a"),O="max"===n?"greaterThan":"lessThan",x=r?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(v.join(),")));"),w="vec4(\n            getAChannel(".concat(b.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(v.join(),") : 0.)"),k=r?"":"\n      float getBestIndicesAChannel(".concat(m.join(),") {\n        return getChannel(getBestIndicesA(").concat(h.join(),"),\n                                          vec2(").concat(h.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(m.join(),") {\n        return getChannel(getA(").concat(h.join(),"),\n                               vec2(").concat(h.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(u," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[c-1]," < ").concat(i[c-1]-1,";\n        bool hasNextRow = ").concat(l[c-2]," < ").concat(i[c-2]-1,";\n        ").concat(d,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(e,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(e,"; i++) {\n          inIdx = srcIdx;\n          ").concat(x,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(O,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function zh(t,e,n,r){const o=[n];if(a.ld.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),o,e.shape.length),!Object(a.Kd)().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[s,i]=a.ld.computeOutAndReduceShapes(e.shape,o),c=a.kf.sizeFromShape(i),u=uh({inputs:{x:e},backend:t,attrs:{shape:[-1,c]}});n.push(u);const l=function t(e,n,r){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=n.shape[0],i=n.shape[1];null!=o&&(s=o.shape[0],i=o.shape[1]);const c=a.ld.computeOptimalWindowSize(i),u={windowSize:c,inSize:i,batchSize:s,outSize:Math.ceil(i/c)},l=new Mh(u,r,null==o),d=[n];null!=o&&d.push(o);const p=e.runWebGLProgram(l,d,"int32");if(1===p.shape[1])return p;const h=t(e,n,r,p);return e.disposeIntermediateTensorInfo(p),h}(t,u,r);n.push(l);const d=uh({inputs:{x:l},backend:t,attrs:{shape:s}});return n.forEach(e=>t.disposeIntermediateTensorInfo(e)),d}return function t(e,n,r){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const s=null!=o?o.shape:n.shape,i=s[s.length-1],c=a.ld.computeOptimalWindowSize(i),u=new Lh(s,c,r,null==o),l=null==o?[n]:[n,o],d=e.runWebGLProgram(u,l,"int32");if(d.shape.length===n.shape.length){const a=t(e,n,r,d);return e.disposeIntermediateTensorInfo(d),a}return d}(t,e,r)}const Ph={kernelName:a.h,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s}=r;let i=a.kf.parseAxisParam(s,o.shape);const c=a.ld.getAxesPermutation(i,o.shape.length);let u=o;const l=[];null!=c&&(u=vh({inputs:{x:o},backend:n,attrs:{perm:c}}),l.push(u),i=a.ld.getInnerMostAxes(i.length,u.shape.length)),a.ld.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const d=zh(n,u,i[0],"max");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}};const Bh={kernelName:a.i,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s}=r;let i=a.kf.parseAxisParam(s,o.shape);const c=a.ld.getAxesPermutation(i,o.shape.length);let u=o;const l=[];null!=c&&(u=vh({inputs:{x:o},backend:n,attrs:{perm:c}}),l.push(u),i=a.ld.getInnerMostAxes(i.length,u.shape.length)),a.ld.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const d=zh(n,u,i[0],"min");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}},Vh=$p({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Wh={kernelName:a.j,backendName:"webgl",kernelFunc:Vh},Uh=$p({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Gh={kernelName:a.k,backendName:"webgl",kernelFunc:Uh},Hh=$p({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),qh={kernelName:a.l,backendName:"webgl",kernelFunc:Hh},Kh=th({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Xh={kernelName:a.m,backendName:"webgl",kernelFunc:Kh},Yh=$p({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Qh={kernelName:a.n,backendName:"webgl",kernelFunc:Yh};class Jh{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,s=t.strideHeight,i=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,h=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m="((batch  * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + d"),b="(xR * ".concat(t.inWidth," + xC) * ").concat(t.inChannels," + d");let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(p,", ").concat(h,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(l,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(u,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(e," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(r?a?m:b:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let y="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(y="avgValue / count");const v=4*Math.floor(o/4),O=o%4,x="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(p,", ").concat(h,");\n      const float initializationValue = ").concat(g,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(g,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(l,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              getValue(batch, xR, xC + 2 * ").concat(u,", d),\n              getValue(batch, xR, xC + 3 * ").concat(u,", d)\n            );\n\n            ").concat(x,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===O,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(x,"\n          } else if (").concat(2===O,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(x,"\n          } else if (").concat(3===O,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              getValue(batch, xR, xC + 2 * ").concat(u,", d),\n              initializationValue\n            );\n\n            ").concat(x,"\n          }\n        }\n        setOutput(").concat(y,");\n      }\n    ")}}class Zh{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,s=t.strideDepth,i=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,h=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,g=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let v="0.0";if(y||(v="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(b,", ").concat(g,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(p,";\n              wD += ").concat(u,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(h,";\n                wR += ").concat(l,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(e," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(r?a?"(((batch * ".concat(t.inDepth," + xD) * ").concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"((xD * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"wD * ".concat(h," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let O="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(O="avgValue / count");const x=4*Math.floor(o/4),w=o%4,k="\n      if (".concat(y,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(b,", ").concat(g,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(p,";\n            wD += ").concat(u,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,";\n            wR += ").concat(l,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(x,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(k,"\n            }\n\n            int xC = xCCorner + ").concat(x,";\n            if (").concat(1===w,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(k,"\n            } else if (").concat(2===w,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(k,"\n            } else if (").concat(3===w,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(k,"\n            }\n          }\n          setOutput(").concat(O,");\n        }\n      }\n    ")}}const $h={kernelName:a.o,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e;od(o,"avgPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=r;a.kf.assert(a.ld.eitherStridesOrDilationsAreOne(i,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.ld.computePool2DInfo(o.shape,s,i,1,c,u);if(1===l.filterWidth&&1===l.filterHeight&&a.kf.arraysEqual(l.inShape,l.outShape))return Up({inputs:{x:o},backend:n});const d=new Jh(l,"avg",!1);return n.runWebGLProgram(d,[o],"float32")}};const tf={kernelName:a.p,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{filterSize:s,strides:i,pad:c,dimRoundingMode:u,dataFormat:l}=r,d=a.ld.computePool3DInfo(o.shape,s,i,[1,1,1],c,u,l),p=new Zh(d,"avg",!1);return n.runWebGLProgram(p,[o],"float32")}};class ef{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,o=t.dilationHeight,s=t.dilationWidth,i=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=i-1-t.padInfo.top,l=c-1-t.padInfo.left,d=1/(e*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(u,", ").concat(l,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(o,") {\n          float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(s,") {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class nf{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,o=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=l-1-t.padInfo.front,f=d-1-t.padInfo.top,m=p-1-t.padInfo.left,b=1/(e*n*r);this.userCode="\n      const ivec3 pads = ivec3(".concat(h,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(b,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(l,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(a,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(p,";\n                wC += ").concat(u,") {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const rf={kernelName:a.q,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,i=s,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=r,p=a.ld.computePool3DInfo(i.shape,c,u,[1,1,1],l,d),h=new nf(p);return n.runWebGLProgram(h,[o],i.dtype)}};const af={kernelName:a.r,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,i=s;od([o,s],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=r,d=a.ld.computePool2DInfo(i.shape,c,u,1,l),p=new ef(d);return n.runWebGLProgram(p,[o],i.dtype)}};const of={kernelName:a.s,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:o}=e,{transposeA:s,transposeB:i}=r;return xh({a:a,b:o,transposeA:s,transposeB:i,backend:n})}};class sf{constructor(t,e,n,r,o,s){this.outputShape=[],this.variableNames=["x","mean","variance"],a.ld.assertAndGetBroadcastShape(t,e),a.ld.assertAndGetBroadcastShape(t,n);let i="0.0";null!=r&&(a.ld.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=o&&(a.ld.assertAndGetBroadcastShape(t,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(i,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class cf{constructor(t,e,n,r,o,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a.ld.assertAndGetBroadcastShape(t,e),a.ld.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";null!=r&&(a.ld.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=o&&(a.ld.assertAndGetBroadcastShape(t,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        vec4 offset = ".concat(i,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const uf={kernelName:a.ib,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:r}=t;const{x:o,mean:s,variance:i,offset:c,scale:u}=e;a.kf.assert(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),a.kf.assert(null==c||s.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),a.kf.assert(null==u||s.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=r;null==l&&(l=.001);const d=[o,s,i];let p=null;null!=c&&(p=c.shape,d.push(c));let h=null;null!=u&&(h=u.shape,d.push(u));const f=Object(a.Kd)().getBool("WEBGL_PACK_NORMALIZATION")?new cf(o.shape,s.shape,i.shape,p,h,l):new sf(o.shape,s.shape,i.shape,p,h,l);return n.runWebGLProgram(f,d,d[0].dtype)}};class lf{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Bd(this.rank),n="uniform int start[".concat(this.rank,"];"),r=function(t){if(1===t)return"sourceLoc";if(t<=6)return df.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error("Slicing for rank ".concat(t," is not yet supported"))}(this.rank);let a;const o=t.map((t,e)=>"sourceLoc.".concat(df[e]," = start[").concat(e,"] + coords.").concat(df[e],";"));a="\n        ".concat(e," sourceLoc;\n        ").concat(e," coords = getOutputCoords();\n        ").concat(o.join("\n"),"\n      "),this.userCode="\n      ".concat(n,"\n      void main() {\n        ").concat(a,"\n        setOutput(getSource(").concat(r,"));\n      }\n    ")}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error("The rank (".concat(this.rank,") of the program must match the ")+"length of start (".concat(t.length,")"));return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const df=["x","y","z","w","u","v"];class pf{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=Bd(this.rank),n=Op("coords",this.rank),r=Op("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":"vec2(".concat(r.slice(-2).join(),")"),o="getChannel(getSource(".concat(r.join(),"), ").concat(a,")"),s="\n      result.x = ".concat(o,";\n      if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n        ++").concat(r[this.rank-1],";\n        result.y = ").concat(o,";\n        --").concat(r[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(t[this.rank-2],") {\n        ++").concat(r[this.rank-2],";\n        result.z = ").concat(o,";\n        if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n          ++").concat(r[this.rank-1],";\n          result.w = ").concat(o,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(e,"(").concat(t.map((t,e)=>"start[".concat(e,"]")).join(),");"):t.map((t,e)=>"".concat(r[e]," = ").concat(n[e]," + start[").concat(e,"];")).join("\n");this.userCode="\n      uniform int start[".concat(this.rank,"];\n      void main() {\n        ").concat(e," coords = getOutputCoords();\n        ").concat(e," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(s,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error("The rank (".concat(this.rank,") of the program must match the ")+"length of start (".concat(t.length,")"));return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function hf(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{begin:s,size:i}=r,[c,u]=a.Oe.parseSliceParams(o,s,i);if(a.Oe.assertParamsValid(o,c,u),0===a.kf.sizeFromShape(u))return n.makeTensorInfo(u,o.dtype,[]);if(n.shouldExecuteOnCPU([o])||"string"===o.dtype){const t=n.texData.get(o.dataId),e=pp(t.values,c,u,o.shape,o.dtype);return n.makeTensorInfo(u,o.dtype,e)}const{isPacked:l}=n.texData.get(o.dataId),d=a.Oe.isSliceContinous(o.shape,c,u);if(l||!d){const t=Object(a.Kd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pf(u):new lf(u),e=t.getCustomSetupFunc(c);return n.runWebGLProgram(t,[o],o.dtype,e)}return n.uploadToGPU(o.dataId),function(t,e,n,r){const o=r.texData.get(t.dataId),s=r.makeTensorInfo(n,t.dtype),i=r.texData.get(s.dataId);Object.assign(i,o),i.complexParentRefCount=0,i.refCount=1,i.shape=n,i.dtype=t.dtype;let c=a.Oe.computeFlatOffset(e,a.kf.computeStrides(t.shape));o.slice&&(c+=o.slice.flatOffset),i.slice={flatOffset:c,origDataId:o.slice&&o.slice.origDataId||t.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(o,c,u,n)}const ff={kernelName:a.Ec,backendName:"webgl",kernelFunc:hf},mf={kernelName:a.t,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockShape:s,crops:i}=r;a.kf.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=s.reduce((t,e)=>t*e),u=a.ld.getReshaped(o.shape,s,c),l=a.ld.getPermuted(u.length,s.length),d=a.ld.getReshapedPermuted(o.shape,s,c),p=a.ld.getSliceBeginCoords(i,s.length),h=a.ld.getSliceSize(d,i,s.length),f=[],m=uh({inputs:{x:o},backend:n,attrs:{shape:u}}),b=vh({inputs:{x:m},backend:n,attrs:{perm:l}}),g=uh({inputs:{x:b},backend:n,attrs:{shape:d}}),y=hf({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(b),f.push(g),f.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}};const bf={kernelName:a.u,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:o}=e,{size:s}=r,i=n.readSync(a.dataId),c=n.readSync(o.dataId),u=Hd(i,c,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,u)}},gf=th({opSnippet:"return float(a != b);",dtype:"bool"}),yf={kernelName:a.Zb,backendName:"webgl",kernelFunc:gf};function vf(t){const{inputs:e,backend:n}=t,{input:r}=e;return Up({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Of={kernelName:a.jc,backendName:"webgl",kernelFunc:vf};const xf={kernelName:a.v,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:o}=e,{x:s}=n,{dtype:i}=o;if("complex64"===i){if("complex64"===s.dtype)return Up({inputs:{x:s},backend:r});const e=a.pf(s.shape),n=t({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),o=Hp({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),o}if("complex64"===s.dtype){const e=vf({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),n}if(!a.kf.hasEncodingLoss(s.dtype,i)){const t=Up({inputs:{x:s},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new Ip(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const t=r.makeTensorInfo([],"bool",a.kf.getTypedArrayFromDType("bool",1)),e=gf({inputs:{a:s,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(i))}},wf="return ceil(x);",kf=$p({opSnippet:wf,packedOpSnippet:wf,cpuKernelImpl:Kd}),jf={kernelName:a.w,backendName:"webgl",kernelFunc:kf};class Nf{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Sf{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const If={kernelName:a.x,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{clipValueMin:s,clipValueMax:i}=r;let c;c=Object(a.Kd)().getBool("WEBGL_PACK_CLIP")?new Sf(o.shape):new Nf(o.shape);const u=c.getCustomSetupFunc(s,i);return n.runWebGLProgram(c,[o],o.dtype,u)}};class Tf{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Ef(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const Cf={kernelName:a.z,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,a=n.texData.get(r.dataId),o=new Tf(r.shape),s=[Ef(r,a.complexTensorInfos.real),Ef(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(o,s,s[0].dtype)}};class Af{constructor(t){this.outputShape=[],this.outputShape=a.ld.computeOutShape(t,1),this.variableNames=t.map((t,e)=>"T".concat(e));const e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];const n=["if (yC < ".concat(e[0],") setOutput(getT0(yR, yC));")];for(let a=1;a<e.length;a++){const t=e[a-1];n.push("else if (yC < ".concat(e[a],") ")+"setOutput(getT".concat(a,"(yR, yC-").concat(t,"));"))}const r=e.length,o=e[e.length-1];n.push("else setOutput(getT".concat(r,"(yR, yC-").concat(o,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class _f{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a.ld.computeOutShape(t,e);const n=this.outputShape,r=n.length,o=Bd(r),s=Op("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T".concat(e));const c=new Array(t.length-1);c[0]=t[0][e];for(let a=1;a<c.length;a++)c[a]=c[a-1]+t[a][e];const u=i[e],l=i.slice(-2),d=i.join();let p="if (".concat(u," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(d,"), vec2(").concat(l.join(),"));\n        }");for(let a=1;a<c.length;a++){const t=c[a-1];p+="\n        if (".concat(u," < ").concat(c[a],"  && ").concat(u," >= ").concat(c[a-1],") {\n          return getChannel(\n            getT").concat(a,"(").concat(Rf(i,u,t),"),\n            vec2(").concat(Rf(l,u,t),"));\n        }")}const h=c.length,f=c[c.length-1];p+="\n        return getChannel(\n          getT".concat(h,"(").concat(Rf(i,u,f),"),\n          vec2(").concat(Rf(l,u,f),"));"),this.userCode="\n      float getValue(".concat(i.map(t=>"int "+t),") {\n        ").concat(p,"\n      }\n\n      void main() {\n        ").concat(o," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[r-1]," = ").concat(s[r-1]," + 1;\n        if (").concat(s[r-1]," < ").concat(n[r-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[r-2]," = ").concat(s[r-2]," + 1;\n        if (").concat(s[r-2]," < ").concat(n[r-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[r-1]," = ").concat(s[r-1]," - 1;\n        if (").concat(s[r-2]," < ").concat(n[r-2]," &&\n            ").concat(s[r-1]," < ").concat(n[r-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function Rf(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?"".concat(t," - ").concat(n):t).join()}function Df(t){const{inputs:e,backend:n}=t,{input:r}=e;return Up({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Ff={kernelName:a.rb,backendName:"webgl",kernelFunc:Df};function Mf(t,e,n){const r=a.ld.computeOutShape(t.map(t=>t.shape),e);return{tensors2D:t.map(t=>uh({inputs:{x:t},attrs:{shape:[-1,a.kf.sizeFromShape(t.shape.slice(e))]},backend:n})),outShape:r}}function Lf(t){const{inputs:e,backend:n,attrs:r}=t,{axis:o}=r,s=a.kf.parseAxisParam(o,e[0].shape)[0],i=a.ld.computeOutShape(e.map(t=>t.shape),s);if(0===a.kf.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(t=>a.kf.sizeFromShape(t.shape)>0);if(1===c.length)return Up({inputs:{x:c[0]},backend:n});const u=c.map(t=>t.shape);return a.ld.assertParamsConsistent(u,s),function t(e,n,r){const o=e[0].dtype;if("complex64"===o){const a=e.map(t=>vf({inputs:{input:t},backend:r})),o=e.map(t=>Df({inputs:{input:t},backend:r})),s=t(a,n,r),i=t(o,n,r),c=Hp({inputs:{real:s,imag:i},backend:r});return a.forEach(t=>r.disposeIntermediateTensorInfo(t)),o.forEach(t=>r.disposeIntermediateTensorInfo(t)),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),c}if("string"===o){const{tensors2D:t,outShape:s}=Mf(e,n,r),i=t.map(t=>({vals:r.readSync(t.dataId),shape:t.shape})),c=1===t[0].shape[0],u=Xd(i,s,o,c),l=a.ld.computeOutShape(e.map(t=>t.shape),n),d=r.makeTensorInfo(l,o,u);return t.forEach(t=>r.disposeIntermediateTensorInfo(t)),d}if(e.length>Object(a.Kd)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),o=t(e.slice(0,a),n,r),s=t(e.slice(a),n,r),i=t([o,s],n,r);return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),i}if(Object(a.Kd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const t=new _f(e.map(t=>t.shape),n);return r.runWebGLProgram(t,e,o)}const{tensors2D:s,outShape:i}=Mf(e,n,r),c=new Af(s.map(t=>t.shape)),u=r.runWebGLProgram(c,s,o);s.forEach(t=>r.disposeIntermediateTensorInfo(t));const l=uh({inputs:{x:u},attrs:{shape:i},backend:r});return r.disposeIntermediateTensorInfo(u),l}(c,s,n)}const zf={kernelName:a.A,backendName:"webgl",kernelFunc:Lf};class Pf{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,s=t.padInfo.left,i=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,h=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let v="",O="";n&&(v=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):a?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),O="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(o,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(y,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(b,"], coords[").concat(g,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(u,";\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(p,"; wC++) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            if (xC < 0 || xC >= ").concat(t.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(h,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(h,") *\n                    getW(wR, wC, ").concat(h,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(h,", xR, xC) *\n                    getW(wR, wC, ").concat(h,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(h,", d2),\n                getW(wR, wC, ").concat(h," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(h,"),\n                  getX(batch, xR, xC, ").concat(h," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(h,", xR, xC),\n                  getX(batch, ").concat(h," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(h,", d2),\n                getW(wR, wC, ").concat(h," + 1, d2),\n                getW(wR, wC, ").concat(h," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(h,"),\n                  getX(batch, xR, xC, ").concat(h," + 1),\n                  getX(batch, xR, xC, ").concat(h," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(h,", xR, xC),\n                  getX(batch, ").concat(h," + 1, xR, xC),\n                  getX(batch, ").concat(h," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(x,"\n        ").concat(O,"\n        setOutput(result);\n      }\n    ")}}class Bf{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,a=t.strideDepth,o=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,l=t.filterDepth,d=t.filterHeight,p=t.filterWidth,h=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(a,", ").concat(o,", ").concat(s,");\n      const ivec3 pads = ivec3(").concat(e,", ").concat(n,", ").concat(r,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(l,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(p,"; wC++) {\n              int xC = xCCorner + wC * ").concat(u,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(h,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(h,") *\n                  getW(wF, wR, wC, ").concat(h,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(h,"),\n                  getX(batch, xF, xR, xC, ").concat(h," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(h,", d2),\n                  getW(wF, wR, wC, ").concat(h," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(h,"),\n                  getX(batch, xF, xR, xC, ").concat(h," + 1),\n                  getX(batch, xF, xR, xC, ").concat(h," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(h,", d2),\n                  getW(wF, wR, wC, ").concat(h," + 1, d2),\n                  getW(wF, wR, wC, ").concat(h," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Vf{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:a,strideWidth:o,strideHeight:s,padInfo:i,outWidth:c,dilationWidth:u,dilationHeight:l,dataFormat:d}=n,{left:p,top:h}=i,f=a*r,m=id(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let v="";for(let O=0;O<=1;O++)for(let n=0;n<=1;n++)v+="\n          blockIndex = rc.y + ".concat(n,";\n          pos = rc.x + ").concat(O,";\n\n          if(blockIndex < ").concat(t[1]," && pos < ").concat(t[0],") {\n            offsetY = int(blockIndex / (").concat(c,")) * ").concat(s," - ").concat(h,";\n            d0 = offsetY + ").concat(l," * (pos / ").concat(f,");\n\n            if(d0 < ").concat(e[g]," && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ").concat(c,".) * ").concat(o,". - ").concat(p,".);\n              d1 = offsetX + ").concat(u," * (int(mod(float(pos), ").concat(f,".) / ").concat(a,".));\n\n              if(d1 < ").concat(e[y]," && d1 >= 0) {\n\n                ch = int(mod(float(pos), ").concat(a,".));\n\n                if (").concat(b,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*O+n,"] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*O+n,"] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(v,"\n\n        ").concat(m.output," = result;\n      }\n    ")}}function Wf(t){let{x:e,filter:n,convInfo:r,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:u=null}=t;const l=e.shape,d=o.texData.get(e.dataId),p=r.inChannels,h=l[0]*l[1]*l[2],f=r.outChannels,m="channelsLast"===r.dataFormat;let b;const g=[],y=(1===h||1===f)&&p>1e3,v=l[2]%2!==0&&!!d.isPacked;if(!y&&Object(a.Kd)().getBool("WEBGL_LAZILY_UNPACK")&&Object(a.Kd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&v){const t=m?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),p={dataId:e.dataId,shape:[1,t,r.inChannels],dtype:e.dtype},h=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,a.kf.assert(Zl(d.shape,p.shape),()=>"packed reshape ".concat(d.shape," to ").concat(p.shape," isn't free"));const f=uh({inputs:{x:n},backend:o,attrs:{shape:[1,r.inChannels,r.outChannels]}});g.push(f);const y=xh({a:p,b:f,backend:o,transposeA:!1,transposeB:!1,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:c}),v=o.texData.get(y.dataId);a.kf.assert(v.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=h,v.shape=r.outShape,b=Up({inputs:{x:y},backend:o}),b.shape=r.outShape,g.push(y)}else{const t=uh({inputs:{x:e},backend:o,attrs:{shape:[1,m?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],r.inChannels]}}),a=uh({inputs:{x:n},backend:o,attrs:{shape:[1,r.inChannels,r.outChannels]}}),d=xh({a:t,b:a,transposeA:!1,transposeB:!1,backend:o,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:c});b=uh({inputs:{x:d},backend:o,attrs:{shape:r.outShape}}),g.push(t),g.push(a),g.push(d)}for(const a of g)o.disposeIntermediateTensorInfo(a);return b}function Uf(t){let{x:e,filter:n,convInfo:r,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:u=null}=t;const{filterWidth:l,filterHeight:d,inChannels:p,outWidth:h,outHeight:f,dataFormat:m}=r,b="channelsLast"===m,g=l*d*p,y=f*h,v=[g,y],O=[],x=uh({inputs:{x:e},backend:o,attrs:{shape:e.shape.slice(1)}}),w=uh({inputs:{x:n},backend:o,attrs:{shape:[1,g,a.kf.sizeFromShape(n.shape)/g]}});O.push(x),O.push(w);const k=new Vf(v,x.shape,r),j=o.runWebGLProgram(k,[x],"float32"),N=uh({inputs:{x:j},backend:o,attrs:{shape:[1,v[0],v[1]]}});O.push(j),O.push(N);const S=null!=s,I=null!=i,T="leakyrelu"===u,E=u?eh(u,!0):null,C=new nh(N.shape,w.shape,[1,y,r.outChannels],!0,!1,S,E,I,T),A=[N,w];if(s&&A.push(s),I&&A.push(i),T){const t=o.makeTensorInfo([],"float32",a.kf.createScalarValue(c,"float32"));A.push(t),O.push(t)}const _=o.runWebGLProgram(C,A,"float32"),R=uh({inputs:{x:_},backend:o,attrs:{shape:b?[1,f,h,r.outChannels]:[1,r.outChannels,f,h]}});O.push(_);for(const a of O)o.disposeIntermediateTensorInfo(a);return R}const Gf={kernelName:a.B,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dataFormat:u,dilations:l,dimRoundingMode:d}=r,p=a.ld.convertConv2DDataFormat(u),h=a.ld.computeConv2DInfo(o.shape,s.shape,i,l,c,d,!1,p);let f;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Object(a.Kd)().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])f=Uf({x:o,filter:s,convInfo:h,backend:n});else{const t=new Pf(h);f=n.runWebGLProgram(t,[o,s],"float32")}else f=Wf({x:o,filter:s,convInfo:h,backend:n});const m=uh({inputs:{x:f},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class Hf{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,o="channelsLast"===t.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(r,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(a,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              if (").concat(o,") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class qf{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,o="channelsLast"===t.dataFormat,s=e-1-t.padInfo.top,i=n-1-t.padInfo.left,c=o?1:2,u=o?2:3,l=o?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(l,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(u,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n\n              if (").concat(o,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Kf{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.padInfo.front,o=t.padInfo.top,s=t.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(t.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(e," - ").concat(a,";\n\n            if (xF < 0 || xF >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(o,";\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(r," - ").concat(s,";\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Xf{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,o=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.front,c=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(u,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(e,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(a,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(t.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(e," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(r,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(r," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Yf={kernelName:a.C,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:d}=r,p=a.ld.convertConv2DDataFormat(u),h=a.ld.computeConv2DInfo(o.shape,d,i,1,c,l,!1,p),f=new Hf(h);return n.runWebGLProgram(f,[o,s],"float32")}};const Qf={kernelName:a.D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{inputShape:i,strides:c,pad:u,dataFormat:l,dimRoundingMode:d}=r,p=a.ld.convertConv2DDataFormat(l),h=a.ld.computeConv2DInfo(i,s.shape,c,1,u,d,!1,p),f=new qf(h);return n.runWebGLProgram(f,[o,s],"float32")}};const Jf={kernelName:a.E,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dilations:u}=r,l=a.ld.computeConv3DInfo(o.shape,s.shape,i,u,c),d=new Bf(l);return n.runWebGLProgram(d,[o,s],"float32")}};const Zf={kernelName:a.F,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,pad:c,filterShape:u}=r,l=a.ld.computeConv3DInfo(o.shape,u,i,1,c),d=new Kf(l);return n.runWebGLProgram(d,[o,s],"float32")}};const $f={kernelName:a.G,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{pad:i,strides:c,inputShape:u}=r,l=a.ld.computeConv3DInfo(u,s.shape,c,1,i),d=new Xf(l);return n.runWebGLProgram(d,[o,s],"float32")}},tm=$p({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),em={kernelName:a.H,backendName:"webgl",kernelFunc:tm},nm=$p({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),rm={kernelName:a.I,backendName:"webgl",kernelFunc:nm};class am{constructor(t,e,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,s,i,c]=t,[u]=e,[l,d]=n;this.outputShape=[u,l,d,c];const p="bilinear"===r?1:0,[h,f]=["".concat(s-1,".0"),"".concat(i-1,".0")],[m,b,g]=l>1?["".concat((s-1)/(l-1)),"(y2-y1) * height_ratio","y1*".concat(h," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(h)],[y,v,O]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(y,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(o,") {\n          return;\n        }\n\n        float height_scale = ").concat(b,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(g,";\n        if( in_y < 0.0 || in_y > ").concat(h," ) {\n          setOutput(float(").concat(a,"));\n          return;\n        }\n        float in_x = ").concat(O,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(a,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(p," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const om={kernelName:a.J,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:a,boxes:o,boxInd:s}=e,{cropSize:i,method:c,extrapolationValue:u}=r,l=new am(a.shape,o.shape,i,c,u);return n.runWebGLProgram(l,[a,o,s],"float32")}};class sm{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,a=e?"0.0":"getX(".concat(im(r,"coords"),")"),o=t[t.length-1];let s="",i="";e?(s=n?"end != ".concat(o-1):"end != 0",i=n?"end + 1":"end - 1"):(s=n?"end + pow2 < ".concat(o):"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode="\n      uniform float index;\n      void main() {\n        ".concat(Bd(r)," coords = getOutputCoords();\n        int end = ").concat(cm(r,"coords"),";\n        float val = ").concat(a,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(s,") {\n          int idx = ").concat(i,";\n          ").concat(cm(r,"coords")," = idx;\n          val += getX(").concat(im(r,"coords"),");\n        }\n        setOutput(val);\n      }\n    ")}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function im(t,e){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".x, ").concat(e,".y");if(3===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z");if(4===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z, ").concat(e,".w");throw Error("Cumulative sum for rank ".concat(t," is not yet supported"))}function cm(t,e){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".y");if(3===t)return"".concat(e,".z");if(4===t)return"".concat(e,".w");throw Error("Cumulative sum for rank ".concat(t," is not yet supported"))}const um={kernelName:a.K,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,exclusive:i,reverse:c}=r,u=o.shape.length,l=a.ld.getAxesPermutation([s],u);let d=o;null!=l&&(d=vh({inputs:{x:o},backend:n,attrs:{perm:l}}));const p=a.ld.getInnerMostAxes(1,u)[0];if(p!==u-1)throw new Error("WebGL cumsum shader expects an inner-most axis=".concat(o.shape.length-1," ")+"but got axis=".concat(s));const h=d.shape[p];let f=Up({inputs:{x:d},backend:n});for(let a=0;a<=Math.ceil(Math.log2(h))-1;a++){const t=new sm(d.shape,!1,c),e=t.getCustomSetupFunc(a),r=f;f=n.runWebGLProgram(t,[f],f.dtype,e),n.disposeIntermediateTensorInfo(r)}if(i){const t=new sm(d.shape,i,c),e=f;f=n.runWebGLProgram(t,[f],f.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=l){const t=vh({inputs:{x:f},backend:n,attrs:{perm:a.ld.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),t}return f}};const lm={kernelName:a.M,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:o}=e,{size:s,binaryOutput:i}=r;if(1===a.shape.length){const t=n.readSync(a.dataId),e=n.readSync(o.dataId),r=Hd(t,e,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,r)}if(2===a.shape.length){const t=n.bufferSync(a),e=n.bufferSync(o),r=qd(t,e,s,i);return n.makeTensorInfo(r.shape,o.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(a.shape.length,"."))}};class dm{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(e,";\n      int offset_h = imod(h, ").concat(e,");\n      int in_w = w / ").concat(e,";\n      int offset_w = imod(w, ").concat(e,");\n      int offset_d = (offset_h * ").concat(e," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const pm={kernelName:a.N,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockSize:s,dataFormat:i}=r;a.kf.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(s));const c=o.shape[0],u="NHWC"===i?o.shape[1]:o.shape[2],l="NHWC"===i?o.shape[2]:o.shape[3],d="NHWC"===i?o.shape[3]:o.shape[1],p=u*s,h=l*s,f=d/(s*s),m=new dm("NHWC"===i?[c,p,h,f]:[c,f,p,h],s,i);return n.runWebGLProgram(m,[o],o.dtype)}};class hm{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.inHeight,s=t.inWidth,i=t.padInfo.top,c=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,d=t.dilationHeight,p=t.dilationWidth,h=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let b="",g="";n&&(b=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):a?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(b,"\n\n      const ivec2 strides = ivec2(").concat(u,", ").concat(l,");\n      const ivec2 pads = ivec2(").concat(i,", ").concat(c,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(m,";\n        int q = d2 - d1 * ").concat(m,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(d,";\n\n          if (xR < 0 || xR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(f,"; wC++) {\n            int xC = xCCorner + wC * ").concat(p,";\n\n            if (xC < 0 || xC >= ").concat(s,") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(y,"\n        ").concat(g,"\n        setOutput(result);\n      }\n    ")}}class fm{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,c=t.padInfo.top,u=t.padInfo.left,l=t.strideHeight,d=t.strideWidth,p=t.dilationHeight,h=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,b=m;let g="int xR; int xC; int xCOffset;";for(let a=0;a<f;a++)for(let t=0;t<m;t++)g+="\n          vec4 xTexelR".concat(a,"C").concat(2*t," = vec4(0.);\n          vec4 wR").concat(a,"C").concat(t," = vec4(0.);\n          vec4 xR").concat(a,"C").concat(t," = vec4(0.);");for(let x=0;x<f;x++)for(let t=0;t<b;t++){const e=2*t;if(g+="\n          xR = xRCorner + ".concat(x*p,";\n          xC = xCCorner + ").concat(e*h,";\n        "),1===d){if(e<m&&(g+=u%2===1?"\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ".concat(s," && xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelR").concat(x,"C").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ").concat(i,") {\n                    xTexelR").concat(x,"C").concat(e,".zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR").concat(x,"C").concat(e," = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ").concat(s," && xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ").concat(i,") {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR").concat(x,"C").concat(e," = vec4(previous.zw, xTexelR").concat(x,"C").concat(e,".xy);\n                } else {\n                  xR").concat(x,"C").concat(e," = vec4(0, 0, xTexelR").concat(x,"C").concat(e,".xy);\n                }\n              "):"\n                if(xR >= 0 && xR < ".concat(s," && xC >= 0 && xC < ").concat(i,") {\n                  xTexelR").concat(x,"C").concat(e," = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR").concat(x,"C").concat(e," = vec4(0.);\n                }\n\n                xR").concat(x,"C").concat(e," = xTexelR").concat(x,"C").concat(e,";\n              "),e+1<m)){const t=u%2===0?a.kf.nearestLargerEven(h):h;h%2===0&&u%2===1||h%2!==0&&u%2!==1?(g+="\n                  xCOffset = xC + ".concat(u%2," + ").concat(t,";\n\n                  if(xR >= 0 && xR < ").concat(s," &&\n                    xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    xTexelR").concat(x,"C").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                  }\n                "),h>1&&(g+="\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ".concat(s," &&\n                      xCOffset >= 0 && xCOffset < ").concat(i,") {\n                      xTexelR").concat(x,"C").concat(e," = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR").concat(x,"C").concat(e," = vec4(0.);\n                    }\n                  ")),g+="\n                  xR".concat(x,"C").concat(e+1," = vec4(\n                    xTexelR").concat(x,"C").concat(e,".zw, xTexelR").concat(x,"C").concat(e+2,".xy);\n                ")):g+="\n                  xCOffset = xC + ".concat(t,";\n\n                  if(xR >= 0 && xR < ").concat(s," &&\n                    xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    xTexelR").concat(x,"C").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR").concat(x,"C").concat(e+1," = xTexelR").concat(x,"C").concat(e+2,";\n                ")}}else e<m&&(g+="\n              if(xR >= 0 && xR < ".concat(s,") {\n            "),u%2===1?(g+="\n                xCOffset = xC + 1 - ".concat(d,";\n                if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelR").concat(x,"C").concat(e," = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR").concat(x,"C").concat(e," = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ").concat(i,") {\n                  xTexelR").concat(x,"C").concat(e+2," = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR").concat(x,"C").concat(e+2," = vec4(0.);\n                }\n\n                xR").concat(x,"C").concat(e," = vec4(\n                  xTexelR").concat(x,"C").concat(e,".zw, xTexelR").concat(x,"C").concat(e+2,".zw);\n              "),e+1<m&&(g+="\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ".concat(d,";\n                  if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR").concat(x,"C").concat(e+1," = vec4(xTexelR").concat(x,"C").concat(e+2,".xy, final.xy);\n                "))):(g+="\n                if(xC >= 0 && xC < ".concat(i,") {\n                  xTexelR").concat(x,"C").concat(e," = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR").concat(x,"C").concat(e," = vec4(0.);\n                }\n\n                xCOffset = xC + ").concat(d,";\n                if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelR").concat(x,"C").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR").concat(x,"C").concat(e+2," = vec4(0.);\n                }\n\n                xR").concat(x,"C").concat(e," = vec4(\n                  xTexelR").concat(x,"C").concat(e,".xy, xTexelR").concat(x,"C").concat(e+2,".xy);\n              "),e+1<m&&(g+="\n                  xR".concat(x,"C").concat(e+1," = vec4(\n                    xTexelR").concat(x,"C").concat(e,".zw, xTexelR").concat(x,"C").concat(e+2,".zw);\n                "))),g+="}");e<m&&(g+="\n            vec4 wTexelR".concat(x,"C").concat(e," = getW(").concat(x,", ").concat(e,", d1, q);\n            wR").concat(x,"C").concat(e," = vec4(wTexelR").concat(x,"C").concat(e,".xz, wTexelR").concat(x,"C").concat(e,".xz);\n          "),e+1<m&&(g+="\n              vec4 wTexelR".concat(x,"C").concat(e+1," = getW(").concat(x,", ").concat(e+1,", d1, q);\n              wR").concat(x,"C").concat(e+1," =\n                vec4(wTexelR").concat(x,"C").concat(e+1,".xz, wTexelR").concat(x,"C").concat(e+1,".xz);")))}for(let a=0;a<f;a++)for(let t=0;t<m;t++)g+="dotProd += xR".concat(a,"C").concat(t," * wR").concat(a,"C").concat(t,";");let y="",v="";n&&(y=r?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):o?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),v="result = activation(result);");const O=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(y,"\n\n      const ivec2 strides = ivec2(").concat(l,", ").concat(d,");\n      const ivec2 pads = ivec2(").concat(c,", ").concat(u,");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ").concat(g,"\n\n        vec4 result = dotProd;\n        ").concat(O,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}const mm={kernelName:a.O,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dilations:u,dimRoundingMode:l}=r;let d=u;null==d&&(d=[1,1]),a.kf.assert(a.ld.eitherStridesOrDilationsAreOne(i,d),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(d,"'"));const p=a.ld.computeConv2DInfo(o.shape,s.shape,i,d,c,l,!0);let h;return h=Object(a.Kd)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?new fm(p):new hm(p),n.runWebGLProgram(h,[o,s],"float32")}};class bm{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(o," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(r,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(a,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class gm{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.top,s=n-1-t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const ym={kernelName:a.P,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,filterShape:d}=r,p=a.ld.computeConv2DInfo(o.shape,d,i,c,u,l,!0),h=new bm(p);return n.runWebGLProgram(h,[o,s],"float32")}};const vm={kernelName:a.Q,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,inputShape:d}=r,p=a.ld.computeConv2DInfo(d,s.shape,i,c,u,l,!0),h=new gm(p);return n.runWebGLProgram(h,[o,s],"float32")}};class Om{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const xm={kernelName:a.R,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,o=[...r.shape,...r.shape],s=a.kf.sizeFromShape(r.shape),i=uh({inputs:{x:r},backend:n,attrs:{shape:[s]}}),c=new Om(s),u=n.runWebGLProgram(c,[i],i.dtype),l=uh({inputs:{x:u},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class wm{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:a,strideWidth:o,filterHeight:s,filterWidth:i,dilationHeight:c,dilationWidth:u}=t,{top:l,left:d}=r;this.userCode="\n      const ivec2 strides = ivec2(".concat(a,", ").concat(o,");\n      const ivec2 pads = ivec2(").concat(l,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(s,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(e,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(u,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const km={kernelName:a.S,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dilations:u}=r,l=a.ld.computeDilation2DInfo(o.shape,s.shape,i,c,"NHWC",u);let d;const p=new wm(l);d=n.runWebGLProgram(p,[o,s],"float32");const h=uh({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),h}},jm=$p({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Nm={kernelName:a.V,backendName:"webgl",kernelFunc:jm},Sm={kernelName:a.W,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:o}=e,s=Object(a.Kd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wp("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,o.shape):new Vp("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,o.shape);return n.runWebGLProgram(s,[r,o],r.dtype)}},Im=th({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),Tm={kernelName:a.X,backendName:"webgl",kernelFunc:Im},Em=$p({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(a.ld.ERF_P,";\n  float a1 = ").concat(a.ld.ERF_A1,";\n  float a2 = ").concat(a.ld.ERF_A2,";\n  float a3 = ").concat(a.ld.ERF_A3,";\n  float a4 = ").concat(a.ld.ERF_A4,";\n  float a5 = ").concat(a.ld.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),Cm={kernelName:a.Y,backendName:"webgl",kernelFunc:Em},Am="return exp(x);",_m=$p({opSnippet:Am,packedOpSnippet:Am,cpuKernelImpl:Yd}),Rm={kernelName:a.Z,backendName:"webgl",kernelFunc:_m};function Dm(t){const{inputs:e,attrs:n,backend:r}=t,{dim:o}=n,{input:s}=e,i=s.shape.length,c=s.shape.slice();let u=o;return o<0&&(a.kf.assert(-(i+1)<=o,()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]")),u=i+o+1),c.splice(u,0,1),uh({inputs:{x:s},backend:r,attrs:{shape:c}})}const Fm={kernelName:a.ab,backendName:"webgl",kernelFunc:Dm},Mm="return exp(x) - 1.0;",Lm=$p({opSnippet:Mm,packedOpSnippet:Mm,cpuKernelImpl:Qd}),zm={kernelName:a.bb,backendName:"webgl",kernelFunc:Lm};class Pm{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const a=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),o=n?"".concat(r,".0"):"1.0";let s;if("real"===t)s="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error('FFT component must be either "real" or "imag", got '.concat(t,"."));s="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(a,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(s,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(r,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(r,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(o,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function Bm(t,e,n){const r=n.texData.get(t.dataId),o=a.kf.sizeFromShape(t.shape),s=t.shape[t.shape.length-1],i=uh({inputs:{x:t},backend:n,attrs:{shape:[o/s,s]}}),c=i.shape,u=new Pm("real",c,e),l=new Pm("imag",c,e),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:c},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:c}],p=n.runWebGLProgram(u,d,"float32"),h=n.runWebGLProgram(l,d,"float32"),f=Hp({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=uh({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const Vm={kernelName:a.cb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return Bm(r,!1,n)}};class Wm{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function Um(t){const{backend:e,attrs:n}=t,{shape:r,value:o}=n;let{dtype:s}=n;if(s=s||a.kf.inferDtype(o),"string"===s){const t=a.kf.getArrayFromDType(s,a.kf.sizeFromShape(r));return t.fill(o),e.makeTensorInfo(r,s,t)}{const t=new Wm(r,o),n=t.getCustomSetupFunc(o);return e.runWebGLProgram(t,[],s,n)}}const Gm={kernelName:a.db,backendName:"webgl",kernelFunc:Um};class Hm{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(e," - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(e,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const qm={kernelName:a.eb,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{image:r}=e,a=n,o=new Hm(r.shape);return a.runWebGLProgram(o,[r],r.dtype)}},Km="return floor(x);",Xm=$p({opSnippet:Km,packedOpSnippet:Km,cpuKernelImpl:Jd}),Ym={kernelName:a.fb,backendName:"webgl",kernelFunc:Xm},Qm=th({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Jm={kernelName:a.gb,backendName:"webgl",kernelFunc:Qm};class Zm{constructor(t){this.variableNames=["A"];const e=id(),[n,r]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(r,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(e.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class $m{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=id(),[n,r]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(r,".0, ").concat(n,".0);\n            vec4 values = ").concat(e.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}const tb={kernelName:a.hb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:o}=e;const{numChannels:s}=r,i="undefined"!==typeof HTMLVideoElement&&o instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&o instanceof HTMLImageElement,u="undefined"!==typeof ImageBitmap&&o instanceof ImageBitmap,[l,d]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[d,l],h=[d,l,s];(c||i||u)&&(null==eb&&(eb=document.createElement("canvas").getContext("2d")),eb.canvas.width=l,eb.canvas.height=d,eb.drawImage(o,0,0,l,d),o=eb.canvas);const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=El.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),o);const m=Object(a.Kd)().getBool("WEBGL_PACK")?new $m(h):new Zm(h),b=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),b}};let eb;const nb={kernelName:a.jb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s,bias:i,preluActivationWeights:c}=e,{strides:u,pad:l,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=r,b=a.ld.convertConv2DDataFormat(d),g=a.ld.computeConv2DInfo(o.shape,s.shape,u,p,l,h,!1,b);let y;const v=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(a.Kd)().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])y=Uf({x:o,filter:s,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});else{const t=null!=i,e=null!=c,r="leakyrelu"===f,u=f?eh(f,!1):null,l=new Pf(g,t,u,e,r),d=[o,s];if(i&&d.push(i),c&&d.push(c),r){const t=n.makeTensorInfo([],"float32",a.kf.createScalarValue(m,"float32"));d.push(t),v.push(t)}y=n.runWebGLProgram(l,d,"float32")}else y=Wf({x:o,filter:s,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});const O=uh({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return v.push(y),v.forEach(t=>n.disposeIntermediateTensorInfo(t)),O}};const rb={kernelName:a.kb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s,bias:i,preluActivationWeights:c}=e,{strides:u,pad:l,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=[];let b=d;null==b&&(b=[1,1]),a.kf.assert(a.ld.eitherStridesOrDilationsAreOne(u,b),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(u," and dilations '").concat(b,"'"));const g=a.ld.computeConv2DInfo(o.shape,s.shape,u,b,l,p,!0),y=Object(a.Kd)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,v=h?eh(h,y):null,O=[o,s],x=null!=i,w=null!=c,k="leakyrelu"===h;if(x&&O.push(i),w&&O.push(c),k){const t=n.makeTensorInfo([],"float32",a.kf.createScalarValue(f,"float32"));O.push(t),m.push(t)}let j;j=y?new fm(g,x,v,w,k):new hm(g,x,v,w,k);const N=n.runWebGLProgram(j,O,"float32");return m.forEach(t=>n.disposeIntermediateTensorInfo(t)),N}};class ab{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=Bd(e.length),a=Bd(n.length),o=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        ".concat(r," strides = ").concat(r,"(").concat(this.strides,");\n         void main() {\n          ").concat(a," coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ").concat(this.sliceDim,"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ").concat(o,";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      ")}}const ob={kernelName:a.lb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:o}=e,s=o.shape,i=s[s.length-1],[c,u,l,d]=a.ld.prepareAndValidate(r,o),p=uh({inputs:{x:o},backend:n,attrs:{shape:[u,i]}}),h=uh({inputs:{x:r},backend:n,attrs:{shape:[a.kf.sizeFromShape(r.shape)/l,l]}}),f=new ab(i,d,[u,l]),m=n.runWebGLProgram(f,[h,p],h.dtype),b=uh({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),b}};class sb{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=Bd(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<t.length;a++)2===a?r.push("int(getIndices(resRC.x, resRC.z))"):r.push("".concat(n[a]));return r.join()}(t);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}const ib={kernelName:a.mb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,indices:s}=e,{axis:i,batchDims:c}=r,u=a.kf.parseAxisParam(i,o.shape)[0],l=a.ld.segment_util.collectGatherOpShapeInfo(o,s,u,c),d=a.kf.sizeFromShape(s.shape),p=[],h=uh({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=uh({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});p.push(h),p.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([o,s])||"string"===o.dtype){const t=n.bufferSync(f),e=n.bufferSync(h),r=Zd(e,t,m);return p.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const b=new sb(h.shape,m),g=n.runWebGLProgram(b,[h,f],h.dtype);p.push(g);const y=uh({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}},cb=th({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:$d,dtype:"bool"}),ub={kernelName:a.nb,backendName:"webgl",kernelFunc:cb},lb=th({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),db={kernelName:a.ob,backendName:"webgl",kernelFunc:lb};const pb={kernelName:a.pb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return Bm(r,!0,n)}},hb=$p({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),fb={kernelName:a.sb,backendName:"webgl",kernelFunc:hb},mb=$p({opSnippet:"return float(isinf(x));",dtype:"bool"}),bb={kernelName:a.tb,backendName:"webgl",kernelFunc:mb},gb=$p({opSnippet:"return float(isnan(x));",dtype:"bool"}),yb={kernelName:a.ub,backendName:"webgl",kernelFunc:gb},vb=th({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:tp,dtype:"bool"}),Ob={kernelName:a.zb,backendName:"webgl",kernelFunc:vb},xb=th({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),wb={kernelName:a.Ab,backendName:"webgl",kernelFunc:xb};const kb={kernelName:a.Bb,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,num:o}=n,s=ep(r,a,o);return e.makeTensorInfo([s.length],"float32",s)}},jb=$p({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:np}),Nb={kernelName:a.Cb,backendName:"webgl",kernelFunc:jb},Sb=$p({opSnippet:"return log(1.0 + x);"}),Ib={kernelName:a.Db,backendName:"webgl",kernelFunc:Sb},Tb=th({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Eb={kernelName:a.Eb,backendName:"webgl",kernelFunc:Tb},Cb=$p({opSnippet:"return float(!(x >= 1.0));"}),Ab={kernelName:a.Fb,backendName:"webgl",kernelFunc:Cb},_b=th({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Rb={kernelName:a.Gb,backendName:"webgl",kernelFunc:_b};class Db{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[];const o=e,s=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(r,") * sum");i=.5===a?"inversesqrt(".concat(c,")"):1===a?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(a,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(o,"; j <= ").concat(o,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(s,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class Fb{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,s=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(r,") * sum");i=.5===a?"inversesqrt(".concat(c,")"):1===a?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(a,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(o,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(o,"; j <= ").concat(o,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(s,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const Mb={kernelName:a.wb,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{depthRadius:s,bias:i,alpha:c,beta:u}=r,l=Object(a.Kd)().getBool("WEBGL_PACK_NORMALIZATION")?new Fb(o.shape,s,i,c,u):new Db(o.shape,s,i,c,u);return n.runWebGLProgram(l,[o],o.dtype)}};class Lb{constructor(t,e,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=a,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(e,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(e," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(r,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(r,")\n                * float(").concat(a,")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(a,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const zb={kernelName:a.xb,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a,y:o,dy:s}=e,{depthRadius:i,bias:c,alpha:u,beta:l}=r,d=new Lb(a.shape,i,c,u,l);return n.runWebGLProgram(d,[a,o,s],a.dtype)}};function Pb(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{reductionIndices:s,keepDims:i}=r,c=o.shape.length,u=a.kf.parseAxisParam(s,o.shape);let l=u;const d=a.ld.getAxesPermutation(l,c),p=null!=d,h=n.shouldExecuteOnCPU([o]);let f=o;if(p){if(h){const t=n.texData.get(f.dataId).values,e=new Array(c);for(let n=0;n<e.length;n++)e[n]=o.shape[d[n]];const r=gp(t,o.shape,o.dtype,d,e);f=n.makeTensorInfo(e,o.dtype);n.texData.get(f.dataId).values=r}else f=bh(o,d,n);l=a.ld.getInnerMostAxes(l.length,c)}a.ld.assertAxesAreInnerMostDims("max",l,c);const[m,b]=a.ld.computeOutAndReduceShapes(f.shape,l);let g,y=m;if(i&&(y=a.ld.expandShapeToKeepDim(m,u)),h){const t=n.texData.get(f.dataId).values,e=rp(t,a.kf.sizeFromShape(b),y,o.dtype);g=n.makeTensorInfo(y,o.dtype);n.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const o=a.kf.sizeFromShape(e),s=uh({inputs:{x:t},attrs:{shape:[a.kf.sizeFromShape(t.shape)/o,o]},backend:r}),i=hh(s,t.dtype,"max",r),c=uh({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),c}(f,b,y,n);return p&&n.disposeIntermediateTensorInfo(f),g}const Bb={kernelName:a.Hb,backendName:"webgl",kernelFunc:Pb},Vb=th({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:ap}),Wb={kernelName:a.Nb,backendName:"webgl",kernelFunc:Vb};const Ub={kernelName:a.Ib,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e;od(o,"maxPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=r;a.kf.assert(a.ld.eitherStridesOrDilationsAreOne(i,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.ld.computePool2DInfo(o.shape,s,i,1,c,u);if(1===l.filterWidth&&1===l.filterHeight&&a.kf.arraysEqual(l.inShape,l.outShape))return Up({inputs:{x:o},backend:n});const d=new Jh(l,"max",!1);return n.runWebGLProgram(d,[o],o.dtype)}};const Gb={kernelName:a.Jb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{filterSize:s,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=r,d=a.ld.computePool3DInfo(o.shape,s,i,[1,1,1],c,l,u),p=new Zh(d,"max",!1);return n.runWebGLProgram(p,[o],o.dtype)}};class Hb{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,a=t.effectiveFilterHeight,o=t.effectiveFilterWidth,s=a-1-t.padInfo.top,i=o-1-t.padInfo.left,c=a*o-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(a,";\n          wR += ").concat(r,") {\n          float dyR = float(dyRCorner + wR) / ").concat(e,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(o," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class qb{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,s=t.dilationWidth,i=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=i-1-t.padInfo.front,d=c-1-t.padInfo.top,p=u-1-t.padInfo.left,h=i*c*u-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(l,", ").concat(d,", ").concat(p,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(a,") {\n          float dyD = float(dyDCorner + wD) / ").concat(e,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(o,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(u,";\n                wC += ").concat(s,") {\n              float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(h," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(u," +\n                  wR * ").concat(u," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Kb={kernelName:a.Kb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,i=s,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=r,p=a.ld.computePool3DInfo(i.shape,c,u,[1,1,1],l,d),h=new Zh(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new qb(p),b=n.runWebGLProgram(m,[o,f],i.dtype);return n.disposeIntermediateTensorInfo(f),b}};const Xb={kernelName:a.Lb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s,output:i}=e,c=s;od([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:d,dimRoundingMode:p}=r,h=a.ld.computePool2DInfo(c.shape,u,l,1,d,p),f=new Jh(h,"max",!0),m=n.runWebGLProgram(f,[c],c.dtype),b=new Hb(h),g=n.runWebGLProgram(b,[o,m],c.dtype);return n.disposeIntermediateTensorInfo(m),g}};const Yb={kernelName:a.Mb,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{x:o}=e,{filterSize:s,strides:i,pad:c,includeBatchInIndex:u}=n,l=r;a.kf.assert(4===o.shape.length,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.shape.length,"."));const d=[1,1];a.kf.assert(a.ld.eitherStridesOrDilationsAreOne(i,d),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(d,"'"));const p=a.ld.computePool2DInfo(o.shape,s,i,d,c),[h,f]=function(t,e,n,r){let a=new Jh(n,"max",!1);const o=r.runWebGLProgram(a,[t],"float32");return a=new Jh(n,"max",!0,!0,e),[o,r.runWebGLProgram(a,[t],"float32")]}(o,u,p,l);return[h,f]}};const Qb={kernelName:a.Ob,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{x:o}=e,{keepDims:s,axis:i}=n,c=r,u=o.shape.length,l=a.kf.parseAxisParam(i,o.shape);let d=l;const p=a.ld.getAxesPermutation(d,u),h=null!=p,f=c.shouldExecuteOnCPU([o]),m=[];let b=o;if(h){if(f){const t=c.texData.get(b.dataId).values,e=new Array(u);for(let r=0;r<e.length;r++)e[r]=o.shape[p[r]];const n=gp(t,o.shape,o.dtype,p,e);b=c.makeTensorInfo(e,o.dtype);c.texData.get(b.dataId).values=n}else b=bh(o,p,c);m.push(b),d=a.ld.getInnerMostAxes(d.length,u)}a.ld.assertAxesAreInnerMostDims("sum",d,u);const[g,y]=a.ld.computeOutAndReduceShapes(b.shape,d);let v=g;s&&(v=a.ld.expandShapeToKeepDim(g,l));const O=function(t,e,n,r){const o=a.kf.sizeFromShape(e),s=uh({inputs:{x:t},attrs:{shape:[a.kf.sizeFromShape(t.shape)/o,o]},backend:r}),i=hh(s,"float32","mean",r),c=uh({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),c}(b,y,v,c);for(const a of m)c.disposeIntermediateTensorInfo(a);return O}};const Jb={kernelName:a.Pb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r,c=o.shape.length,u=a.kf.parseAxisParam(s,o.shape);let l=u;const d=a.ld.getAxesPermutation(l,c);let p=o;null!=d&&(p=vh({inputs:{x:o},backend:n,attrs:{perm:d}}),l=a.ld.getInnerMostAxes(l.length,o.shape.length)),a.ld.assertAxesAreInnerMostDims("min",l,c);const[h,f]=a.ld.computeOutAndReduceShapes(p.shape,l),m=uh({inputs:{x:p},backend:n,attrs:{shape:[-1,a.kf.sizeFromShape(f)]}}),b=hh(m,m.dtype,"min",n);let g;if(i){g=uh({inputs:{x:b},backend:n,attrs:{shape:a.ld.expandShapeToKeepDim(h,u)}})}else g=uh({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(p),g}},Zb=th({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:op}),$b={kernelName:a.Qb,backendName:"webgl",kernelFunc:Zb};class tg{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Bd(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c="reflect"===n?0:1;this.userCode=1!==r?"\n      ".concat(a," start = ").concat(a,"(").concat(o,");\n      ").concat(a," end = ").concat(a,"(").concat(s,");\n\n      void main() {\n        ").concat(a," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(r,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(a," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class eg{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Bd(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=Op("rc",r),c=Op("source",r),u="".concat(i[r-1]," < ").concat(this.outputShape[r-1]),l=1===r?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let p="";if(1===r){const t="\n        ".concat(a," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");p="\n        ".concat(a," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        ").concat(i[r-1]," += 1;\n        if(").concat(u,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n      ")}else{const t="\n        ".concat(a," source = rc;\n        ").concat(a," lt = ").concat(a,"(lessThan(source, start));\n        ").concat(a," gte = ").concat(a,"(greaterThanEqual(source, end));\n        ").concat(a," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");p="\n        ".concat(a," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        ").concat(i[r-1]," += 1;\n        if(").concat(u,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n        rc = outputLoc;\n        ").concat(i[r-2]," += 1;\n        if(").concat(i[r-2]," < ").concat(this.outputShape[r-2],") {\n          ").concat(t,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n          ").concat(i[r-1]," += 1;\n          if(").concat(u,") {\n            ").concat(t,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(a," start = ").concat(a,"(").concat(o,");\n      const ").concat(a," end = ").concat(a,"(").concat(s,");\n\n      void main() {\n        ").concat(a," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const ng={kernelName:a.Rb,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:r}=t;const{x:o}=e,{paddings:s,mode:i}=r,c=Object(a.Kd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eg(o.shape,s,i):new tg(o.shape,s,i);return n.runWebGLProgram(c,[o],o.dtype)}},rg=th({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ag={kernelName:a.Sb,backendName:"webgl",kernelFunc:rg};class og{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(e-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(e-1,"));\n      }\n    ")}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const sg=th({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),ig={kernelName:a.kc,backendName:"webgl",kernelFunc:sg},cg="return a - b;",ug=th({opSnippet:cg,packedOpSnippet:cg,supportsComplex:!0,cpuKernelImpl:fp}),lg={kernelName:a.Pc,backendName:"webgl",kernelFunc:ug};function dg(t){const{inputs:e,backend:n,attrs:r}=t,{logits:o}=e,{dim:s}=r,i=a.kf.parseAxisParam([s],o.shape),c=Pb({inputs:{x:o},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=a.ld.expandShapeToKeepDim(c.shape,i),l=uh({inputs:{x:c},backend:n,attrs:{shape:u}}),d=ug({inputs:{a:o,b:l},backend:n}),p=_m({inputs:{x:d},backend:n}),h=gh({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),f=uh({inputs:{x:h},backend:n,attrs:{shape:u}}),m=sg({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const pg={kernelName:a.Fc,backendName:"webgl",kernelFunc:dg};const hg={kernelName:a.Tb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{numSamples:o,seed:s,normalized:i}=r,c=i?a:dg({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new og(u,l,o),p=d.getCustomSetupFunc(s),h=n.runWebGLProgram(d,[c],"int32",p);return i||n.disposeIntermediateTensorInfo(c),h}},fg="return -x;";const mg={kernelName:a.Vb,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,a]=ip(t.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,e)}let o;return o=Object(a.Kd)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Mp(r.shape,fg):new Ip(r.shape,fg),n.runWebGLProgram(o,[r],r.dtype)}},bg=a.Xd.nonMaxSuppressionV3Impl;const gg={kernelName:a.Wb,backendName:"webgl",kernelFunc:function(t){a.ld.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u}=r,l=n.readSync(o.dataId),d=n.readSync(s.dataId),{selectedIndices:p}=bg(l,d,i,c,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},yg=a.Xd.nonMaxSuppressionV4Impl;const vg={kernelName:a.Xb,backendName:"webgl",kernelFunc:function(t){a.ld.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,padToMaxOutputSize:l}=r,d=n.readSync(o.dataId),p=n.readSync(s.dataId),{selectedIndices:h,validOutputs:f}=yg(d,p,i,c,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Og=a.Xd.nonMaxSuppressionV5Impl;const xg={kernelName:a.Yb,backendName:"webgl",kernelFunc:function(t){a.ld.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,softNmsSigma:l}=r,d=n.readSync(o.dataId),p=n.readSync(s.dataId),h=i,f=c,m=u,b=l,{selectedIndices:g,selectedScores:y}=Og(d,p,h,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class wg{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(r,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const kg={kernelName:a.ac,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:o}=e,{depth:s,onValue:i,offValue:c}=r,u=a.kf.sizeFromShape(o.shape),l=new wg(u,s,i,c),d=uh({inputs:{x:o},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(l,[d],o.dtype);n.disposeIntermediateTensorInfo(d);const h=uh({inputs:{x:p},backend:n,attrs:{shape:[...o.shape,s]}});return n.disposeIntermediateTensorInfo(p),h}};function jg(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=vf({inputs:{input:r},backend:n}),e=jg({inputs:{x:t},backend:n}),a=Df({inputs:{input:r},backend:n}),o=jg({inputs:{x:a},backend:n}),s=Hp({inputs:{real:e,imag:o},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}return Um({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Ng={kernelName:a.bd,backendName:"webgl",kernelFunc:jg};const Sg={kernelName:a.bc,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const e=vf({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r}),o=Df({inputs:{input:a},backend:r}),s=jg({inputs:{x:o},backend:r}),i=Hp({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),i}return Um({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};const Ig={kernelName:a.dc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:o}=r;if(1===e.length)return Dm({inputs:{input:e[0]},backend:n,attrs:{dim:o}});const s=e[0].shape,i=e[0].dtype;e.forEach(t=>{a.kf.assertShapesMatch(s,t.shape,"All tensors passed to stack must have matching shapes"),a.kf.assert(i===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=Lf({inputs:e.map(t=>{const e=Dm({inputs:{input:t},backend:n,attrs:{dim:o}});return c.push(e),e}),backend:n,attrs:{axis:o}});return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),u}};class Tg{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Bd(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?"\n      ".concat(a," start = ").concat(a,"(").concat(o,");\n      ").concat(a," end = ").concat(a,"(").concat(s,");\n\n      void main() {\n        ").concat(a," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(").concat(n,"));\n        } else {\n          ").concat(a," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(").concat(n,"));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class Eg{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Bd(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=Op("rc",r),c=Op("source",r),u="".concat(i[r-1]," < ").concat(this.outputShape[r-1]),l=1===r?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(a," rc = outputLoc;"),"".concat(i[r-1]," += 1;\n       if(").concat(u,") {\n      "),1===r?"":"}\n       rc = outputLoc;\n       ".concat(i[r-2]," += 1;\n       if(").concat(i[r-2]," < ").concat(this.outputShape[r-2],") {"),1===r?"":"  ".concat(i[r-1]," += 1;\n         if(").concat(u,") {")],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===r?2:4;f<m;f++)h+="\n        ".concat(d[f],"\n        if (").concat(p,") {\n          result[").concat(f,"] = float(").concat(n,");\n        } else {\n          ").concat(a," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n      ");h+=1===r?"} ":"}}",this.userCode="\n      const ".concat(a," start = ").concat(a,"(").concat(o,");\n      const ").concat(a," end = ").concat(a,"(").concat(s,");\n\n      void main() {\n        ").concat(a," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const Cg=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{paddings:s,constantValue:i}=r,c=Object(a.Kd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Eg(o.shape,s,i):new Tg(o.shape,s,i);return n.runWebGLProgram(c,[o],o.dtype)},Ag={kernelName:a.ec,backendName:"webgl",kernelFunc:Cg},_g=th({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Rg={kernelName:a.fc,backendName:"webgl",kernelFunc:_g};const Dg={kernelName:a.hc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r,c=o.shape.length,u=[],l=a.kf.parseAxisParam(s,o.shape);let d=l;const p=a.ld.getAxesPermutation(d,c);let h,f=o;if(null!=p&&(f=vh({inputs:{x:o},backend:n,attrs:{perm:p}}),d=a.ld.getInnerMostAxes(d.length,c),u.push(f)),a.ld.assertAxesAreInnerMostDims("prod",d,c),n.shouldExecuteOnCPU([f])){const t=n.texData.get(f.dataId).values,{outVals:e,outShape:r,outDtype:a}=cp(f.shape,f.dtype,t,d);h=n.makeTensorInfo(r,a,e)}else{const[t,e]=a.ld.computeOutAndReduceShapes(f.shape,d),r=a.kf.sizeFromShape(e),s=uh({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=hh(s,Object(a.Xe)(o.dtype),"prod",n);h=uh({inputs:{x:i},backend:n,attrs:{shape:t}}),u.push(s),u.push(i)}if(i){u.push(h);const t=a.ld.expandShapeToKeepDim(h.shape,l);h=uh({inputs:{x:h},backend:n,attrs:{shape:t}})}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),h}},Fg=t=>{const{backend:e,attrs:n}=t,{start:r,stop:a,step:o,dtype:s}=n,i=up(r,a,o,s);return e.makeTensorInfo([i.length],s,i)},Mg={kernelName:a.ic,backendName:"webgl",kernelFunc:Fg},Lg=$p({opSnippet:"return 1.0 / x;"}),zg={kernelName:a.lc,backendName:"webgl",kernelFunc:Lg},Pg=$p({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Bg={kernelName:a.mc,backendName:"webgl",kernelFunc:Pg},Vg=$p({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Wg={kernelName:a.nc,backendName:"webgl",kernelFunc:Vg};class Ug{constructor(t,e,n,r,a){this.variableNames=["A"],this.outputShape=[];const[o,s,i,c]=t;this.outputShape=[o,e,n,c];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class Gg{constructor(t,e,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,c]=t;this.outputShape=[o,e,n,c];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],",\n          ").concat(u[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(s,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const Hg={kernelName:a.pc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:c}=r,[u,l]=c,d=Object(a.Kd)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Gg(o.shape,u,l,s,i):new Ug(o.shape,u,l,s,i);return n.runWebGLProgram(d,[o],"float32")}};class qg{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,o,s]=t,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],c=[n&&o>1?o-1:o,n&&s>1?s-1:s],u=i[0]/c[0],l=i[1]/c[1],d=1/u,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(u,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(p,");\n\n        const int winHeight = int(").concat(h,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(r-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(a-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const Kg={kernelName:a.qc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:o}=e,{alignCorners:s}=r,i=new qg(o.shape,a.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class Xg{constructor(t,e,n,r,a){this.variableNames=["A"],this.outputShape=[];const[o,s,i,c]=t;this.outputShape=[o,e,n,c];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(p,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}const Yg={kernelName:a.rc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:o,halfPixelCenters:s,size:i}=r,[c,u]=i,l=new Xg(a.shape,c,u,o,s);return n.runWebGLProgram(l,[a],a.dtype)}};class Qg{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,o,s]=t,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],c=[n&&o>1?o-1:o,n&&s>1?s-1:s],u=i[0]/c[0],l=i[1]/c[1],d=1/u,p=1/l,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(u,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(p,");\n\n        const int winHeight = int(").concat(h,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const Jg={kernelName:a.sc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:o}=e,{alignCorners:s}=r,i=new Qg(o.shape,a.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class Zg{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=t,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(t[0]," - coord - 1));\n        }\n      "));const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(r)).join(","),a=Bd(n);this.userCode="\n      void main() {\n        ".concat(a," coords = getOutputCoords();\n        setOutput(getX(").concat(r,"));\n      }\n    ")}}class $g{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=t;const r=Op("rc",n),a="".concat(r[n-1]," + 1 < ").concat(this.outputShape[n-1]),o="".concat(r[n-2]," + 1 < ").concat(this.outputShape[n-2]),s=Bd(n);function i(n){const r=t.map((r,a)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - ").concat(r[n]," - 1"):"".concat(r[n])}(a,n)),a=r.join(","),o=r.slice(-2).join(",");return"getChannel(getX(".concat(a,"), vec2(").concat(o,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(t[0]," - rc - 1),\n            ").concat(t[0]," - rc - 1);\n          if(").concat(a,"){\n              result.g = getChannel(getX(").concat(t[0]," - (rc  + 1) - 1),\n                ").concat(t[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(s," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(t){return i(t)}(r.slice()),";\n          if(").concat(a,"){\n            result.g = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",i(t)}(r.slice()),";\n          }\n          if(").concat(o,") {\n            result.b = ").concat(function(t){return t[n-2]="("+t[n-2]+" + 1)",i(t)}(r.slice()),";\n            if(").concat(a,") {\n              result.a = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",i(t)}(r.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const ty={kernelName:a.tc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{dims:s}=r,i=o.shape.length,c=a.kf.parseAxisParam(s,o.shape);if(0===i)return Up({inputs:{x:o},backend:n});const u=Object(a.Kd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $g(o.shape,c):new Zg(o.shape,c);return n.runWebGLProgram(u,[o],o.dtype)}};class ey{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const o=t[1],s=t[2],i=Math.sin(e).toFixed(3),c=Math.cos(e).toFixed(3);this.outputShape=t;const[u,l]=a.ld.getImageCenter(r,o,s),d=u.toFixed(3),p=l.toFixed(3);let h="";h="number"===typeof n?"float outputValue = ".concat(n.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(n.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ".concat(d,") * ").concat(c," - (float(y) - ").concat(p,") * ").concat(i,";\n          float coordYFloat = (float(x) - ").concat(d,") * ").concat(i," + (float(y) - ").concat(p,") * ").concat(c,";\n          int coordX = int(round(coordXFloat + ").concat(d,"));\n          int coordY = int(round(coordYFloat + ").concat(p,"));\n          ").concat(h,"\n          if(coordX >= 0 && coordX < ").concat(s," && coordY >= 0 && coordY < ").concat(o,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const ny={kernelName:a.uc,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{image:a}=e,{radians:o,fillValue:s,center:i}=n,c=r,u=new ey(a.shape,o,s,i);return c.runWebGLProgram(u,[a],a.dtype)}},ry=$p({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ay={kernelName:a.vc,backendName:"webgl",kernelFunc:ry},oy=$p({opSnippet:"return inversesqrt(x);",cpuKernelImpl:lp}),sy={kernelName:a.wc,backendName:"webgl",kernelFunc:oy};class iy{constructor(t,e,n,r,a,o){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const s=Bd(a.length),i=Bd(o.length);let c="";1===n?c="i":2===n&&(c="i, j");const u="getIndices(".concat(c,")");let l="";1===r?l="i":2===r&&(l="i, coords[1]");const d="getUpdates(".concat(l,")"),p=e>1?"strides[j]":"strides";this.userCode="\n        ".concat(s," strides = ").concat(s,"(").concat(a,");\n\n        void main() {\n          ").concat(i," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(t,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(e,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(p,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      ")}}const cy={kernelName:a.xc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:o,updates:s}=e,{shape:i}=r,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=a.ld.calculateShapes(s,o,i),h=[p/l,l];if(0===p)return n.makeTensorInfo(i,o.dtype);const f=uh({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),m=uh({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new iy(u,c,f.shape.length,m.shape.length,d,h),y=n.runWebGLProgram(g,[m,f,b],m.dtype),v=uh({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),v}};class uy{constructor(t,e,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[];for(let r=0;r<e.length;r++)s.push("".concat(n[r])),r<t&&o.push("".concat(n[r]));r=o.join(),a=s.join()}const o=Bd(n);this.userCode="\n      void main() {\n        ".concat(o," resRC = getOutputCoords();\n        float cVal = getC(").concat(r,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(a,"));\n        } else {\n          setOutput(getB(").concat(a,"));\n        }\n      }\n    ")}}const ly={kernelName:a.yc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:o,e:s}=e,i=new uy(r.shape.length,o.shape,o.shape.length);return n.runWebGLProgram(i,[r,o,s],Object(a.jf)(o.dtype,s.dtype))}},dy=$p({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(a.ld.SELU_SCALEALPHA,";\n  float scale = ").concat(a.ld.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),py={kernelName:a.zc,backendName:"webgl",kernelFunc:dy},hy=$p({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),fy={kernelName:a.Ac,backendName:"webgl",kernelFunc:hy},my=$p({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),by={kernelName:a.Bc,backendName:"webgl",kernelFunc:my},gy=$p({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),yy={kernelName:a.Cc,backendName:"webgl",kernelFunc:gy},vy=$p({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Oy={kernelName:a.Dc,backendName:"webgl",kernelFunc:vy},xy=$p({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),wy={kernelName:a.Gc,backendName:"webgl",kernelFunc:xy},ky={kernelName:a.Hc,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockShape:s,paddings:i}=r;a.kf.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=s.reduce((t,e)=>t*e),u=[[0,0]];u.push(...i);for(let a=1+s.length;a<o.shape.length;++a)u.push([0,0]);const l=[],d=Cg({inputs:{x:o},backend:n,attrs:{paddings:u,constantValue:0}}),p=a.ld.getReshaped(d.shape,s,c,!1),h=a.ld.getPermuted(p.length,s.length,!1),f=a.ld.getReshapedPermuted(d.shape,s,c,!1),m=uh({inputs:{x:d},backend:n,attrs:{shape:p}}),b=vh({inputs:{x:m},backend:n,attrs:{perm:h}}),g=uh({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach(t=>n.disposeIntermediateTensorInfo(t)),g}};const jy={kernelName:a.Ic,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:c}=r,{sliceRank:u,numUpdates:l,strides:d,outputSize:p}=a.ld.calculateShapes(s,o,c),h=new iy(l,u,o.shape.length,s.shape.length,d,[p,1],!1),f=n.runWebGLProgram(h,[s,o,i],s.dtype),m=uh({inputs:{x:f},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(f),m}};const Ny={kernelName:a.Jc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{numOrSizeSplits:s,axis:i}=r,c=a.kf.parseAxisParam(i,o.shape)[0],u=a.ld.prepareSplitSize(o,s,c),l=o.shape.length,d=new Array(l).fill(0),p=o.shape.slice();return u.map(t=>{const e=[...p];e[c]=t;const r=hf({inputs:{x:o},backend:n,attrs:{begin:d,size:e}});return d[c]+=t,r})}},Sy=$p({opSnippet:"return sqrt(x);"}),Iy={kernelName:a.Kc,backendName:"webgl",kernelFunc:Sy},Ty=$p({opSnippet:"return x * x;"}),Ey={kernelName:a.Lc,backendName:"webgl",kernelFunc:Ty},Cy=th({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),Ay={kernelName:a.Mc,backendName:"webgl",kernelFunc:Cy};const _y={kernelName:a.Nc,backendName:"webgl",kernelFunc:function(t){let{inputs:e,attrs:n,backend:r}=t;const{x:a}=e,o=Tp+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),s=new Ip(a.shape,o);return r.runWebGLProgram(s,[a],a.dtype)}};class Ry{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Bd(n.length),o=Bd(n.length);let s="";if(1===r)s="coords * strides + begin";else{let t=0;s=n.map((e,r)=>(t++,1===n.length?"coords * strides[".concat(r,"] + begin[").concat(r,"]"):"coords[".concat(t-1,"] * strides[").concat(r,"] + begin[").concat(r,"]"))).join(",")}this.userCode="\n      ".concat(a," begin = ").concat(a,"(").concat(t,");\n      ").concat(a," strides = ").concat(a,"(").concat(e,");\n\n      void main() {\n        ").concat(o," coords = getOutputCoords();\n        setOutput(getX(").concat(s,"));\n      }\n    ")}}const Dy={kernelName:a.Oc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{begin:s,end:i,strides:c,beginMask:u,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:v}=a.Oe.sliceInfo(o.shape,s,i,c,u,l,d,p,h),O=uh({inputs:{x:o},backend:n,attrs:{shape:y}});let x;if(f){const t=hf({inputs:{x:O},backend:n,attrs:{begin:m,size:g}});x=uh({inputs:{x:t},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(t)}else if(v.some(t=>0===t))x=n.makeTensorInfo(v,o.dtype,[]);else{if(n.shouldExecuteOnCPU([O])){const t=n.texData.get(O.dataId).values,e=Object(a.qd)(O.shape,O.dtype,t),r=hp(v,e,b,m);x=n.makeTensorInfo(v,O.dtype,r.values)}else{const t=new Ry(m,b,v);x=n.runWebGLProgram(t,[O],O.dtype)}}const w=uh({inputs:{x:x},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(x),w}},Fy=$p({opSnippet:"return tan(x);"}),My={kernelName:a.Rc,backendName:"webgl",kernelFunc:Fy},Ly=$p({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),zy={kernelName:a.Sc,backendName:"webgl",kernelFunc:Ly};class Py{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.rank=n.length;const r=Bd(this.rank),a=function(t){const e=t.length;if(e>5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"imod(resRC, ".concat(t[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<t.length;a++)r.push("imod(".concat(n[a],", ").concat(t[a],")"));return r.join()}(t);this.userCode="\n      void main() {\n        ".concat(r," resRC = getOutputCoords();\n        setOutput(getA(").concat(a,"));\n      }\n    ")}}function By(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{reps:s}=r;if("string"===o.dtype){const t=n.readSync(o.dataId).map(t=>a.kf.decodeString(t)),e=Object(a.qd)(o.shape,o.dtype,t),r=mp(e,s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const i=new Py(o.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}const Vy={kernelName:a.Vc,backendName:"webgl",kernelFunc:By};const Wy={kernelName:a.Wc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{k:o,sorted:s}=r,i=n.readSync(a.dataId),[c,u]=bp(i,a.shape,a.dtype,o,s);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const Uy={kernelName:a.Yc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:o}=e;od(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(o.dataId),{outputValues:i,outputShape:c,indices:u}=yp(s,a,o.shape,o.dtype);return[r.makeTensorInfo(c,o.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}};const Gy={kernelName:a.Zc,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:a}=e;let{axis:o}=r;o<0&&(o+=a.shape.length);const s=a,i=s.shape.length,c=a.shape[o],u=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==o&&(u[l++]=s.shape[m]);const d=[],p=new Array(i).fill(0),h=s.shape.slice();h[o]=1;const f=new Array(c);for(let m=0;m<f.length;m++){p[o]=m;const t=hf({inputs:{x:s},backend:n,attrs:{begin:p,size:h}}),e=uh({inputs:{x:t},backend:n,attrs:{shape:u}});f[m]=e,d.push(t)}return d.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}};class Hy{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,a=t.inSize,o=t.numSegments,s=o*Math.ceil(a/n);this.outputShape=[r,s];const i=4*Math.floor(n/4),c=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return initializationValue;\n        }\n      "));let d="";a%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(o,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(o,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(u,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(u,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(u,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const qy=[Mb,zb,wh,kh,Nh,Ih,Ch,Rh,Dh,Fh,Ph,Bh,Wh,Gh,Xh,qh,Qh,tf,$h,rf,af,of,uf,mf,bf,xf,jf,If,Cf,qp,zf,Yf,Qf,Gf,Zf,$f,Jf,em,rm,om,um,lm,pm,ym,vm,mm,xm,km,Nm,Sm,Tm,Cm,Rm,Fm,zm,Vm,Gm,qm,Ym,Jm,tb,nb,rb,ob,ib,ub,db,Gp,pb,Ff,fb,bb,yb,Yp,Ob,wb,kb,Ib,Nb,Eb,Ab,Rb,Bb,Gb,Ub,Kb,Xb,Yb,Wb,Qb,Jb,$b,ng,ag,hg,ch,mg,gg,vg,xg,yf,kg,Sg,Ig,Ag,Rg,Zp,Dg,Mg,Of,ig,zg,Wg,Bg,lh,Hg,Kg,Yg,Jg,ty,ny,ay,sy,cy,ly,py,fy,by,yy,Oy,ff,pg,wy,ky,jy,Ny,Iy,Ey,Ay,_y,Dy,lg,yh,My,zy,Vy,Wy,Oh,Uy,Gy,{kernelName:a.ad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,segmentIds:s}=e,{numSegments:i}=r,c=o.shape.length,u=[];let l=0;const d=a.ld.getAxesPermutation([l],c);let p=o;null!=d&&(p=vh({inputs:{x:o},backend:n,attrs:{perm:d}}),u.push(p),l=a.ld.getInnerMostAxes(1,c)[0]);const h=a.ld.segment_util.computeOutShape(p.shape,l,i),f=a.kf.sizeFromShape([p.shape[l]]),m=uh({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});u.push(m);const b=Object(a.Xe)(o.dtype),g=(t,e,r,o,s)=>{const i=t.shape[0],c=t.shape[1],l=a.ld.segment_util.segOpComputeOptimalWindowSize(c,s),d=new Hy({windowSize:l,inSize:c,batchSize:i,numSegments:s},e),p=n.compileAndRun(d,[t,r],o);if(u.push(p),p.shape[1]===s)return p;const h=Fg({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=By({inputs:{x:h},backend:n,attrs:{reps:[c/l]}});u.push(h),u.push(f);return g(p,e,f,o,s)},y=uh({inputs:{x:g(m,"unsortedSegmentSum",s,b,i)},backend:n,attrs:{shape:h}});let v=y;if(null!=d){u.push(y);const t=a.ld.getUndoAxesPermutation(d);v=vh({inputs:{x:v},backend:n,attrs:{perm:t}})}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),v}},Ng];for(const Ky of qy)Object(a.ze)(Ky);a.nf},,,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){"use strict";var r=n(240),a="function"===typeof Symbol&&Symbol.for,o=a?Symbol.for("react.element"):60103,s=a?Symbol.for("react.portal"):60106,i=a?Symbol.for("react.fragment"):60107,c=a?Symbol.for("react.strict_mode"):60108,u=a?Symbol.for("react.profiler"):60114,l=a?Symbol.for("react.provider"):60109,d=a?Symbol.for("react.context"):60110,p=a?Symbol.for("react.forward_ref"):60112,h=a?Symbol.for("react.suspense"):60113,f=a?Symbol.for("react.memo"):60115,m=a?Symbol.for("react.lazy"):60116,b="function"===typeof Symbol&&Symbol.iterator;function g(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v={};function O(t,e,n){this.props=t,this.context=e,this.refs=v,this.updater=n||y}function x(){}function w(t,e,n){this.props=t,this.context=e,this.refs=v,this.updater=n||y}O.prototype.isReactComponent={},O.prototype.setState=function(t,e){if("object"!==typeof t&&"function"!==typeof t&&null!=t)throw Error(g(85));this.updater.enqueueSetState(this,t,e,"setState")},O.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},x.prototype=O.prototype;var k=w.prototype=new x;k.constructor=w,r(k,O.prototype),k.isPureReactComponent=!0;var j={current:null},N=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function I(t,e,n){var r,a={},s=null,i=null;if(null!=e)for(r in void 0!==e.ref&&(i=e.ref),void 0!==e.key&&(s=""+e.key),e)N.call(e,r)&&!S.hasOwnProperty(r)&&(a[r]=e[r]);var c=arguments.length-2;if(1===c)a.children=n;else if(1<c){for(var u=Array(c),l=0;l<c;l++)u[l]=arguments[l+2];a.children=u}if(t&&t.defaultProps)for(r in c=t.defaultProps)void 0===a[r]&&(a[r]=c[r]);return{$$typeof:o,type:t,key:s,ref:i,props:a,_owner:j.current}}function T(t){return"object"===typeof t&&null!==t&&t.$$typeof===o}var E=/\/+/g,C=[];function A(t,e,n,r){if(C.length){var a=C.pop();return a.result=t,a.keyPrefix=e,a.func=n,a.context=r,a.count=0,a}return{result:t,keyPrefix:e,func:n,context:r,count:0}}function _(t){t.result=null,t.keyPrefix=null,t.func=null,t.context=null,t.count=0,10>C.length&&C.push(t)}function R(t,e,n){return null==t?0:function t(e,n,r,a){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case o:case s:c=!0}}if(c)return r(a,e,""===n?"."+D(e,0):n),1;if(c=0,n=""===n?".":n+":",Array.isArray(e))for(var u=0;u<e.length;u++){var l=n+D(i=e[u],u);c+=t(i,l,r,a)}else if(null===e||"object"!==typeof e?l=null:l="function"===typeof(l=b&&e[b]||e["@@iterator"])?l:null,"function"===typeof l)for(e=l.call(e),u=0;!(i=e.next()).done;)c+=t(i=i.value,l=n+D(i,u++),r,a);else if("object"===i)throw r=""+e,Error(g(31,"[object Object]"===r?"object with keys {"+Object.keys(e).join(", ")+"}":r,""));return c}(t,"",e,n)}function D(t,e){return"object"===typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+(""+t).replace(/[=:]/g,(function(t){return e[t]}))}(t.key):e.toString(36)}function F(t,e){t.func.call(t.context,e,t.count++)}function M(t,e,n){var r=t.result,a=t.keyPrefix;t=t.func.call(t.context,e,t.count++),Array.isArray(t)?L(t,r,n,(function(t){return t})):null!=t&&(T(t)&&(t=function(t,e){return{$$typeof:o,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(t,a+(!t.key||e&&e.key===t.key?"":(""+t.key).replace(E,"$&/")+"/")+n)),r.push(t))}function L(t,e,n,r,a){var o="";null!=n&&(o=(""+n).replace(E,"$&/")+"/"),R(t,M,e=A(e,o,r,a)),_(e)}var z={current:null};function P(){var t=z.current;if(null===t)throw Error(g(321));return t}var B={ReactCurrentDispatcher:z,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:j,IsSomeRendererActing:{current:!1},assign:r};e.Children={map:function(t,e,n){if(null==t)return t;var r=[];return L(t,r,null,e,n),r},forEach:function(t,e,n){if(null==t)return t;R(t,F,e=A(null,null,e,n)),_(e)},count:function(t){return R(t,(function(){return null}),null)},toArray:function(t){var e=[];return L(t,e,null,(function(t){return t})),e},only:function(t){if(!T(t))throw Error(g(143));return t}},e.Component=O,e.Fragment=i,e.Profiler=u,e.PureComponent=w,e.StrictMode=c,e.Suspense=h,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=B,e.cloneElement=function(t,e,n){if(null===t||void 0===t)throw Error(g(267,t));var a=r({},t.props),s=t.key,i=t.ref,c=t._owner;if(null!=e){if(void 0!==e.ref&&(i=e.ref,c=j.current),void 0!==e.key&&(s=""+e.key),t.type&&t.type.defaultProps)var u=t.type.defaultProps;for(l in e)N.call(e,l)&&!S.hasOwnProperty(l)&&(a[l]=void 0===e[l]&&void 0!==u?u[l]:e[l])}var l=arguments.length-2;if(1===l)a.children=n;else if(1<l){u=Array(l);for(var d=0;d<l;d++)u[d]=arguments[d+2];a.children=u}return{$$typeof:o,type:t.type,key:s,ref:i,props:a,_owner:c}},e.createContext=function(t,e){return void 0===e&&(e=null),(t={$$typeof:d,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:t},t.Consumer=t},e.createElement=I,e.createFactory=function(t){var e=I.bind(null,t);return e.type=t,e},e.createRef=function(){return{current:null}},e.forwardRef=function(t){return{$$typeof:p,render:t}},e.isValidElement=T,e.lazy=function(t){return{$$typeof:m,_ctor:t,_status:-1,_result:null}},e.memo=function(t,e){return{$$typeof:f,type:t,compare:void 0===e?null:e}},e.useCallback=function(t,e){return P().useCallback(t,e)},e.useContext=function(t,e){return P().useContext(t,e)},e.useDebugValue=function(){},e.useEffect=function(t,e){return P().useEffect(t,e)},e.useImperativeHandle=function(t,e,n){return P().useImperativeHandle(t,e,n)},e.useLayoutEffect=function(t,e){return P().useLayoutEffect(t,e)},e.useMemo=function(t,e){return P().useMemo(t,e)},e.useReducer=function(t,e,n){return P().useReducer(t,e,n)},e.useRef=function(t){return P().useRef(t)},e.useState=function(t){return P().useState(t)},e.version="16.14.0"},function(t,e,n){"use strict";var r=n(87),a=n(240),o=n(350);function s(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(s(227));function i(t,e,n,r,a,o,s,i,c){var u=Array.prototype.slice.call(arguments,3);try{e.apply(n,u)}catch(l){this.onError(l)}}var c=!1,u=null,l=!1,d=null,p={onError:function(t){c=!0,u=t}};function h(t,e,n,r,a,o,s,l,d){c=!1,u=null,i.apply(p,arguments)}var f=null,m=null,b=null;function g(t,e,n){var r=t.type||"unknown-event";t.currentTarget=b(n),function(t,e,n,r,a,o,i,p,f){if(h.apply(this,arguments),c){if(!c)throw Error(s(198));var m=u;c=!1,u=null,l||(l=!0,d=m)}}(r,e,void 0,t),t.currentTarget=null}var y=null,v={};function O(){if(y)for(var t in v){var e=v[t],n=y.indexOf(t);if(!(-1<n))throw Error(s(96,t));if(!w[n]){if(!e.extractEvents)throw Error(s(97,t));for(var r in w[n]=e,n=e.eventTypes){var a=void 0,o=n[r],i=e,c=r;if(k.hasOwnProperty(c))throw Error(s(99,c));k[c]=o;var u=o.phasedRegistrationNames;if(u){for(a in u)u.hasOwnProperty(a)&&x(u[a],i,c);a=!0}else o.registrationName?(x(o.registrationName,i,c),a=!0):a=!1;if(!a)throw Error(s(98,r,t))}}}}function x(t,e,n){if(j[t])throw Error(s(100,t));j[t]=e,N[t]=e.eventTypes[n].dependencies}var w=[],k={},j={},N={};function S(t){var e,n=!1;for(e in t)if(t.hasOwnProperty(e)){var r=t[e];if(!v.hasOwnProperty(e)||v[e]!==r){if(v[e])throw Error(s(102,e));v[e]=r,n=!0}}n&&O()}var I=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),T=null,E=null,C=null;function A(t){if(t=m(t)){if("function"!==typeof T)throw Error(s(280));var e=t.stateNode;e&&(e=f(e),T(t.stateNode,t.type,e))}}function _(t){E?C?C.push(t):C=[t]:E=t}function R(){if(E){var t=E,e=C;if(C=E=null,A(t),e)for(t=0;t<e.length;t++)A(e[t])}}function D(t,e){return t(e)}function F(t,e,n,r,a){return t(e,n,r,a)}function M(){}var L=D,z=!1,P=!1;function B(){null===E&&null===C||(M(),R())}function V(t,e,n){if(P)return t(e,n);P=!0;try{return L(t,e,n)}finally{P=!1,B()}}var W=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,U=Object.prototype.hasOwnProperty,G={},H={};function q(t,e,n,r,a,o){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=o}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(t){K[t]=new q(t,0,!1,t,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(t){var e=t[0];K[e]=new q(e,1,!1,t[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(t){K[t]=new q(t,2,!1,t.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(t){K[t]=new q(t,2,!1,t,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(t){K[t]=new q(t,3,!1,t.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(t){K[t]=new q(t,3,!0,t,null,!1)})),["capture","download"].forEach((function(t){K[t]=new q(t,4,!1,t,null,!1)})),["cols","rows","size","span"].forEach((function(t){K[t]=new q(t,6,!1,t,null,!1)})),["rowSpan","start"].forEach((function(t){K[t]=new q(t,5,!1,t.toLowerCase(),null,!1)}));var X=/[\-:]([a-z])/g;function Y(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(t){var e=t.replace(X,Y);K[e]=new q(e,1,!1,t,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(t){var e=t.replace(X,Y);K[e]=new q(e,1,!1,t,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(t){var e=t.replace(X,Y);K[e]=new q(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(t){K[t]=new q(t,1,!1,t.toLowerCase(),null,!1)})),K.xlinkHref=new q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(t){K[t]=new q(t,1,!1,t.toLowerCase(),null,!0)}));var Q=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function J(t,e,n,r){var a=K.hasOwnProperty(e)?K[e]:null;(null!==a?0===a.type:!r&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1])))||(function(t,e,n,r){if(null===e||"undefined"===typeof e||function(t,e,n,r){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,a,r)&&(n=null),r||null===a?function(t){return!!U.call(H,t)||!U.call(G,t)&&(W.test(t)?H[t]=!0:(G[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):a.mustUseProperty?t[a.propertyName]=null===n?3!==a.type&&"":n:(e=a.attributeName,r=a.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}Q.hasOwnProperty("ReactCurrentDispatcher")||(Q.ReactCurrentDispatcher={current:null}),Q.hasOwnProperty("ReactCurrentBatchConfig")||(Q.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,$="function"===typeof Symbol&&Symbol.for,tt=$?Symbol.for("react.element"):60103,et=$?Symbol.for("react.portal"):60106,nt=$?Symbol.for("react.fragment"):60107,rt=$?Symbol.for("react.strict_mode"):60108,at=$?Symbol.for("react.profiler"):60114,ot=$?Symbol.for("react.provider"):60109,st=$?Symbol.for("react.context"):60110,it=$?Symbol.for("react.concurrent_mode"):60111,ct=$?Symbol.for("react.forward_ref"):60112,ut=$?Symbol.for("react.suspense"):60113,lt=$?Symbol.for("react.suspense_list"):60120,dt=$?Symbol.for("react.memo"):60115,pt=$?Symbol.for("react.lazy"):60116,ht=$?Symbol.for("react.block"):60121,ft="function"===typeof Symbol&&Symbol.iterator;function mt(t){return null===t||"object"!==typeof t?null:"function"===typeof(t=ft&&t[ft]||t["@@iterator"])?t:null}function bt(t){if(null==t)return null;if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t;switch(t){case nt:return"Fragment";case et:return"Portal";case at:return"Profiler";case rt:return"StrictMode";case ut:return"Suspense";case lt:return"SuspenseList"}if("object"===typeof t)switch(t.$$typeof){case st:return"Context.Consumer";case ot:return"Context.Provider";case ct:var e=t.render;return e=e.displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case dt:return bt(t.type);case ht:return bt(t.render);case pt:if(t=1===t._status?t._result:null)return bt(t)}return null}function gt(t){var e="";do{t:switch(t.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break t;default:var r=t._debugOwner,a=t._debugSource,o=bt(t.type);n=null,r&&(n=bt(r.type)),r=o,o="",a?o=" (at "+a.fileName.replace(Z,"")+":"+a.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+o}e+=n,t=t.return}while(t);return e}function yt(t){switch(typeof t){case"boolean":case"number":case"object":case"string":case"undefined":return t;default:return""}}function vt(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function Ot(t){t._valueTracker||(t._valueTracker=function(t){var e=vt(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=""+t[e];if(!t.hasOwnProperty(e)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return a.call(this)},set:function(t){r=""+t,o.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(t){r=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function xt(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return t&&(r=vt(t)?t.checked?"true":"false":t.value),(t=r)!==n&&(e.setValue(t),!0)}function wt(t,e){var n=e.checked;return a({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function kt(t,e){var n=null==e.defaultValue?"":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;n=yt(null!=e.value?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function jt(t,e){null!=(e=e.checked)&&J(t,"checked",e,!1)}function Nt(t,e){jt(t,e);var n=yt(e.value),r=e.type;if(null!=n)"number"===r?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===r||"reset"===r)return void t.removeAttribute("value");e.hasOwnProperty("value")?It(t,e.type,n):e.hasOwnProperty("defaultValue")&&It(t,e.type,yt(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function St(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!("submit"!==r&&"reset"!==r||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function It(t,e,n){"number"===e&&t.ownerDocument.activeElement===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}function Tt(t,e){return t=a({children:void 0},e),(e=function(t){var e="";return r.Children.forEach(t,(function(t){null!=t&&(e+=t)})),e}(e.children))&&(t.children=e),t}function Et(t,e,n,r){if(t=t.options,e){e={};for(var a=0;a<n.length;a++)e["$"+n[a]]=!0;for(n=0;n<t.length;n++)a=e.hasOwnProperty("$"+t[n].value),t[n].selected!==a&&(t[n].selected=a),a&&r&&(t[n].defaultSelected=!0)}else{for(n=""+yt(n),e=null,a=0;a<t.length;a++){if(t[a].value===n)return t[a].selected=!0,void(r&&(t[a].defaultSelected=!0));null!==e||t[a].disabled||(e=t[a])}null!==e&&(e.selected=!0)}}function Ct(t,e){if(null!=e.dangerouslySetInnerHTML)throw Error(s(91));return a({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function At(t,e){var n=e.value;if(null==n){if(n=e.children,e=e.defaultValue,null!=n){if(null!=e)throw Error(s(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(s(93));n=n[0]}e=n}null==e&&(e=""),n=e}t._wrapperState={initialValue:yt(n)}}function _t(t,e){var n=yt(e.value),r=yt(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=r&&(t.defaultValue=""+r)}function Rt(t){var e=t.textContent;e===t._wrapperState.initialValue&&""!==e&&null!==e&&(t.value=e)}var Dt="http://www.w3.org/1999/xhtml",Ft="http://www.w3.org/2000/svg";function Mt(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Lt(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?Mt(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var zt,Pt=function(t){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,r,a){MSApp.execUnsafeLocalFunction((function(){return t(e,n)}))}:t}((function(t,e){if(t.namespaceURI!==Ft||"innerHTML"in t)t.innerHTML=e;else{for((zt=zt||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=zt.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}}));function Bt(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}function Vt(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Wt={animationend:Vt("Animation","AnimationEnd"),animationiteration:Vt("Animation","AnimationIteration"),animationstart:Vt("Animation","AnimationStart"),transitionend:Vt("Transition","TransitionEnd")},Ut={},Gt={};function Ht(t){if(Ut[t])return Ut[t];if(!Wt[t])return t;var e,n=Wt[t];for(e in n)if(n.hasOwnProperty(e)&&e in Gt)return Ut[t]=n[e];return t}I&&(Gt=document.createElement("div").style,"AnimationEvent"in window||(delete Wt.animationend.animation,delete Wt.animationiteration.animation,delete Wt.animationstart.animation),"TransitionEvent"in window||delete Wt.transitionend.transition);var qt=Ht("animationend"),Kt=Ht("animationiteration"),Xt=Ht("animationstart"),Yt=Ht("transitionend"),Qt="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Jt=new("function"===typeof WeakMap?WeakMap:Map);function Zt(t){var e=Jt.get(t);return void 0===e&&(e=new Map,Jt.set(t,e)),e}function $t(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do{0!==(1026&(e=t).effectTag)&&(n=e.return),t=e.return}while(t)}return 3===e.tag?n:null}function te(t){if(13===t.tag){var e=t.memoizedState;if(null===e&&(null!==(t=t.alternate)&&(e=t.memoizedState)),null!==e)return e.dehydrated}return null}function ee(t){if($t(t)!==t)throw Error(s(188))}function ne(t){if(!(t=function(t){var e=t.alternate;if(!e){if(null===(e=$t(t)))throw Error(s(188));return e!==t?null:t}for(var n=t,r=e;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return ee(a),t;if(o===r)return ee(a),e;o=o.sibling}throw Error(s(188))}if(n.return!==r.return)n=a,r=o;else{for(var i=!1,c=a.child;c;){if(c===n){i=!0,n=a,r=o;break}if(c===r){i=!0,r=a,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,r=a;break}if(c===r){i=!0,r=o,n=a;break}c=c.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==r)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?t:e}(t)))return null;for(var e=t;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===t)break;for(;!e.sibling;){if(!e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}function re(t,e){if(null==e)throw Error(s(30));return null==t?e:Array.isArray(t)?Array.isArray(e)?(t.push.apply(t,e),t):(t.push(e),t):Array.isArray(e)?[t].concat(e):[t,e]}function ae(t,e,n){Array.isArray(t)?t.forEach(e,n):t&&e.call(n,t)}var oe=null;function se(t){if(t){var e=t._dispatchListeners,n=t._dispatchInstances;if(Array.isArray(e))for(var r=0;r<e.length&&!t.isPropagationStopped();r++)g(t,e[r],n[r]);else e&&g(t,e,n);t._dispatchListeners=null,t._dispatchInstances=null,t.isPersistent()||t.constructor.release(t)}}function ie(t){if(null!==t&&(oe=re(oe,t)),t=oe,oe=null,t){if(ae(t,se),oe)throw Error(s(95));if(l)throw t=d,l=!1,d=null,t}}function ce(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}function ue(t){if(!I)return!1;var e=(t="on"+t)in document;return e||((e=document.createElement("div")).setAttribute(t,"return;"),e="function"===typeof e[t]),e}var le=[];function de(t){t.topLevelType=null,t.nativeEvent=null,t.targetInst=null,t.ancestors.length=0,10>le.length&&le.push(t)}function pe(t,e,n,r){if(le.length){var a=le.pop();return a.topLevelType=t,a.eventSystemFlags=r,a.nativeEvent=e,a.targetInst=n,a}return{topLevelType:t,eventSystemFlags:r,nativeEvent:e,targetInst:n,ancestors:[]}}function he(t){var e=t.targetInst,n=e;do{if(!n){t.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(e=n.tag)&&6!==e||t.ancestors.push(n),n=In(r)}while(n);for(n=0;n<t.ancestors.length;n++){e=t.ancestors[n];var a=ce(t.nativeEvent);r=t.topLevelType;var o=t.nativeEvent,s=t.eventSystemFlags;0===n&&(s|=64);for(var i=null,c=0;c<w.length;c++){var u=w[c];u&&(u=u.extractEvents(r,e,o,a,s))&&(i=re(i,u))}ie(i)}}function fe(t,e,n){if(!n.has(t)){switch(t){case"scroll":Xe(e,"scroll",!0);break;case"focus":case"blur":Xe(e,"focus",!0),Xe(e,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ue(t)&&Xe(e,t,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Qt.indexOf(t)&&Ke(t,e)}n.set(t,null)}}var me,be,ge,ye=!1,ve=[],Oe=null,xe=null,we=null,ke=new Map,je=new Map,Ne=[],Se="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ie="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Te(t,e,n,r,a){return{blockedOn:t,topLevelType:e,eventSystemFlags:32|n,nativeEvent:a,container:r}}function Ee(t,e){switch(t){case"focus":case"blur":Oe=null;break;case"dragenter":case"dragleave":xe=null;break;case"mouseover":case"mouseout":we=null;break;case"pointerover":case"pointerout":ke.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":je.delete(e.pointerId)}}function Ce(t,e,n,r,a,o){return null===t||t.nativeEvent!==o?(t=Te(e,n,r,a,o),null!==e&&(null!==(e=Tn(e))&&be(e)),t):(t.eventSystemFlags|=r,t)}function Ae(t){var e=In(t.target);if(null!==e){var n=$t(e);if(null!==n)if(13===(e=n.tag)){if(null!==(e=te(n)))return t.blockedOn=e,void o.unstable_runWithPriority(t.priority,(function(){ge(n)}))}else if(3===e&&n.stateNode.hydrate)return void(t.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}t.blockedOn=null}function _e(t){if(null!==t.blockedOn)return!1;var e=Ze(t.topLevelType,t.eventSystemFlags,t.container,t.nativeEvent);if(null!==e){var n=Tn(e);return null!==n&&be(n),t.blockedOn=e,!1}return!0}function Re(t,e,n){_e(t)&&n.delete(e)}function De(){for(ye=!1;0<ve.length;){var t=ve[0];if(null!==t.blockedOn){null!==(t=Tn(t.blockedOn))&&me(t);break}var e=Ze(t.topLevelType,t.eventSystemFlags,t.container,t.nativeEvent);null!==e?t.blockedOn=e:ve.shift()}null!==Oe&&_e(Oe)&&(Oe=null),null!==xe&&_e(xe)&&(xe=null),null!==we&&_e(we)&&(we=null),ke.forEach(Re),je.forEach(Re)}function Fe(t,e){t.blockedOn===e&&(t.blockedOn=null,ye||(ye=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,De)))}function Me(t){function e(e){return Fe(e,t)}if(0<ve.length){Fe(ve[0],t);for(var n=1;n<ve.length;n++){var r=ve[n];r.blockedOn===t&&(r.blockedOn=null)}}for(null!==Oe&&Fe(Oe,t),null!==xe&&Fe(xe,t),null!==we&&Fe(we,t),ke.forEach(e),je.forEach(e),n=0;n<Ne.length;n++)(r=Ne[n]).blockedOn===t&&(r.blockedOn=null);for(;0<Ne.length&&null===(n=Ne[0]).blockedOn;)Ae(n),null===n.blockedOn&&Ne.shift()}var Le={},ze=new Map,Pe=new Map,Be=["abort","abort",qt,"animationEnd",Kt,"animationIteration",Xt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Yt,"transitionEnd","waiting","waiting"];function Ve(t,e){for(var n=0;n<t.length;n+=2){var r=t[n],a=t[n+1],o="on"+(a[0].toUpperCase()+a.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[r],eventPriority:e},Pe.set(r,e),ze.set(r,o),Le[a]=o}}Ve("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ve("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ve(Be,2);for(var We="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ue=0;Ue<We.length;Ue++)Pe.set(We[Ue],0);var Ge=o.unstable_UserBlockingPriority,He=o.unstable_runWithPriority,qe=!0;function Ke(t,e){Xe(e,t,!1)}function Xe(t,e,n){var r=Pe.get(e);switch(void 0===r?2:r){case 0:r=Ye.bind(null,e,1,t);break;case 1:r=Qe.bind(null,e,1,t);break;default:r=Je.bind(null,e,1,t)}n?t.addEventListener(e,r,!0):t.addEventListener(e,r,!1)}function Ye(t,e,n,r){z||M();var a=Je,o=z;z=!0;try{F(a,t,e,n,r)}finally{(z=o)||B()}}function Qe(t,e,n,r){He(Ge,Je.bind(null,t,e,n,r))}function Je(t,e,n,r){if(qe)if(0<ve.length&&-1<Se.indexOf(t))t=Te(null,t,e,n,r),ve.push(t);else{var a=Ze(t,e,n,r);if(null===a)Ee(t,r);else if(-1<Se.indexOf(t))t=Te(a,t,e,n,r),ve.push(t);else if(!function(t,e,n,r,a){switch(e){case"focus":return Oe=Ce(Oe,t,e,n,r,a),!0;case"dragenter":return xe=Ce(xe,t,e,n,r,a),!0;case"mouseover":return we=Ce(we,t,e,n,r,a),!0;case"pointerover":var o=a.pointerId;return ke.set(o,Ce(ke.get(o)||null,t,e,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,je.set(o,Ce(je.get(o)||null,t,e,n,r,a)),!0}return!1}(a,t,e,n,r)){Ee(t,r),t=pe(t,r,null,e);try{V(he,t)}finally{de(t)}}}}function Ze(t,e,n,r){if(null!==(n=In(n=ce(r)))){var a=$t(n);if(null===a)n=null;else{var o=a.tag;if(13===o){if(null!==(n=te(a)))return n;n=null}else if(3===o){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;n=null}else a!==n&&(n=null)}}t=pe(t,r,n,e);try{V(he,t)}finally{de(t)}return null}var $e={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},tn=["Webkit","ms","Moz","O"];function en(t,e,n){return null==e||"boolean"===typeof e||""===e?"":n||"number"!==typeof e||0===e||$e.hasOwnProperty(t)&&$e[t]?(""+e).trim():e+"px"}function nn(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=en(n,e[n],r);"float"===n&&(n="cssFloat"),r?t.setProperty(n,a):t[n]=a}}Object.keys($e).forEach((function(t){tn.forEach((function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),$e[e]=$e[t]}))}));var rn=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(t,e){if(e){if(rn[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(s(137,t,""));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(s(60));if("object"!==typeof e.dangerouslySetInnerHTML||!("__html"in e.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=e.style&&"object"!==typeof e.style)throw Error(s(62,""))}}function on(t,e){if(-1===t.indexOf("-"))return"string"===typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var sn=Dt;function cn(t,e){var n=Zt(t=9===t.nodeType||11===t.nodeType?t:t.ownerDocument);e=N[e];for(var r=0;r<e.length;r++)fe(e[r],t,n)}function un(){}function ln(t){if("undefined"===typeof(t=t||("undefined"!==typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function dn(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function pn(t,e){var n,r=dn(t);for(t=0;r;){if(3===r.nodeType){if(n=t+r.textContent.length,t<=e&&n>=e)return{node:r,offset:e-t};t=n}t:{for(;r;){if(r.nextSibling){r=r.nextSibling;break t}r=r.parentNode}r=void 0}r=dn(r)}}function hn(){for(var t=window,e=ln();e instanceof t.HTMLIFrameElement;){try{var n="string"===typeof e.contentWindow.location.href}catch(r){n=!1}if(!n)break;e=ln((t=e.contentWindow).document)}return e}function fn(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}var mn=null,bn=null;function gn(t,e){switch(t){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function yn(t,e){return"textarea"===t||"option"===t||"noscript"===t||"string"===typeof e.children||"number"===typeof e.children||"object"===typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var vn="function"===typeof setTimeout?setTimeout:void 0,On="function"===typeof clearTimeout?clearTimeout:void 0;function xn(t){for(;null!=t;t=t.nextSibling){var e=t.nodeType;if(1===e||3===e)break}return t}function wn(t){t=t.previousSibling;for(var e=0;t;){if(8===t.nodeType){var n=t.data;if("$"===n||"$!"===n||"$?"===n){if(0===e)return t;e--}else"/$"===n&&e++}t=t.previousSibling}return null}var kn=Math.random().toString(36).slice(2),jn="__reactInternalInstance$"+kn,Nn="__reactEventHandlers$"+kn,Sn="__reactContainere$"+kn;function In(t){var e=t[jn];if(e)return e;for(var n=t.parentNode;n;){if(e=n[Sn]||n[jn]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(t=wn(t);null!==t;){if(n=t[jn])return n;t=wn(t)}return e}n=(t=n).parentNode}return null}function Tn(t){return!(t=t[jn]||t[Sn])||5!==t.tag&&6!==t.tag&&13!==t.tag&&3!==t.tag?null:t}function En(t){if(5===t.tag||6===t.tag)return t.stateNode;throw Error(s(33))}function Cn(t){return t[Nn]||null}function An(t){do{t=t.return}while(t&&5!==t.tag);return t||null}function _n(t,e){var n=t.stateNode;if(!n)return null;var r=f(n);if(!r)return null;n=r[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!r;break t;default:t=!1}if(t)return null;if(n&&"function"!==typeof n)throw Error(s(231,e,typeof n));return n}function Rn(t,e,n){(e=_n(t,n.dispatchConfig.phasedRegistrationNames[e]))&&(n._dispatchListeners=re(n._dispatchListeners,e),n._dispatchInstances=re(n._dispatchInstances,t))}function Dn(t){if(t&&t.dispatchConfig.phasedRegistrationNames){for(var e=t._targetInst,n=[];e;)n.push(e),e=An(e);for(e=n.length;0<e--;)Rn(n[e],"captured",t);for(e=0;e<n.length;e++)Rn(n[e],"bubbled",t)}}function Fn(t,e,n){t&&n&&n.dispatchConfig.registrationName&&(e=_n(t,n.dispatchConfig.registrationName))&&(n._dispatchListeners=re(n._dispatchListeners,e),n._dispatchInstances=re(n._dispatchInstances,t))}function Mn(t){t&&t.dispatchConfig.registrationName&&Fn(t._targetInst,null,t)}function Ln(t){ae(t,Dn)}var zn=null,Pn=null,Bn=null;function Vn(){if(Bn)return Bn;var t,e,n=Pn,r=n.length,a="value"in zn?zn.value:zn.textContent,o=a.length;for(t=0;t<r&&n[t]===a[t];t++);var s=r-t;for(e=1;e<=s&&n[r-e]===a[o-e];e++);return Bn=a.slice(t,1<e?1-e:void 0)}function Wn(){return!0}function Un(){return!1}function Gn(t,e,n,r){for(var a in this.dispatchConfig=t,this._targetInst=e,this.nativeEvent=n,t=this.constructor.Interface)t.hasOwnProperty(a)&&((e=t[a])?this[a]=e(n):"target"===a?this.target=r:this[a]=n[a]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Wn:Un,this.isPropagationStopped=Un,this}function Hn(t,e,n,r){if(this.eventPool.length){var a=this.eventPool.pop();return this.call(a,t,e,n,r),a}return new this(t,e,n,r)}function qn(t){if(!(t instanceof this))throw Error(s(279));t.destructor(),10>this.eventPool.length&&this.eventPool.push(t)}function Kn(t){t.eventPool=[],t.getPooled=Hn,t.release=qn}a(Gn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!==typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=Wn)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!==typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=Wn)},persist:function(){this.isPersistent=Wn},isPersistent:Un,destructor:function(){var t,e=this.constructor.Interface;for(t in e)this[t]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Un,this._dispatchInstances=this._dispatchListeners=null}}),Gn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Gn.extend=function(t){function e(){}function n(){return r.apply(this,arguments)}var r=this;e.prototype=r.prototype;var o=new e;return a(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=a({},r.Interface,t),n.extend=r.extend,Kn(n),n},Kn(Gn);var Xn=Gn.extend({data:null}),Yn=Gn.extend({data:null}),Qn=[9,13,27,32],Jn=I&&"CompositionEvent"in window,Zn=null;I&&"documentMode"in document&&(Zn=document.documentMode);var $n=I&&"TextEvent"in window&&!Zn,tr=I&&(!Jn||Zn&&8<Zn&&11>=Zn),er=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ar(t,e){switch(t){case"keyup":return-1!==Qn.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function or(t){return"object"===typeof(t=t.detail)&&"data"in t?t.data:null}var sr=!1;var ir={eventTypes:nr,extractEvents:function(t,e,n,r){var a;if(Jn)t:{switch(t){case"compositionstart":var o=nr.compositionStart;break t;case"compositionend":o=nr.compositionEnd;break t;case"compositionupdate":o=nr.compositionUpdate;break t}o=void 0}else sr?ar(t,n)&&(o=nr.compositionEnd):"keydown"===t&&229===n.keyCode&&(o=nr.compositionStart);return o?(tr&&"ko"!==n.locale&&(sr||o!==nr.compositionStart?o===nr.compositionEnd&&sr&&(a=Vn()):(Pn="value"in(zn=r)?zn.value:zn.textContent,sr=!0)),o=Xn.getPooled(o,e,n,r),a?o.data=a:null!==(a=or(n))&&(o.data=a),Ln(o),a=o):a=null,(t=$n?function(t,e){switch(t){case"compositionend":return or(e);case"keypress":return 32!==e.which?null:(rr=!0,er);case"textInput":return(t=e.data)===er&&rr?null:t;default:return null}}(t,n):function(t,e){if(sr)return"compositionend"===t||!Jn&&ar(t,e)?(t=Vn(),Bn=Pn=zn=null,sr=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return tr&&"ko"!==e.locale?null:e.data;default:return null}}(t,n))?((e=Yn.getPooled(nr.beforeInput,e,n,r)).data=t,Ln(e)):e=null,null===a?e:null===e?a:[a,e]}},cr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ur(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!cr[t.type]:"textarea"===e}var lr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function dr(t,e,n){return(t=Gn.getPooled(lr.change,t,e,n)).type="change",_(n),Ln(t),t}var pr=null,hr=null;function fr(t){ie(t)}function mr(t){if(xt(En(t)))return t}function br(t,e){if("change"===t)return e}var gr=!1;function yr(){pr&&(pr.detachEvent("onpropertychange",vr),hr=pr=null)}function vr(t){if("value"===t.propertyName&&mr(hr))if(t=dr(hr,t,ce(t)),z)ie(t);else{z=!0;try{D(fr,t)}finally{z=!1,B()}}}function Or(t,e,n){"focus"===t?(yr(),hr=n,(pr=e).attachEvent("onpropertychange",vr)):"blur"===t&&yr()}function xr(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return mr(hr)}function wr(t,e){if("click"===t)return mr(e)}function kr(t,e){if("input"===t||"change"===t)return mr(e)}I&&(gr=ue("input")&&(!document.documentMode||9<document.documentMode));var jr={eventTypes:lr,_isInputEventSupported:gr,extractEvents:function(t,e,n,r){var a=e?En(e):window,o=a.nodeName&&a.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===a.type)var s=br;else if(ur(a))if(gr)s=kr;else{s=xr;var i=Or}else(o=a.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(s=wr);if(s&&(s=s(t,e)))return dr(s,n,r);i&&i(t,a,e),"blur"===t&&(t=a._wrapperState)&&t.controlled&&"number"===a.type&&It(a,"number",a.value)}},Nr=Gn.extend({view:null,detail:null}),Sr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ir(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=Sr[t])&&!!e[t]}function Tr(){return Ir}var Er=0,Cr=0,Ar=!1,_r=!1,Rr=Nr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tr,button:null,buttons:null,relatedTarget:function(t){return t.relatedTarget||(t.fromElement===t.srcElement?t.toElement:t.fromElement)},movementX:function(t){if("movementX"in t)return t.movementX;var e=Er;return Er=t.screenX,Ar?"mousemove"===t.type?t.screenX-e:0:(Ar=!0,0)},movementY:function(t){if("movementY"in t)return t.movementY;var e=Cr;return Cr=t.screenY,_r?"mousemove"===t.type?t.screenY-e:0:(_r=!0,0)}}),Dr=Rr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Fr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Mr={eventTypes:Fr,extractEvents:function(t,e,n,r,a){var o="mouseover"===t||"pointerover"===t,s="mouseout"===t||"pointerout"===t;if(o&&0===(32&a)&&(n.relatedTarget||n.fromElement)||!s&&!o)return null;(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,s)?(s=e,null!==(e=(e=n.relatedTarget||n.toElement)?In(e):null)&&(e!==$t(e)||5!==e.tag&&6!==e.tag)&&(e=null)):s=null;if(s===e)return null;if("mouseout"===t||"mouseover"===t)var i=Rr,c=Fr.mouseLeave,u=Fr.mouseEnter,l="mouse";else"pointerout"!==t&&"pointerover"!==t||(i=Dr,c=Fr.pointerLeave,u=Fr.pointerEnter,l="pointer");if(t=null==s?o:En(s),o=null==e?o:En(e),(c=i.getPooled(c,s,n,r)).type=l+"leave",c.target=t,c.relatedTarget=o,(n=i.getPooled(u,e,n,r)).type=l+"enter",n.target=o,n.relatedTarget=t,l=e,(r=s)&&l)t:{for(u=l,s=0,t=i=r;t;t=An(t))s++;for(t=0,e=u;e;e=An(e))t++;for(;0<s-t;)i=An(i),s--;for(;0<t-s;)u=An(u),t--;for(;s--;){if(i===u||i===u.alternate)break t;i=An(i),u=An(u)}i=null}else i=null;for(u=i,i=[];r&&r!==u&&(null===(s=r.alternate)||s!==u);)i.push(r),r=An(r);for(r=[];l&&l!==u&&(null===(s=l.alternate)||s!==u);)r.push(l),l=An(l);for(l=0;l<i.length;l++)Fn(i[l],"bubbled",c);for(l=r.length;0<l--;)Fn(r[l],"captured",n);return 0===(64&a)?[c]:[c,n]}};var Lr="function"===typeof Object.is?Object.is:function(t,e){return t===e&&(0!==t||1/t===1/e)||t!==t&&e!==e},zr=Object.prototype.hasOwnProperty;function Pr(t,e){if(Lr(t,e))return!0;if("object"!==typeof t||null===t||"object"!==typeof e||null===e)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!zr.call(e,n[r])||!Lr(t[n[r]],e[n[r]]))return!1;return!0}var Br=I&&"documentMode"in document&&11>=document.documentMode,Vr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wr=null,Ur=null,Gr=null,Hr=!1;function qr(t,e){var n=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;return Hr||null==Wr||Wr!==ln(n)?null:("selectionStart"in(n=Wr)&&fn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Gr&&Pr(Gr,n)?null:(Gr=n,(t=Gn.getPooled(Vr.select,Ur,t,e)).type="select",t.target=Wr,Ln(t),t))}var Kr={eventTypes:Vr,extractEvents:function(t,e,n,r,a,o){if(!(o=!(a=o||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){t:{a=Zt(a),o=N.onSelect;for(var s=0;s<o.length;s++)if(!a.has(o[s])){a=!1;break t}a=!0}o=!a}if(o)return null;switch(a=e?En(e):window,t){case"focus":(ur(a)||"true"===a.contentEditable)&&(Wr=a,Ur=e,Gr=null);break;case"blur":Gr=Ur=Wr=null;break;case"mousedown":Hr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hr=!1,qr(n,r);case"selectionchange":if(Br)break;case"keydown":case"keyup":return qr(n,r)}return null}},Xr=Gn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Yr=Gn.extend({clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),Qr=Nr.extend({relatedTarget:null});function Jr(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}var Zr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},$r={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ta=Nr.extend({key:function(t){if(t.key){var e=Zr[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=Jr(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?$r[t.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tr,charCode:function(t){return"keypress"===t.type?Jr(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?Jr(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),ea=Rr.extend({dataTransfer:null}),na=Nr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tr}),ra=Gn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),aa=Rr.extend({deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:null,deltaMode:null}),oa={eventTypes:Le,extractEvents:function(t,e,n,r){var a=ze.get(t);if(!a)return null;switch(t){case"keypress":if(0===Jr(n))return null;case"keydown":case"keyup":t=ta;break;case"blur":case"focus":t=Qr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":t=Rr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":t=ea;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":t=na;break;case qt:case Kt:case Xt:t=Xr;break;case Yt:t=ra;break;case"scroll":t=Nr;break;case"wheel":t=aa;break;case"copy":case"cut":case"paste":t=Yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":t=Dr;break;default:t=Gn}return Ln(e=t.getPooled(a,e,n,r)),e}};if(y)throw Error(s(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),O(),f=Cn,m=Tn,b=En,S({SimpleEventPlugin:oa,EnterLeaveEventPlugin:Mr,ChangeEventPlugin:jr,SelectEventPlugin:Kr,BeforeInputEventPlugin:ir});var sa=[],ia=-1;function ca(t){0>ia||(t.current=sa[ia],sa[ia]=null,ia--)}function ua(t,e){ia++,sa[ia]=t.current,t.current=e}var la={},da={current:la},pa={current:!1},ha=la;function fa(t,e){var n=t.type.contextTypes;if(!n)return la;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=e[a];return r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=o),o}function ma(t){return null!==(t=t.childContextTypes)&&void 0!==t}function ba(){ca(pa),ca(da)}function ga(t,e,n){if(da.current!==la)throw Error(s(168));ua(da,e),ua(pa,n)}function ya(t,e,n){var r=t.stateNode;if(t=e.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in t))throw Error(s(108,bt(e)||"Unknown",o));return a({},n,{},r)}function va(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||la,ha=da.current,ua(da,t),ua(pa,pa.current),!0}function Oa(t,e,n){var r=t.stateNode;if(!r)throw Error(s(169));n?(t=ya(t,e,ha),r.__reactInternalMemoizedMergedChildContext=t,ca(pa),ca(da),ua(da,t)):ca(pa),ua(pa,n)}var xa=o.unstable_runWithPriority,wa=o.unstable_scheduleCallback,ka=o.unstable_cancelCallback,ja=o.unstable_requestPaint,Na=o.unstable_now,Sa=o.unstable_getCurrentPriorityLevel,Ia=o.unstable_ImmediatePriority,Ta=o.unstable_UserBlockingPriority,Ea=o.unstable_NormalPriority,Ca=o.unstable_LowPriority,Aa=o.unstable_IdlePriority,_a={},Ra=o.unstable_shouldYield,Da=void 0!==ja?ja:function(){},Fa=null,Ma=null,La=!1,za=Na(),Pa=1e4>za?Na:function(){return Na()-za};function Ba(){switch(Sa()){case Ia:return 99;case Ta:return 98;case Ea:return 97;case Ca:return 96;case Aa:return 95;default:throw Error(s(332))}}function Va(t){switch(t){case 99:return Ia;case 98:return Ta;case 97:return Ea;case 96:return Ca;case 95:return Aa;default:throw Error(s(332))}}function Wa(t,e){return t=Va(t),xa(t,e)}function Ua(t,e,n){return t=Va(t),wa(t,e,n)}function Ga(t){return null===Fa?(Fa=[t],Ma=wa(Ia,qa)):Fa.push(t),_a}function Ha(){if(null!==Ma){var t=Ma;Ma=null,ka(t)}qa()}function qa(){if(!La&&null!==Fa){La=!0;var t=0;try{var e=Fa;Wa(99,(function(){for(;t<e.length;t++){var n=e[t];do{n=n(!0)}while(null!==n)}})),Fa=null}catch(n){throw null!==Fa&&(Fa=Fa.slice(t+1)),wa(Ia,Ha),n}finally{La=!1}}}function Ka(t,e,n){return 1073741821-(1+((1073741821-t+e/10)/(n/=10)|0))*n}function Xa(t,e){if(t&&t.defaultProps)for(var n in e=a({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}var Ya={current:null},Qa=null,Ja=null,Za=null;function $a(){Za=Ja=Qa=null}function to(t){var e=Ya.current;ca(Ya),t.type._context._currentValue=e}function eo(t,e){for(;null!==t;){var n=t.alternate;if(t.childExpirationTime<e)t.childExpirationTime=e,null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e);else{if(!(null!==n&&n.childExpirationTime<e))break;n.childExpirationTime=e}t=t.return}}function no(t,e){Qa=t,Za=Ja=null,null!==(t=t.dependencies)&&null!==t.firstContext&&(t.expirationTime>=e&&(Cs=!0),t.firstContext=null)}function ro(t,e){if(Za!==t&&!1!==e&&0!==e)if("number"===typeof e&&1073741823!==e||(Za=t,e=1073741823),e={context:t,observedBits:e,next:null},null===Ja){if(null===Qa)throw Error(s(308));Ja=e,Qa.dependencies={expirationTime:0,firstContext:e,responders:null}}else Ja=Ja.next=e;return t._currentValue}var ao=!1;function oo(t){t.updateQueue={baseState:t.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function so(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,baseQueue:t.baseQueue,shared:t.shared,effects:t.effects})}function io(t,e){return(t={expirationTime:t,suspenseConfig:e,tag:0,payload:null,callback:null,next:null}).next=t}function co(t,e){if(null!==(t=t.updateQueue)){var n=(t=t.shared).pending;null===n?e.next=e:(e.next=n.next,n.next=e),t.pending=e}}function uo(t,e){var n=t.alternate;null!==n&&so(n,t),null===(n=(t=t.updateQueue).baseQueue)?(t.baseQueue=e.next=e,e.next=e):(e.next=n.next,n.next=e)}function lo(t,e,n,r){var o=t.updateQueue;ao=!1;var s=o.baseQueue,i=o.shared.pending;if(null!==i){if(null!==s){var c=s.next;s.next=i.next,i.next=c}s=i,o.shared.pending=null,null!==(c=t.alternate)&&(null!==(c=c.updateQueue)&&(c.baseQueue=i))}if(null!==s){c=s.next;var u=o.baseState,l=0,d=null,p=null,h=null;if(null!==c)for(var f=c;;){if((i=f.expirationTime)<r){var m={expirationTime:f.expirationTime,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null};null===h?(p=h=m,d=u):h=h.next=m,i>l&&(l=i)}else{null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null}),oc(i,f.suspenseConfig);t:{var b=t,g=f;switch(i=e,m=n,g.tag){case 1:if("function"===typeof(b=g.payload)){u=b.call(m,u,i);break t}u=b;break t;case 3:b.effectTag=-4097&b.effectTag|64;case 0:if(null===(i="function"===typeof(b=g.payload)?b.call(m,u,i):b)||void 0===i)break t;u=a({},u,i);break t;case 2:ao=!0}}null!==f.callback&&(t.effectTag|=32,null===(i=o.effects)?o.effects=[f]:i.push(f))}if(null===(f=f.next)||f===c){if(null===(i=o.shared.pending))break;f=s.next=i.next,i.next=c,o.baseQueue=s=i,o.shared.pending=null}}null===h?d=u:h.next=p,o.baseState=d,o.baseQueue=h,sc(l),t.expirationTime=l,t.memoizedState=u}}function po(t,e,n){if(t=e.effects,e.effects=null,null!==t)for(e=0;e<t.length;e++){var r=t[e],a=r.callback;if(null!==a){if(r.callback=null,r=a,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var ho=Q.ReactCurrentBatchConfig,fo=(new r.Component).refs;function mo(t,e,n,r){n=null===(n=n(r,e=t.memoizedState))||void 0===n?e:a({},e,n),t.memoizedState=n,0===t.expirationTime&&(t.updateQueue.baseState=n)}var bo={isMounted:function(t){return!!(t=t._reactInternalFiber)&&$t(t)===t},enqueueSetState:function(t,e,n){t=t._reactInternalFiber;var r=qi(),a=ho.suspense;(a=io(r=Ki(r,t,a),a)).payload=e,void 0!==n&&null!==n&&(a.callback=n),co(t,a),Xi(t,r)},enqueueReplaceState:function(t,e,n){t=t._reactInternalFiber;var r=qi(),a=ho.suspense;(a=io(r=Ki(r,t,a),a)).tag=1,a.payload=e,void 0!==n&&null!==n&&(a.callback=n),co(t,a),Xi(t,r)},enqueueForceUpdate:function(t,e){t=t._reactInternalFiber;var n=qi(),r=ho.suspense;(r=io(n=Ki(n,t,r),r)).tag=2,void 0!==e&&null!==e&&(r.callback=e),co(t,r),Xi(t,n)}};function go(t,e,n,r,a,o,s){return"function"===typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(r,o,s):!e.prototype||!e.prototype.isPureReactComponent||(!Pr(n,r)||!Pr(a,o))}function yo(t,e,n){var r=!1,a=la,o=e.contextType;return"object"===typeof o&&null!==o?o=ro(o):(a=ma(e)?ha:da.current,o=(r=null!==(r=e.contextTypes)&&void 0!==r)?fa(t,a):la),e=new e(n,o),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=bo,t.stateNode=e,e._reactInternalFiber=t,r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,t.__reactInternalMemoizedMaskedChildContext=o),e}function vo(t,e,n,r){t=e.state,"function"===typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,r),"function"===typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&bo.enqueueReplaceState(e,e.state,null)}function Oo(t,e,n,r){var a=t.stateNode;a.props=n,a.state=t.memoizedState,a.refs=fo,oo(t);var o=e.contextType;"object"===typeof o&&null!==o?a.context=ro(o):(o=ma(e)?ha:da.current,a.context=fa(t,o)),lo(t,n,a,r),a.state=t.memoizedState,"function"===typeof(o=e.getDerivedStateFromProps)&&(mo(t,e,o,n),a.state=t.memoizedState),"function"===typeof e.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(e=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),e!==a.state&&bo.enqueueReplaceState(a,a.state,null),lo(t,n,a,r),a.state=t.memoizedState),"function"===typeof a.componentDidMount&&(t.effectTag|=4)}var xo=Array.isArray;function wo(t,e,n){if(null!==(t=n.ref)&&"function"!==typeof t&&"object"!==typeof t){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var r=n.stateNode}if(!r)throw Error(s(147,t));var a=""+t;return null!==e&&null!==e.ref&&"function"===typeof e.ref&&e.ref._stringRef===a?e.ref:((e=function(t){var e=r.refs;e===fo&&(e=r.refs={}),null===t?delete e[a]:e[a]=t})._stringRef=a,e)}if("string"!==typeof t)throw Error(s(284));if(!n._owner)throw Error(s(290,t))}return t}function ko(t,e){if("textarea"!==t.type)throw Error(s(31,"[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e,""))}function jo(t){function e(e,n){if(t){var r=e.lastEffect;null!==r?(r.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!t)return null;for(;null!==r;)e(n,r),r=r.sibling;return null}function r(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function a(t,e){return(t=Sc(t,e)).index=0,t.sibling=null,t}function o(e,n,r){return e.index=r,t?null!==(r=e.alternate)?(r=r.index)<n?(e.effectTag=2,n):r:(e.effectTag=2,n):n}function i(e){return t&&null===e.alternate&&(e.effectTag=2),e}function c(t,e,n,r){return null===e||6!==e.tag?((e=Ec(n,t.mode,r)).return=t,e):((e=a(e,n)).return=t,e)}function u(t,e,n,r){return null!==e&&e.elementType===n.type?((r=a(e,n.props)).ref=wo(t,e,n),r.return=t,r):((r=Ic(n.type,n.key,n.props,null,t.mode,r)).ref=wo(t,e,n),r.return=t,r)}function l(t,e,n,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=Cc(n,t.mode,r)).return=t,e):((e=a(e,n.children||[])).return=t,e)}function d(t,e,n,r,o){return null===e||7!==e.tag?((e=Tc(n,t.mode,r,o)).return=t,e):((e=a(e,n)).return=t,e)}function p(t,e,n){if("string"===typeof e||"number"===typeof e)return(e=Ec(""+e,t.mode,n)).return=t,e;if("object"===typeof e&&null!==e){switch(e.$$typeof){case tt:return(n=Ic(e.type,e.key,e.props,null,t.mode,n)).ref=wo(t,null,e),n.return=t,n;case et:return(e=Cc(e,t.mode,n)).return=t,e}if(xo(e)||mt(e))return(e=Tc(e,t.mode,n,null)).return=t,e;ko(t,e)}return null}function h(t,e,n,r){var a=null!==e?e.key:null;if("string"===typeof n||"number"===typeof n)return null!==a?null:c(t,e,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case tt:return n.key===a?n.type===nt?d(t,e,n.props.children,r,a):u(t,e,n,r):null;case et:return n.key===a?l(t,e,n,r):null}if(xo(n)||mt(n))return null!==a?null:d(t,e,n,r,null);ko(t,n)}return null}function f(t,e,n,r,a){if("string"===typeof r||"number"===typeof r)return c(e,t=t.get(n)||null,""+r,a);if("object"===typeof r&&null!==r){switch(r.$$typeof){case tt:return t=t.get(null===r.key?n:r.key)||null,r.type===nt?d(e,t,r.props.children,a,r.key):u(e,t,r,a);case et:return l(e,t=t.get(null===r.key?n:r.key)||null,r,a)}if(xo(r)||mt(r))return d(e,t=t.get(n)||null,r,a,null);ko(e,r)}return null}function m(a,s,i,c){for(var u=null,l=null,d=s,m=s=0,b=null;null!==d&&m<i.length;m++){d.index>m?(b=d,d=null):b=d.sibling;var g=h(a,d,i[m],c);if(null===g){null===d&&(d=b);break}t&&d&&null===g.alternate&&e(a,d),s=o(g,s,m),null===l?u=g:l.sibling=g,l=g,d=b}if(m===i.length)return n(a,d),u;if(null===d){for(;m<i.length;m++)null!==(d=p(a,i[m],c))&&(s=o(d,s,m),null===l?u=d:l.sibling=d,l=d);return u}for(d=r(a,d);m<i.length;m++)null!==(b=f(d,a,m,i[m],c))&&(t&&null!==b.alternate&&d.delete(null===b.key?m:b.key),s=o(b,s,m),null===l?u=b:l.sibling=b,l=b);return t&&d.forEach((function(t){return e(a,t)})),u}function b(a,i,c,u){var l=mt(c);if("function"!==typeof l)throw Error(s(150));if(null==(c=l.call(c)))throw Error(s(151));for(var d=l=null,m=i,b=i=0,g=null,y=c.next();null!==m&&!y.done;b++,y=c.next()){m.index>b?(g=m,m=null):g=m.sibling;var v=h(a,m,y.value,u);if(null===v){null===m&&(m=g);break}t&&m&&null===v.alternate&&e(a,m),i=o(v,i,b),null===d?l=v:d.sibling=v,d=v,m=g}if(y.done)return n(a,m),l;if(null===m){for(;!y.done;b++,y=c.next())null!==(y=p(a,y.value,u))&&(i=o(y,i,b),null===d?l=y:d.sibling=y,d=y);return l}for(m=r(a,m);!y.done;b++,y=c.next())null!==(y=f(m,a,b,y.value,u))&&(t&&null!==y.alternate&&m.delete(null===y.key?b:y.key),i=o(y,i,b),null===d?l=y:d.sibling=y,d=y);return t&&m.forEach((function(t){return e(a,t)})),l}return function(t,r,o,c){var u="object"===typeof o&&null!==o&&o.type===nt&&null===o.key;u&&(o=o.props.children);var l="object"===typeof o&&null!==o;if(l)switch(o.$$typeof){case tt:t:{for(l=o.key,u=r;null!==u;){if(u.key===l){switch(u.tag){case 7:if(o.type===nt){n(t,u.sibling),(r=a(u,o.props.children)).return=t,t=r;break t}break;default:if(u.elementType===o.type){n(t,u.sibling),(r=a(u,o.props)).ref=wo(t,u,o),r.return=t,t=r;break t}}n(t,u);break}e(t,u),u=u.sibling}o.type===nt?((r=Tc(o.props.children,t.mode,c,o.key)).return=t,t=r):((c=Ic(o.type,o.key,o.props,null,t.mode,c)).ref=wo(t,r,o),c.return=t,t=c)}return i(t);case et:t:{for(u=o.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(t,r.sibling),(r=a(r,o.children||[])).return=t,t=r;break t}n(t,r);break}e(t,r),r=r.sibling}(r=Cc(o,t.mode,c)).return=t,t=r}return i(t)}if("string"===typeof o||"number"===typeof o)return o=""+o,null!==r&&6===r.tag?(n(t,r.sibling),(r=a(r,o)).return=t,t=r):(n(t,r),(r=Ec(o,t.mode,c)).return=t,t=r),i(t);if(xo(o))return m(t,r,o,c);if(mt(o))return b(t,r,o,c);if(l&&ko(t,o),"undefined"===typeof o&&!u)switch(t.tag){case 1:case 0:throw t=t.type,Error(s(152,t.displayName||t.name||"Component"))}return n(t,r)}}var No=jo(!0),So=jo(!1),Io={},To={current:Io},Eo={current:Io},Co={current:Io};function Ao(t){if(t===Io)throw Error(s(174));return t}function _o(t,e){switch(ua(Co,e),ua(Eo,t),ua(To,Io),t=e.nodeType){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Lt(null,"");break;default:e=Lt(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}ca(To),ua(To,e)}function Ro(){ca(To),ca(Eo),ca(Co)}function Do(t){Ao(Co.current);var e=Ao(To.current),n=Lt(e,t.type);e!==n&&(ua(Eo,t),ua(To,n))}function Fo(t){Eo.current===t&&(ca(To),ca(Eo))}var Mo={current:0};function Lo(t){for(var e=t;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!==(64&e.effectTag))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}function zo(t,e){return{responder:t,props:e}}var Po=Q.ReactCurrentDispatcher,Bo=Q.ReactCurrentBatchConfig,Vo=0,Wo=null,Uo=null,Go=null,Ho=!1;function qo(){throw Error(s(321))}function Ko(t,e){if(null===e)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!Lr(t[n],e[n]))return!1;return!0}function Xo(t,e,n,r,a,o){if(Vo=o,Wo=e,e.memoizedState=null,e.updateQueue=null,e.expirationTime=0,Po.current=null===t||null===t.memoizedState?gs:ys,t=n(r,a),e.expirationTime===Vo){o=0;do{if(e.expirationTime=0,!(25>o))throw Error(s(301));o+=1,Go=Uo=null,e.updateQueue=null,Po.current=vs,t=n(r,a)}while(e.expirationTime===Vo)}if(Po.current=bs,e=null!==Uo&&null!==Uo.next,Vo=0,Go=Uo=Wo=null,Ho=!1,e)throw Error(s(300));return t}function Yo(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Go?Wo.memoizedState=Go=t:Go=Go.next=t,Go}function Qo(){if(null===Uo){var t=Wo.alternate;t=null!==t?t.memoizedState:null}else t=Uo.next;var e=null===Go?Wo.memoizedState:Go.next;if(null!==e)Go=e,Uo=t;else{if(null===t)throw Error(s(310));t={memoizedState:(Uo=t).memoizedState,baseState:Uo.baseState,baseQueue:Uo.baseQueue,queue:Uo.queue,next:null},null===Go?Wo.memoizedState=Go=t:Go=Go.next=t}return Go}function Jo(t,e){return"function"===typeof e?e(t):e}function Zo(t){var e=Qo(),n=e.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=t;var r=Uo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var c=i=o=null,u=a;do{var l=u.expirationTime;if(l<Vo){var d={expirationTime:u.expirationTime,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===c?(i=c=d,o=r):c=c.next=d,l>Wo.expirationTime&&(Wo.expirationTime=l,sc(l))}else null!==c&&(c=c.next={expirationTime:1073741823,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),oc(l,u.suspenseConfig),r=u.eagerReducer===t?u.eagerState:t(r,u.action);u=u.next}while(null!==u&&u!==a);null===c?o=r:c.next=i,Lr(r,e.memoizedState)||(Cs=!0),e.memoizedState=r,e.baseState=o,e.baseQueue=c,n.lastRenderedState=r}return[e.memoizedState,n.dispatch]}function $o(t){var e=Qo(),n=e.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=t;var r=n.dispatch,a=n.pending,o=e.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=t(o,i.action),i=i.next}while(i!==a);Lr(o,e.memoizedState)||(Cs=!0),e.memoizedState=o,null===e.baseQueue&&(e.baseState=o),n.lastRenderedState=o}return[o,r]}function ts(t){var e=Yo();return"function"===typeof t&&(t=t()),e.memoizedState=e.baseState=t,t=(t=e.queue={pending:null,dispatch:null,lastRenderedReducer:Jo,lastRenderedState:t}).dispatch=ms.bind(null,Wo,t),[e.memoizedState,t]}function es(t,e,n,r){return t={tag:t,create:e,destroy:n,deps:r,next:null},null===(e=Wo.updateQueue)?(e={lastEffect:null},Wo.updateQueue=e,e.lastEffect=t.next=t):null===(n=e.lastEffect)?e.lastEffect=t.next=t:(r=n.next,n.next=t,t.next=r,e.lastEffect=t),t}function ns(){return Qo().memoizedState}function rs(t,e,n,r){var a=Yo();Wo.effectTag|=t,a.memoizedState=es(1|e,n,void 0,void 0===r?null:r)}function as(t,e,n,r){var a=Qo();r=void 0===r?null:r;var o=void 0;if(null!==Uo){var s=Uo.memoizedState;if(o=s.destroy,null!==r&&Ko(r,s.deps))return void es(e,n,o,r)}Wo.effectTag|=t,a.memoizedState=es(1|e,n,o,r)}function os(t,e){return rs(516,4,t,e)}function ss(t,e){return as(516,4,t,e)}function is(t,e){return as(4,2,t,e)}function cs(t,e){return"function"===typeof e?(t=t(),e(t),function(){e(null)}):null!==e&&void 0!==e?(t=t(),e.current=t,function(){e.current=null}):void 0}function us(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,as(4,2,cs.bind(null,e,t),n)}function ls(){}function ds(t,e){return Yo().memoizedState=[t,void 0===e?null:e],t}function ps(t,e){var n=Qo();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&Ko(e,r[1])?r[0]:(n.memoizedState=[t,e],t)}function hs(t,e){var n=Qo();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&Ko(e,r[1])?r[0]:(t=t(),n.memoizedState=[t,e],t)}function fs(t,e,n){var r=Ba();Wa(98>r?98:r,(function(){t(!0)})),Wa(97<r?97:r,(function(){var r=Bo.suspense;Bo.suspense=void 0===e?null:e;try{t(!1),n()}finally{Bo.suspense=r}}))}function ms(t,e,n){var r=qi(),a=ho.suspense;a={expirationTime:r=Ki(r,t,a),suspenseConfig:a,action:n,eagerReducer:null,eagerState:null,next:null};var o=e.pending;if(null===o?a.next=a:(a.next=o.next,o.next=a),e.pending=a,o=t.alternate,t===Wo||null!==o&&o===Wo)Ho=!0,a.expirationTime=Vo,Wo.expirationTime=Vo;else{if(0===t.expirationTime&&(null===o||0===o.expirationTime)&&null!==(o=e.lastRenderedReducer))try{var s=e.lastRenderedState,i=o(s,n);if(a.eagerReducer=o,a.eagerState=i,Lr(i,s))return}catch(c){}Xi(t,r)}}var bs={readContext:ro,useCallback:qo,useContext:qo,useEffect:qo,useImperativeHandle:qo,useLayoutEffect:qo,useMemo:qo,useReducer:qo,useRef:qo,useState:qo,useDebugValue:qo,useResponder:qo,useDeferredValue:qo,useTransition:qo},gs={readContext:ro,useCallback:ds,useContext:ro,useEffect:os,useImperativeHandle:function(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,rs(4,2,cs.bind(null,e,t),n)},useLayoutEffect:function(t,e){return rs(4,2,t,e)},useMemo:function(t,e){var n=Yo();return e=void 0===e?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var r=Yo();return e=void 0!==n?n(e):e,r.memoizedState=r.baseState=e,t=(t=r.queue={pending:null,dispatch:null,lastRenderedReducer:t,lastRenderedState:e}).dispatch=ms.bind(null,Wo,t),[r.memoizedState,t]},useRef:function(t){return t={current:t},Yo().memoizedState=t},useState:ts,useDebugValue:ls,useResponder:zo,useDeferredValue:function(t,e){var n=ts(t),r=n[0],a=n[1];return os((function(){var n=Bo.suspense;Bo.suspense=void 0===e?null:e;try{a(t)}finally{Bo.suspense=n}}),[t,e]),r},useTransition:function(t){var e=ts(!1),n=e[0];return e=e[1],[ds(fs.bind(null,e,t),[e,t]),n]}},ys={readContext:ro,useCallback:ps,useContext:ro,useEffect:ss,useImperativeHandle:us,useLayoutEffect:is,useMemo:hs,useReducer:Zo,useRef:ns,useState:function(){return Zo(Jo)},useDebugValue:ls,useResponder:zo,useDeferredValue:function(t,e){var n=Zo(Jo),r=n[0],a=n[1];return ss((function(){var n=Bo.suspense;Bo.suspense=void 0===e?null:e;try{a(t)}finally{Bo.suspense=n}}),[t,e]),r},useTransition:function(t){var e=Zo(Jo),n=e[0];return e=e[1],[ps(fs.bind(null,e,t),[e,t]),n]}},vs={readContext:ro,useCallback:ps,useContext:ro,useEffect:ss,useImperativeHandle:us,useLayoutEffect:is,useMemo:hs,useReducer:$o,useRef:ns,useState:function(){return $o(Jo)},useDebugValue:ls,useResponder:zo,useDeferredValue:function(t,e){var n=$o(Jo),r=n[0],a=n[1];return ss((function(){var n=Bo.suspense;Bo.suspense=void 0===e?null:e;try{a(t)}finally{Bo.suspense=n}}),[t,e]),r},useTransition:function(t){var e=$o(Jo),n=e[0];return e=e[1],[ps(fs.bind(null,e,t),[e,t]),n]}},Os=null,xs=null,ws=!1;function ks(t,e){var n=jc(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=e,n.return=t,n.effectTag=8,null!==t.lastEffect?(t.lastEffect.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n}function js(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,!0);case 13:default:return!1}}function Ns(t){if(ws){var e=xs;if(e){var n=e;if(!js(t,e)){if(!(e=xn(n.nextSibling))||!js(t,e))return t.effectTag=-1025&t.effectTag|2,ws=!1,void(Os=t);ks(Os,n)}Os=t,xs=xn(e.firstChild)}else t.effectTag=-1025&t.effectTag|2,ws=!1,Os=t}}function Ss(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag&&13!==t.tag;)t=t.return;Os=t}function Is(t){if(t!==Os)return!1;if(!ws)return Ss(t),ws=!0,!1;var e=t.type;if(5!==t.tag||"head"!==e&&"body"!==e&&!yn(e,t.memoizedProps))for(e=xs;e;)ks(t,e),e=xn(e.nextSibling);if(Ss(t),13===t.tag){if(!(t=null!==(t=t.memoizedState)?t.dehydrated:null))throw Error(s(317));t:{for(t=t.nextSibling,e=0;t;){if(8===t.nodeType){var n=t.data;if("/$"===n){if(0===e){xs=xn(t.nextSibling);break t}e--}else"$"!==n&&"$!"!==n&&"$?"!==n||e++}t=t.nextSibling}xs=null}}else xs=Os?xn(t.stateNode.nextSibling):null;return!0}function Ts(){xs=Os=null,ws=!1}var Es=Q.ReactCurrentOwner,Cs=!1;function As(t,e,n,r){e.child=null===t?So(e,null,n,r):No(e,t.child,n,r)}function _s(t,e,n,r,a){n=n.render;var o=e.ref;return no(e,a),r=Xo(t,e,n,r,o,a),null===t||Cs?(e.effectTag|=1,As(t,e,r,a),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=a&&(t.expirationTime=0),Xs(t,e,a))}function Rs(t,e,n,r,a,o){if(null===t){var s=n.type;return"function"!==typeof s||Nc(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=Ic(n.type,null,r,null,e.mode,o)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=s,Ds(t,e,s,r,a,o))}return s=t.child,a<o&&(a=s.memoizedProps,(n=null!==(n=n.compare)?n:Pr)(a,r)&&t.ref===e.ref)?Xs(t,e,o):(e.effectTag|=1,(t=Sc(s,r)).ref=e.ref,t.return=e,e.child=t)}function Ds(t,e,n,r,a,o){return null!==t&&Pr(t.memoizedProps,r)&&t.ref===e.ref&&(Cs=!1,a<o)?(e.expirationTime=t.expirationTime,Xs(t,e,o)):Ms(t,e,n,r,o)}function Fs(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.effectTag|=128)}function Ms(t,e,n,r,a){var o=ma(n)?ha:da.current;return o=fa(e,o),no(e,a),n=Xo(t,e,n,r,o,a),null===t||Cs?(e.effectTag|=1,As(t,e,n,a),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=a&&(t.expirationTime=0),Xs(t,e,a))}function Ls(t,e,n,r,a){if(ma(n)){var o=!0;va(e)}else o=!1;if(no(e,a),null===e.stateNode)null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),yo(e,n,r),Oo(e,n,r,a),r=!0;else if(null===t){var s=e.stateNode,i=e.memoizedProps;s.props=i;var c=s.context,u=n.contextType;"object"===typeof u&&null!==u?u=ro(u):u=fa(e,u=ma(n)?ha:da.current);var l=n.getDerivedStateFromProps,d="function"===typeof l||"function"===typeof s.getSnapshotBeforeUpdate;d||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i!==r||c!==u)&&vo(e,s,r,u),ao=!1;var p=e.memoizedState;s.state=p,lo(e,r,s,a),c=e.memoizedState,i!==r||p!==c||pa.current||ao?("function"===typeof l&&(mo(e,n,l,r),c=e.memoizedState),(i=ao||go(e,n,i,r,p,c,u))?(d||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||("function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"===typeof s.componentDidMount&&(e.effectTag|=4)):("function"===typeof s.componentDidMount&&(e.effectTag|=4),e.memoizedProps=r,e.memoizedState=c),s.props=r,s.state=c,s.context=u,r=i):("function"===typeof s.componentDidMount&&(e.effectTag|=4),r=!1)}else s=e.stateNode,so(t,e),i=e.memoizedProps,s.props=e.type===e.elementType?i:Xa(e.type,i),c=s.context,"object"===typeof(u=n.contextType)&&null!==u?u=ro(u):u=fa(e,u=ma(n)?ha:da.current),(d="function"===typeof(l=n.getDerivedStateFromProps)||"function"===typeof s.getSnapshotBeforeUpdate)||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i!==r||c!==u)&&vo(e,s,r,u),ao=!1,c=e.memoizedState,s.state=c,lo(e,r,s,a),p=e.memoizedState,i!==r||c!==p||pa.current||ao?("function"===typeof l&&(mo(e,n,l,r),p=e.memoizedState),(l=ao||go(e,n,i,r,c,p,u))?(d||"function"!==typeof s.UNSAFE_componentWillUpdate&&"function"!==typeof s.componentWillUpdate||("function"===typeof s.componentWillUpdate&&s.componentWillUpdate(r,p,u),"function"===typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(r,p,u)),"function"===typeof s.componentDidUpdate&&(e.effectTag|=4),"function"===typeof s.getSnapshotBeforeUpdate&&(e.effectTag|=256)):("function"!==typeof s.componentDidUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!==typeof s.getSnapshotBeforeUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),e.memoizedProps=r,e.memoizedState=p),s.props=r,s.state=p,s.context=u,r=l):("function"!==typeof s.componentDidUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!==typeof s.getSnapshotBeforeUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),r=!1);return zs(t,e,n,r,o,a)}function zs(t,e,n,r,a,o){Fs(t,e);var s=0!==(64&e.effectTag);if(!r&&!s)return a&&Oa(e,n,!1),Xs(t,e,o);r=e.stateNode,Es.current=e;var i=s&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return e.effectTag|=1,null!==t&&s?(e.child=No(e,t.child,null,o),e.child=No(e,null,i,o)):As(t,e,i,o),e.memoizedState=r.state,a&&Oa(e,n,!0),e.child}function Ps(t){var e=t.stateNode;e.pendingContext?ga(0,e.pendingContext,e.pendingContext!==e.context):e.context&&ga(0,e.context,!1),_o(t,e.containerInfo)}var Bs,Vs,Ws,Us={dehydrated:null,retryTime:0};function Gs(t,e,n){var r,a=e.mode,o=e.pendingProps,s=Mo.current,i=!1;if((r=0!==(64&e.effectTag))||(r=0!==(2&s)&&(null===t||null!==t.memoizedState)),r?(i=!0,e.effectTag&=-65):null!==t&&null===t.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(s|=1),ua(Mo,1&s),null===t){if(void 0!==o.fallback&&Ns(e),i){if(i=o.fallback,(o=Tc(null,a,0,null)).return=e,0===(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,o.child=t;null!==t;)t.return=o,t=t.sibling;return(n=Tc(i,a,n,null)).return=e,o.sibling=n,e.memoizedState=Us,e.child=o,n}return a=o.children,e.memoizedState=null,e.child=So(e,null,a,n)}if(null!==t.memoizedState){if(a=(t=t.child).sibling,i){if(o=o.fallback,(n=Sc(t,t.pendingProps)).return=e,0===(2&e.mode)&&(i=null!==e.memoizedState?e.child.child:e.child)!==t.child)for(n.child=i;null!==i;)i.return=n,i=i.sibling;return(a=Sc(a,o)).return=e,n.sibling=a,n.childExpirationTime=0,e.memoizedState=Us,e.child=n,a}return n=No(e,t.child,o.children,n),e.memoizedState=null,e.child=n}if(t=t.child,i){if(i=o.fallback,(o=Tc(null,a,0,null)).return=e,o.child=t,null!==t&&(t.return=o),0===(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,o.child=t;null!==t;)t.return=o,t=t.sibling;return(n=Tc(i,a,n,null)).return=e,o.sibling=n,n.effectTag|=2,o.childExpirationTime=0,e.memoizedState=Us,e.child=o,n}return e.memoizedState=null,e.child=No(e,t,o.children,n)}function Hs(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e),eo(t.return,e)}function qs(t,e,n,r,a,o){var s=t.memoizedState;null===s?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:a,lastEffect:o}:(s.isBackwards=e,s.rendering=null,s.renderingStartTime=0,s.last=r,s.tail=n,s.tailExpiration=0,s.tailMode=a,s.lastEffect=o)}function Ks(t,e,n){var r=e.pendingProps,a=r.revealOrder,o=r.tail;if(As(t,e,r.children,n),0!==(2&(r=Mo.current)))r=1&r|2,e.effectTag|=64;else{if(null!==t&&0!==(64&t.effectTag))t:for(t=e.child;null!==t;){if(13===t.tag)null!==t.memoizedState&&Hs(t,n);else if(19===t.tag)Hs(t,n);else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break t;for(;null===t.sibling;){if(null===t.return||t.return===e)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}r&=1}if(ua(Mo,r),0===(2&e.mode))e.memoizedState=null;else switch(a){case"forwards":for(n=e.child,a=null;null!==n;)null!==(t=n.alternate)&&null===Lo(t)&&(a=n),n=n.sibling;null===(n=a)?(a=e.child,e.child=null):(a=n.sibling,n.sibling=null),qs(e,!1,a,n,o,e.lastEffect);break;case"backwards":for(n=null,a=e.child,e.child=null;null!==a;){if(null!==(t=a.alternate)&&null===Lo(t)){e.child=a;break}t=a.sibling,a.sibling=n,n=a,a=t}qs(e,!0,n,null,o,e.lastEffect);break;case"together":qs(e,!1,null,null,void 0,e.lastEffect);break;default:e.memoizedState=null}return e.child}function Xs(t,e,n){null!==t&&(e.dependencies=t.dependencies);var r=e.expirationTime;if(0!==r&&sc(r),e.childExpirationTime<n)return null;if(null!==t&&e.child!==t.child)throw Error(s(153));if(null!==e.child){for(n=Sc(t=e.child,t.pendingProps),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=Sc(t,t.pendingProps)).return=e;n.sibling=null}return e.child}function Ys(t,e){switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?e||null===t.tail?t.tail=null:t.tail.sibling=null:r.sibling=null}}function Qs(t,e,n){var r=e.pendingProps;switch(e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ma(e.type)&&ba(),null;case 3:return Ro(),ca(pa),ca(da),(n=e.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==t&&null!==t.child||!Is(e)||(e.effectTag|=4),null;case 5:Fo(e),n=Ao(Co.current);var o=e.type;if(null!==t&&null!=e.stateNode)Vs(t,e,o,r,n),t.ref!==e.ref&&(e.effectTag|=128);else{if(!r){if(null===e.stateNode)throw Error(s(166));return null}if(t=Ao(To.current),Is(e)){r=e.stateNode,o=e.type;var i=e.memoizedProps;switch(r[jn]=e,r[Nn]=i,o){case"iframe":case"object":case"embed":Ke("load",r);break;case"video":case"audio":for(t=0;t<Qt.length;t++)Ke(Qt[t],r);break;case"source":Ke("error",r);break;case"img":case"image":case"link":Ke("error",r),Ke("load",r);break;case"form":Ke("reset",r),Ke("submit",r);break;case"details":Ke("toggle",r);break;case"input":kt(r,i),Ke("invalid",r),cn(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Ke("invalid",r),cn(n,"onChange");break;case"textarea":At(r,i),Ke("invalid",r),cn(n,"onChange")}for(var c in an(o,i),t=null,i)if(i.hasOwnProperty(c)){var u=i[c];"children"===c?"string"===typeof u?r.textContent!==u&&(t=["children",u]):"number"===typeof u&&r.textContent!==""+u&&(t=["children",""+u]):j.hasOwnProperty(c)&&null!=u&&cn(n,c)}switch(o){case"input":Ot(r),St(r,i,!0);break;case"textarea":Ot(r),Rt(r);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(r.onclick=un)}n=t,e.updateQueue=n,null!==n&&(e.effectTag|=4)}else{switch(c=9===n.nodeType?n:n.ownerDocument,t===sn&&(t=Mt(o)),t===sn?"script"===o?((t=c.createElement("div")).innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):"string"===typeof r.is?t=c.createElement(o,{is:r.is}):(t=c.createElement(o),"select"===o&&(c=t,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):t=c.createElementNS(t,o),t[jn]=e,t[Nn]=r,Bs(t,e),e.stateNode=t,c=on(o,r),o){case"iframe":case"object":case"embed":Ke("load",t),u=r;break;case"video":case"audio":for(u=0;u<Qt.length;u++)Ke(Qt[u],t);u=r;break;case"source":Ke("error",t),u=r;break;case"img":case"image":case"link":Ke("error",t),Ke("load",t),u=r;break;case"form":Ke("reset",t),Ke("submit",t),u=r;break;case"details":Ke("toggle",t),u=r;break;case"input":kt(t,r),u=wt(t,r),Ke("invalid",t),cn(n,"onChange");break;case"option":u=Tt(t,r);break;case"select":t._wrapperState={wasMultiple:!!r.multiple},u=a({},r,{value:void 0}),Ke("invalid",t),cn(n,"onChange");break;case"textarea":At(t,r),u=Ct(t,r),Ke("invalid",t),cn(n,"onChange");break;default:u=r}an(o,u);var l=u;for(i in l)if(l.hasOwnProperty(i)){var d=l[i];"style"===i?nn(t,d):"dangerouslySetInnerHTML"===i?null!=(d=d?d.__html:void 0)&&Pt(t,d):"children"===i?"string"===typeof d?("textarea"!==o||""!==d)&&Bt(t,d):"number"===typeof d&&Bt(t,""+d):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(j.hasOwnProperty(i)?null!=d&&cn(n,i):null!=d&&J(t,i,d,c))}switch(o){case"input":Ot(t),St(t,r,!1);break;case"textarea":Ot(t),Rt(t);break;case"option":null!=r.value&&t.setAttribute("value",""+yt(r.value));break;case"select":t.multiple=!!r.multiple,null!=(n=r.value)?Et(t,!!r.multiple,n,!1):null!=r.defaultValue&&Et(t,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof u.onClick&&(t.onclick=un)}gn(o,r)&&(e.effectTag|=4)}null!==e.ref&&(e.effectTag|=128)}return null;case 6:if(t&&null!=e.stateNode)Ws(0,e,t.memoizedProps,r);else{if("string"!==typeof r&&null===e.stateNode)throw Error(s(166));n=Ao(Co.current),Ao(To.current),Is(e)?(n=e.stateNode,r=e.memoizedProps,n[jn]=e,n.nodeValue!==r&&(e.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[jn]=e,e.stateNode=n)}return null;case 13:return ca(Mo),r=e.memoizedState,0!==(64&e.effectTag)?(e.expirationTime=n,e):(n=null!==r,r=!1,null===t?void 0!==e.memoizedProps.fallback&&Is(e):(r=null!==(o=t.memoizedState),n||null===o||null!==(o=t.child.sibling)&&(null!==(i=e.firstEffect)?(e.firstEffect=o,o.nextEffect=i):(e.firstEffect=e.lastEffect=o,o.nextEffect=null),o.effectTag=8)),n&&!r&&0!==(2&e.mode)&&(null===t&&!0!==e.memoizedProps.unstable_avoidThisFallback||0!==(1&Mo.current)?Ii===Oi&&(Ii=xi):(Ii!==Oi&&Ii!==xi||(Ii=wi),0!==_i&&null!==ji&&(Rc(ji,Si),Dc(ji,_i)))),(n||r)&&(e.effectTag|=4),null);case 4:return Ro(),null;case 10:return to(e),null;case 17:return ma(e.type)&&ba(),null;case 19:if(ca(Mo),null===(r=e.memoizedState))return null;if(o=0!==(64&e.effectTag),null===(i=r.rendering)){if(o)Ys(r,!1);else if(Ii!==Oi||null!==t&&0!==(64&t.effectTag))for(i=e.child;null!==i;){if(null!==(t=Lo(i))){for(e.effectTag|=64,Ys(r,!1),null!==(o=t.updateQueue)&&(e.updateQueue=o,e.effectTag|=4),null===r.lastEffect&&(e.firstEffect=null),e.lastEffect=r.lastEffect,r=e.child;null!==r;)i=n,(o=r).effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(t=o.alternate)?(o.childExpirationTime=0,o.expirationTime=i,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=t.childExpirationTime,o.expirationTime=t.expirationTime,o.child=t.child,o.memoizedProps=t.memoizedProps,o.memoizedState=t.memoizedState,o.updateQueue=t.updateQueue,i=t.dependencies,o.dependencies=null===i?null:{expirationTime:i.expirationTime,firstContext:i.firstContext,responders:i.responders}),r=r.sibling;return ua(Mo,1&Mo.current|2),e.child}i=i.sibling}}else{if(!o)if(null!==(t=Lo(i))){if(e.effectTag|=64,o=!0,null!==(n=t.updateQueue)&&(e.updateQueue=n,e.effectTag|=4),Ys(r,!0),null===r.tail&&"hidden"===r.tailMode&&!i.alternate)return null!==(e=e.lastEffect=r.lastEffect)&&(e.nextEffect=null),null}else 2*Pa()-r.renderingStartTime>r.tailExpiration&&1<n&&(e.effectTag|=64,o=!0,Ys(r,!1),e.expirationTime=e.childExpirationTime=n-1);r.isBackwards?(i.sibling=e.child,e.child=i):(null!==(n=r.last)?n.sibling=i:e.child=i,r.last=i)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Pa()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=e.lastEffect,r.renderingStartTime=Pa(),n.sibling=null,e=Mo.current,ua(Mo,o?1&e|2:1&e),n):null}throw Error(s(156,e.tag))}function Js(t){switch(t.tag){case 1:ma(t.type)&&ba();var e=t.effectTag;return 4096&e?(t.effectTag=-4097&e|64,t):null;case 3:if(Ro(),ca(pa),ca(da),0!==(64&(e=t.effectTag)))throw Error(s(285));return t.effectTag=-4097&e|64,t;case 5:return Fo(t),null;case 13:return ca(Mo),4096&(e=t.effectTag)?(t.effectTag=-4097&e|64,t):null;case 19:return ca(Mo),null;case 4:return Ro(),null;case 10:return to(t),null;default:return null}}function Zs(t,e){return{value:t,source:e,stack:gt(e)}}Bs=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Vs=function(t,e,n,r,o){var s=t.memoizedProps;if(s!==r){var i,c,u=e.stateNode;switch(Ao(To.current),t=null,n){case"input":s=wt(u,s),r=wt(u,r),t=[];break;case"option":s=Tt(u,s),r=Tt(u,r),t=[];break;case"select":s=a({},s,{value:void 0}),r=a({},r,{value:void 0}),t=[];break;case"textarea":s=Ct(u,s),r=Ct(u,r),t=[];break;default:"function"!==typeof s.onClick&&"function"===typeof r.onClick&&(u.onclick=un)}for(i in an(n,r),n=null,s)if(!r.hasOwnProperty(i)&&s.hasOwnProperty(i)&&null!=s[i])if("style"===i)for(c in u=s[i])u.hasOwnProperty(c)&&(n||(n={}),n[c]="");else"dangerouslySetInnerHTML"!==i&&"children"!==i&&"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(j.hasOwnProperty(i)?t||(t=[]):(t=t||[]).push(i,null));for(i in r){var l=r[i];if(u=null!=s?s[i]:void 0,r.hasOwnProperty(i)&&l!==u&&(null!=l||null!=u))if("style"===i)if(u){for(c in u)!u.hasOwnProperty(c)||l&&l.hasOwnProperty(c)||(n||(n={}),n[c]="");for(c in l)l.hasOwnProperty(c)&&u[c]!==l[c]&&(n||(n={}),n[c]=l[c])}else n||(t||(t=[]),t.push(i,n)),n=l;else"dangerouslySetInnerHTML"===i?(l=l?l.__html:void 0,u=u?u.__html:void 0,null!=l&&u!==l&&(t=t||[]).push(i,l)):"children"===i?u===l||"string"!==typeof l&&"number"!==typeof l||(t=t||[]).push(i,""+l):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&(j.hasOwnProperty(i)?(null!=l&&cn(o,i),t||u===l||(t=[])):(t=t||[]).push(i,l))}n&&(t=t||[]).push("style",n),o=t,(e.updateQueue=o)&&(e.effectTag|=4)}},Ws=function(t,e,n,r){n!==r&&(e.effectTag|=4)};var $s="function"===typeof WeakSet?WeakSet:Set;function ti(t,e){var n=e.source,r=e.stack;null===r&&null!==n&&(r=gt(n)),null!==n&&bt(n.type),e=e.value,null!==t&&1===t.tag&&bt(t.type);try{console.error(e)}catch(a){setTimeout((function(){throw a}))}}function ei(t){var e=t.ref;if(null!==e)if("function"===typeof e)try{e(null)}catch(n){yc(t,n)}else e.current=null}function ni(t,e){switch(e.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&e.effectTag&&null!==t){var n=t.memoizedProps,r=t.memoizedState;e=(t=e.stateNode).getSnapshotBeforeUpdate(e.elementType===e.type?n:Xa(e.type,n),r),t.__reactInternalSnapshotBeforeUpdate=e}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(s(163))}function ri(t,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var n=e=e.next;do{if((n.tag&t)===t){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==e)}}function ai(t,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var n=e=e.next;do{if((n.tag&t)===t){var r=n.create;n.destroy=r()}n=n.next}while(n!==e)}}function oi(t,e,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ai(3,n);case 1:if(t=n.stateNode,4&n.effectTag)if(null===e)t.componentDidMount();else{var r=n.elementType===n.type?e.memoizedProps:Xa(n.type,e.memoizedProps);t.componentDidUpdate(r,e.memoizedState,t.__reactInternalSnapshotBeforeUpdate)}return void(null!==(e=n.updateQueue)&&po(n,e,t));case 3:if(null!==(e=n.updateQueue)){if(t=null,null!==n.child)switch(n.child.tag){case 5:t=n.child.stateNode;break;case 1:t=n.child.stateNode}po(n,e,t)}return;case 5:return t=n.stateNode,void(null===e&&4&n.effectTag&&gn(n.type,n.memoizedProps)&&t.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Me(n)))));case 19:case 17:case 20:case 21:return}throw Error(s(163))}function si(t,e,n){switch("function"===typeof wc&&wc(e),e.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(t=e.updateQueue)&&null!==(t=t.lastEffect)){var r=t.next;Wa(97<n?97:n,(function(){var t=r;do{var n=t.destroy;if(void 0!==n){var a=e;try{n()}catch(o){yc(a,o)}}t=t.next}while(t!==r)}))}break;case 1:ei(e),"function"===typeof(n=e.stateNode).componentWillUnmount&&function(t,e){try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(n){yc(t,n)}}(e,n);break;case 5:ei(e);break;case 4:li(t,e,n)}}function ii(t){var e=t.alternate;t.return=null,t.child=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.alternate=null,t.firstEffect=null,t.lastEffect=null,t.pendingProps=null,t.memoizedProps=null,t.stateNode=null,null!==e&&ii(e)}function ci(t){return 5===t.tag||3===t.tag||4===t.tag}function ui(t){t:{for(var e=t.return;null!==e;){if(ci(e)){var n=e;break t}e=e.return}throw Error(s(160))}switch(e=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:e=e.containerInfo,r=!0;break;default:throw Error(s(161))}16&n.effectTag&&(Bt(e,""),n.effectTag&=-17);t:e:for(n=t;;){for(;null===n.sibling;){if(null===n.return||ci(n.return)){n=null;break t}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break t}}r?function t(e,n,r){var a=e.tag,o=5===a||6===a;if(o)e=o?e.stateNode:e.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(e,n):r.insertBefore(e,n):(8===r.nodeType?(n=r.parentNode).insertBefore(e,r):(n=r).appendChild(e),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=un));else if(4!==a&&null!==(e=e.child))for(t(e,n,r),e=e.sibling;null!==e;)t(e,n,r),e=e.sibling}(t,n,e):function t(e,n,r){var a=e.tag,o=5===a||6===a;if(o)e=o?e.stateNode:e.stateNode.instance,n?r.insertBefore(e,n):r.appendChild(e);else if(4!==a&&null!==(e=e.child))for(t(e,n,r),e=e.sibling;null!==e;)t(e,n,r),e=e.sibling}(t,n,e)}function li(t,e,n){for(var r,a,o=e,i=!1;;){if(!i){i=o.return;t:for(;;){if(null===i)throw Error(s(160));switch(r=i.stateNode,i.tag){case 5:a=!1;break t;case 3:case 4:r=r.containerInfo,a=!0;break t}i=i.return}i=!0}if(5===o.tag||6===o.tag){t:for(var c=t,u=o,l=n,d=u;;)if(si(c,d,l),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===u)break t;for(;null===d.sibling;){if(null===d.return||d.return===u)break t;d=d.return}d.sibling.return=d.return,d=d.sibling}a?(c=r,u=o.stateNode,8===c.nodeType?c.parentNode.removeChild(u):c.removeChild(u)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,a=!0,o.child.return=o,o=o.child;continue}}else if(si(t,o,n),null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;4===(o=o.return).tag&&(i=!1)}o.sibling.return=o.return,o=o.sibling}}function di(t,e){switch(e.tag){case 0:case 11:case 14:case 15:case 22:return void ri(3,e);case 1:return;case 5:var n=e.stateNode;if(null!=n){var r=e.memoizedProps,a=null!==t?t.memoizedProps:r;t=e.type;var o=e.updateQueue;if(e.updateQueue=null,null!==o){for(n[Nn]=r,"input"===t&&"radio"===r.type&&null!=r.name&&jt(n,r),on(t,a),e=on(t,r),a=0;a<o.length;a+=2){var i=o[a],c=o[a+1];"style"===i?nn(n,c):"dangerouslySetInnerHTML"===i?Pt(n,c):"children"===i?Bt(n,c):J(n,i,c,e)}switch(t){case"input":Nt(n,r);break;case"textarea":_t(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(t=r.value)?Et(n,!!r.multiple,t,!1):e!==!!r.multiple&&(null!=r.defaultValue?Et(n,!!r.multiple,r.defaultValue,!0):Et(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===e.stateNode)throw Error(s(162));return void(e.stateNode.nodeValue=e.memoizedProps);case 3:return void((e=e.stateNode).hydrate&&(e.hydrate=!1,Me(e.containerInfo)));case 12:return;case 13:if(n=e,null===e.memoizedState?r=!1:(r=!0,n=e.child,Di=Pa()),null!==n)t:for(t=n;;){if(5===t.tag)o=t.stateNode,r?"function"===typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none":(o=t.stateNode,a=void 0!==(a=t.memoizedProps.style)&&null!==a&&a.hasOwnProperty("display")?a.display:null,o.style.display=en("display",a));else if(6===t.tag)t.stateNode.nodeValue=r?"":t.memoizedProps;else{if(13===t.tag&&null!==t.memoizedState&&null===t.memoizedState.dehydrated){(o=t.child.sibling).return=t,t=o;continue}if(null!==t.child){t.child.return=t,t=t.child;continue}}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}return void pi(e);case 19:return void pi(e);case 17:return}throw Error(s(163))}function pi(t){var e=t.updateQueue;if(null!==e){t.updateQueue=null;var n=t.stateNode;null===n&&(n=t.stateNode=new $s),e.forEach((function(e){var r=Oc.bind(null,t,e);n.has(e)||(n.add(e),e.then(r,r))}))}}var hi="function"===typeof WeakMap?WeakMap:Map;function fi(t,e,n){(n=io(n,null)).tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){Mi||(Mi=!0,Li=r),ti(t,e)},n}function mi(t,e,n){(n=io(n,null)).tag=3;var r=t.type.getDerivedStateFromError;if("function"===typeof r){var a=e.value;n.payload=function(){return ti(t,e),r(a)}}var o=t.stateNode;return null!==o&&"function"===typeof o.componentDidCatch&&(n.callback=function(){"function"!==typeof r&&(null===zi?zi=new Set([this]):zi.add(this),ti(t,e));var n=e.stack;this.componentDidCatch(e.value,{componentStack:null!==n?n:""})}),n}var bi,gi=Math.ceil,yi=Q.ReactCurrentDispatcher,vi=Q.ReactCurrentOwner,Oi=0,xi=3,wi=4,ki=0,ji=null,Ni=null,Si=0,Ii=Oi,Ti=null,Ei=1073741823,Ci=1073741823,Ai=null,_i=0,Ri=!1,Di=0,Fi=null,Mi=!1,Li=null,zi=null,Pi=!1,Bi=null,Vi=90,Wi=null,Ui=0,Gi=null,Hi=0;function qi(){return 0!==(48&ki)?1073741821-(Pa()/10|0):0!==Hi?Hi:Hi=1073741821-(Pa()/10|0)}function Ki(t,e,n){if(0===(2&(e=e.mode)))return 1073741823;var r=Ba();if(0===(4&e))return 99===r?1073741823:1073741822;if(0!==(16&ki))return Si;if(null!==n)t=Ka(t,0|n.timeoutMs||5e3,250);else switch(r){case 99:t=1073741823;break;case 98:t=Ka(t,150,100);break;case 97:case 96:t=Ka(t,5e3,250);break;case 95:t=2;break;default:throw Error(s(326))}return null!==ji&&t===Si&&--t,t}function Xi(t,e){if(50<Ui)throw Ui=0,Gi=null,Error(s(185));if(null!==(t=Yi(t,e))){var n=Ba();1073741823===e?0!==(8&ki)&&0===(48&ki)?$i(t):(Ji(t),0===ki&&Ha()):Ji(t),0===(4&ki)||98!==n&&99!==n||(null===Wi?Wi=new Map([[t,e]]):(void 0===(n=Wi.get(t))||n>e)&&Wi.set(t,e))}}function Yi(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e);var r=t.return,a=null;if(null===r&&3===t.tag)a=t.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<e&&(r.childExpirationTime=e),null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e),null===r.return&&3===r.tag){a=r.stateNode;break}r=r.return}return null!==a&&(ji===a&&(sc(e),Ii===wi&&Rc(a,Si)),Dc(a,e)),a}function Qi(t){var e=t.lastExpiredTime;if(0!==e)return e;if(!_c(t,e=t.firstPendingTime))return e;var n=t.lastPingedTime;return 2>=(t=n>(t=t.nextKnownPendingLevel)?n:t)&&e!==t?0:t}function Ji(t){if(0!==t.lastExpiredTime)t.callbackExpirationTime=1073741823,t.callbackPriority=99,t.callbackNode=Ga($i.bind(null,t));else{var e=Qi(t),n=t.callbackNode;if(0===e)null!==n&&(t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90);else{var r=qi();if(1073741823===e?r=99:1===e||2===e?r=95:r=0>=(r=10*(1073741821-e)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var a=t.callbackPriority;if(t.callbackExpirationTime===e&&a>=r)return;n!==_a&&ka(n)}t.callbackExpirationTime=e,t.callbackPriority=r,e=1073741823===e?Ga($i.bind(null,t)):Ua(r,Zi.bind(null,t),{timeout:10*(1073741821-e)-Pa()}),t.callbackNode=e}}}function Zi(t,e){if(Hi=0,e)return Fc(t,e=qi()),Ji(t),null;var n=Qi(t);if(0!==n){if(e=t.callbackNode,0!==(48&ki))throw Error(s(327));if(mc(),t===ji&&n===Si||nc(t,n),null!==Ni){var r=ki;ki|=16;for(var a=ac();;)try{cc();break}catch(c){rc(t,c)}if($a(),ki=r,yi.current=a,1===Ii)throw e=Ti,nc(t,n),Rc(t,n),Ji(t),e;if(null===Ni)switch(a=t.finishedWork=t.current.alternate,t.finishedExpirationTime=n,r=Ii,ji=null,r){case Oi:case 1:throw Error(s(345));case 2:Fc(t,2<n?2:n);break;case xi:if(Rc(t,n),n===(r=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=dc(a)),1073741823===Ei&&10<(a=Di+500-Pa())){if(Ri){var o=t.lastPingedTime;if(0===o||o>=n){t.lastPingedTime=n,nc(t,n);break}}if(0!==(o=Qi(t))&&o!==n)break;if(0!==r&&r!==n){t.lastPingedTime=r;break}t.timeoutHandle=vn(pc.bind(null,t),a);break}pc(t);break;case wi:if(Rc(t,n),n===(r=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=dc(a)),Ri&&(0===(a=t.lastPingedTime)||a>=n)){t.lastPingedTime=n,nc(t,n);break}if(0!==(a=Qi(t))&&a!==n)break;if(0!==r&&r!==n){t.lastPingedTime=r;break}if(1073741823!==Ci?r=10*(1073741821-Ci)-Pa():1073741823===Ei?r=0:(r=10*(1073741821-Ei)-5e3,0>(r=(a=Pa())-r)&&(r=0),(n=10*(1073741821-n)-a)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*gi(r/1960))-r)&&(r=n)),10<r){t.timeoutHandle=vn(pc.bind(null,t),r);break}pc(t);break;case 5:if(1073741823!==Ei&&null!==Ai){o=Ei;var i=Ai;if(0>=(r=0|i.busyMinDurationMs)?r=0:(a=0|i.busyDelayMs,r=(o=Pa()-(10*(1073741821-o)-(0|i.timeoutMs||5e3)))<=a?0:a+r-o),10<r){Rc(t,n),t.timeoutHandle=vn(pc.bind(null,t),r);break}}pc(t);break;default:throw Error(s(329))}if(Ji(t),t.callbackNode===e)return Zi.bind(null,t)}}return null}function $i(t){var e=t.lastExpiredTime;if(e=0!==e?e:1073741823,0!==(48&ki))throw Error(s(327));if(mc(),t===ji&&e===Si||nc(t,e),null!==Ni){var n=ki;ki|=16;for(var r=ac();;)try{ic();break}catch(a){rc(t,a)}if($a(),ki=n,yi.current=r,1===Ii)throw n=Ti,nc(t,e),Rc(t,e),Ji(t),n;if(null!==Ni)throw Error(s(261));t.finishedWork=t.current.alternate,t.finishedExpirationTime=e,ji=null,pc(t),Ji(t)}return null}function tc(t,e){var n=ki;ki|=1;try{return t(e)}finally{0===(ki=n)&&Ha()}}function ec(t,e){var n=ki;ki&=-2,ki|=8;try{return t(e)}finally{0===(ki=n)&&Ha()}}function nc(t,e){t.finishedWork=null,t.finishedExpirationTime=0;var n=t.timeoutHandle;if(-1!==n&&(t.timeoutHandle=-1,On(n)),null!==Ni)for(n=Ni.return;null!==n;){var r=n;switch(r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&ba();break;case 3:Ro(),ca(pa),ca(da);break;case 5:Fo(r);break;case 4:Ro();break;case 13:case 19:ca(Mo);break;case 10:to(r)}n=n.return}ji=t,Ni=Sc(t.current,null),Si=e,Ii=Oi,Ti=null,Ci=Ei=1073741823,Ai=null,_i=0,Ri=!1}function rc(t,e){for(;;){try{if($a(),Po.current=bs,Ho)for(var n=Wo.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Vo=0,Go=Uo=Wo=null,Ho=!1,null===Ni||null===Ni.return)return Ii=1,Ti=e,Ni=null;t:{var a=t,o=Ni.return,s=Ni,i=e;if(e=Si,s.effectTag|=2048,s.firstEffect=s.lastEffect=null,null!==i&&"object"===typeof i&&"function"===typeof i.then){var c=i;if(0===(2&s.mode)){var u=s.alternate;u?(s.updateQueue=u.updateQueue,s.memoizedState=u.memoizedState,s.expirationTime=u.expirationTime):(s.updateQueue=null,s.memoizedState=null)}var l=0!==(1&Mo.current),d=o;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var f=d.memoizedProps;p=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!l)}}if(p){var m=d.updateQueue;if(null===m){var b=new Set;b.add(c),d.updateQueue=b}else m.add(c);if(0===(2&d.mode)){if(d.effectTag|=64,s.effectTag&=-2981,1===s.tag)if(null===s.alternate)s.tag=17;else{var g=io(1073741823,null);g.tag=2,co(s,g)}s.expirationTime=1073741823;break t}i=void 0,s=e;var y=a.pingCache;if(null===y?(y=a.pingCache=new hi,i=new Set,y.set(c,i)):void 0===(i=y.get(c))&&(i=new Set,y.set(c,i)),!i.has(s)){i.add(s);var v=vc.bind(null,a,c,s);c.then(v,v)}d.effectTag|=4096,d.expirationTime=e;break t}d=d.return}while(null!==d);i=Error((bt(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+gt(s))}5!==Ii&&(Ii=2),i=Zs(i,s),d=o;do{switch(d.tag){case 3:c=i,d.effectTag|=4096,d.expirationTime=e,uo(d,fi(d,c,e));break t;case 1:c=i;var O=d.type,x=d.stateNode;if(0===(64&d.effectTag)&&("function"===typeof O.getDerivedStateFromError||null!==x&&"function"===typeof x.componentDidCatch&&(null===zi||!zi.has(x)))){d.effectTag|=4096,d.expirationTime=e,uo(d,mi(d,c,e));break t}}d=d.return}while(null!==d)}Ni=lc(Ni)}catch(w){e=w;continue}break}}function ac(){var t=yi.current;return yi.current=bs,null===t?bs:t}function oc(t,e){t<Ei&&2<t&&(Ei=t),null!==e&&t<Ci&&2<t&&(Ci=t,Ai=e)}function sc(t){t>_i&&(_i=t)}function ic(){for(;null!==Ni;)Ni=uc(Ni)}function cc(){for(;null!==Ni&&!Ra();)Ni=uc(Ni)}function uc(t){var e=bi(t.alternate,t,Si);return t.memoizedProps=t.pendingProps,null===e&&(e=lc(t)),vi.current=null,e}function lc(t){Ni=t;do{var e=Ni.alternate;if(t=Ni.return,0===(2048&Ni.effectTag)){if(e=Qs(e,Ni,Si),1===Si||1!==Ni.childExpirationTime){for(var n=0,r=Ni.child;null!==r;){var a=r.expirationTime,o=r.childExpirationTime;a>n&&(n=a),o>n&&(n=o),r=r.sibling}Ni.childExpirationTime=n}if(null!==e)return e;null!==t&&0===(2048&t.effectTag)&&(null===t.firstEffect&&(t.firstEffect=Ni.firstEffect),null!==Ni.lastEffect&&(null!==t.lastEffect&&(t.lastEffect.nextEffect=Ni.firstEffect),t.lastEffect=Ni.lastEffect),1<Ni.effectTag&&(null!==t.lastEffect?t.lastEffect.nextEffect=Ni:t.firstEffect=Ni,t.lastEffect=Ni))}else{if(null!==(e=Js(Ni)))return e.effectTag&=2047,e;null!==t&&(t.firstEffect=t.lastEffect=null,t.effectTag|=2048)}if(null!==(e=Ni.sibling))return e;Ni=t}while(null!==Ni);return Ii===Oi&&(Ii=5),null}function dc(t){var e=t.expirationTime;return e>(t=t.childExpirationTime)?e:t}function pc(t){var e=Ba();return Wa(99,hc.bind(null,t,e)),null}function hc(t,e){do{mc()}while(null!==Bi);if(0!==(48&ki))throw Error(s(327));var n=t.finishedWork,r=t.finishedExpirationTime;if(null===n)return null;if(t.finishedWork=null,t.finishedExpirationTime=0,n===t.current)throw Error(s(177));t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90,t.nextKnownPendingLevel=0;var a=dc(n);if(t.firstPendingTime=a,r<=t.lastSuspendedTime?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:r<=t.firstSuspendedTime&&(t.firstSuspendedTime=r-1),r<=t.lastPingedTime&&(t.lastPingedTime=0),r<=t.lastExpiredTime&&(t.lastExpiredTime=0),t===ji&&(Ni=ji=null,Si=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,a=n.firstEffect):a=n:a=n.firstEffect,null!==a){var o=ki;ki|=32,vi.current=null,mn=qe;var i=hn();if(fn(i)){if("selectionStart"in i)var c={start:i.selectionStart,end:i.selectionEnd};else t:{var u=(c=(c=i.ownerDocument)&&c.defaultView||window).getSelection&&c.getSelection();if(u&&0!==u.rangeCount){c=u.anchorNode;var l=u.anchorOffset,d=u.focusNode;u=u.focusOffset;try{c.nodeType,d.nodeType}catch(S){c=null;break t}var p=0,h=-1,f=-1,m=0,b=0,g=i,y=null;e:for(;;){for(var v;g!==c||0!==l&&3!==g.nodeType||(h=p+l),g!==d||0!==u&&3!==g.nodeType||(f=p+u),3===g.nodeType&&(p+=g.nodeValue.length),null!==(v=g.firstChild);)y=g,g=v;for(;;){if(g===i)break e;if(y===c&&++m===l&&(h=p),y===d&&++b===u&&(f=p),null!==(v=g.nextSibling))break;y=(g=y).parentNode}g=v}c=-1===h||-1===f?null:{start:h,end:f}}else c=null}c=c||{start:0,end:0}}else c=null;bn={activeElementDetached:null,focusedElem:i,selectionRange:c},qe=!1,Fi=a;do{try{fc()}catch(S){if(null===Fi)throw Error(s(330));yc(Fi,S),Fi=Fi.nextEffect}}while(null!==Fi);Fi=a;do{try{for(i=t,c=e;null!==Fi;){var O=Fi.effectTag;if(16&O&&Bt(Fi.stateNode,""),128&O){var x=Fi.alternate;if(null!==x){var w=x.ref;null!==w&&("function"===typeof w?w(null):w.current=null)}}switch(1038&O){case 2:ui(Fi),Fi.effectTag&=-3;break;case 6:ui(Fi),Fi.effectTag&=-3,di(Fi.alternate,Fi);break;case 1024:Fi.effectTag&=-1025;break;case 1028:Fi.effectTag&=-1025,di(Fi.alternate,Fi);break;case 4:di(Fi.alternate,Fi);break;case 8:li(i,l=Fi,c),ii(l)}Fi=Fi.nextEffect}}catch(S){if(null===Fi)throw Error(s(330));yc(Fi,S),Fi=Fi.nextEffect}}while(null!==Fi);if(w=bn,x=hn(),O=w.focusedElem,c=w.selectionRange,x!==O&&O&&O.ownerDocument&&function t(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?t(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}(O.ownerDocument.documentElement,O)){null!==c&&fn(O)&&(x=c.start,void 0===(w=c.end)&&(w=x),"selectionStart"in O?(O.selectionStart=x,O.selectionEnd=Math.min(w,O.value.length)):(w=(x=O.ownerDocument||document)&&x.defaultView||window).getSelection&&(w=w.getSelection(),l=O.textContent.length,i=Math.min(c.start,l),c=void 0===c.end?i:Math.min(c.end,l),!w.extend&&i>c&&(l=c,c=i,i=l),l=pn(O,i),d=pn(O,c),l&&d&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==d.node||w.focusOffset!==d.offset)&&((x=x.createRange()).setStart(l.node,l.offset),w.removeAllRanges(),i>c?(w.addRange(x),w.extend(d.node,d.offset)):(x.setEnd(d.node,d.offset),w.addRange(x))))),x=[];for(w=O;w=w.parentNode;)1===w.nodeType&&x.push({element:w,left:w.scrollLeft,top:w.scrollTop});for("function"===typeof O.focus&&O.focus(),O=0;O<x.length;O++)(w=x[O]).element.scrollLeft=w.left,w.element.scrollTop=w.top}qe=!!mn,bn=mn=null,t.current=n,Fi=a;do{try{for(O=t;null!==Fi;){var k=Fi.effectTag;if(36&k&&oi(O,Fi.alternate,Fi),128&k){x=void 0;var j=Fi.ref;if(null!==j){var N=Fi.stateNode;switch(Fi.tag){case 5:x=N;break;default:x=N}"function"===typeof j?j(x):j.current=x}}Fi=Fi.nextEffect}}catch(S){if(null===Fi)throw Error(s(330));yc(Fi,S),Fi=Fi.nextEffect}}while(null!==Fi);Fi=null,Da(),ki=o}else t.current=n;if(Pi)Pi=!1,Bi=t,Vi=e;else for(Fi=a;null!==Fi;)e=Fi.nextEffect,Fi.nextEffect=null,Fi=e;if(0===(e=t.firstPendingTime)&&(zi=null),1073741823===e?t===Gi?Ui++:(Ui=0,Gi=t):Ui=0,"function"===typeof xc&&xc(n.stateNode,r),Ji(t),Mi)throw Mi=!1,t=Li,Li=null,t;return 0!==(8&ki)||Ha(),null}function fc(){for(;null!==Fi;){var t=Fi.effectTag;0!==(256&t)&&ni(Fi.alternate,Fi),0===(512&t)||Pi||(Pi=!0,Ua(97,(function(){return mc(),null}))),Fi=Fi.nextEffect}}function mc(){if(90!==Vi){var t=97<Vi?97:Vi;return Vi=90,Wa(t,bc)}}function bc(){if(null===Bi)return!1;var t=Bi;if(Bi=null,0!==(48&ki))throw Error(s(331));var e=ki;for(ki|=32,t=t.current.firstEffect;null!==t;){try{var n=t;if(0!==(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ri(5,n),ai(5,n)}}catch(r){if(null===t)throw Error(s(330));yc(t,r)}n=t.nextEffect,t.nextEffect=null,t=n}return ki=e,Ha(),!0}function gc(t,e,n){co(t,e=fi(t,e=Zs(n,e),1073741823)),null!==(t=Yi(t,1073741823))&&Ji(t)}function yc(t,e){if(3===t.tag)gc(t,t,e);else for(var n=t.return;null!==n;){if(3===n.tag){gc(n,t,e);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===zi||!zi.has(r))){co(n,t=mi(n,t=Zs(e,t),1073741823)),null!==(n=Yi(n,1073741823))&&Ji(n);break}}n=n.return}}function vc(t,e,n){var r=t.pingCache;null!==r&&r.delete(e),ji===t&&Si===n?Ii===wi||Ii===xi&&1073741823===Ei&&Pa()-Di<500?nc(t,Si):Ri=!0:_c(t,n)&&(0!==(e=t.lastPingedTime)&&e<n||(t.lastPingedTime=n,Ji(t)))}function Oc(t,e){var n=t.stateNode;null!==n&&n.delete(e),0===(e=0)&&(e=Ki(e=qi(),t,null)),null!==(t=Yi(t,e))&&Ji(t)}bi=function(t,e,n){var r=e.expirationTime;if(null!==t){var a=e.pendingProps;if(t.memoizedProps!==a||pa.current)Cs=!0;else{if(r<n){switch(Cs=!1,e.tag){case 3:Ps(e),Ts();break;case 5:if(Do(e),4&e.mode&&1!==n&&a.hidden)return e.expirationTime=e.childExpirationTime=1,null;break;case 1:ma(e.type)&&va(e);break;case 4:_o(e,e.stateNode.containerInfo);break;case 10:r=e.memoizedProps.value,a=e.type._context,ua(Ya,a._currentValue),a._currentValue=r;break;case 13:if(null!==e.memoizedState)return 0!==(r=e.child.childExpirationTime)&&r>=n?Gs(t,e,n):(ua(Mo,1&Mo.current),null!==(e=Xs(t,e,n))?e.sibling:null);ua(Mo,1&Mo.current);break;case 19:if(r=e.childExpirationTime>=n,0!==(64&t.effectTag)){if(r)return Ks(t,e,n);e.effectTag|=64}if(null!==(a=e.memoizedState)&&(a.rendering=null,a.tail=null),ua(Mo,Mo.current),!r)return null}return Xs(t,e,n)}Cs=!1}}else Cs=!1;switch(e.expirationTime=0,e.tag){case 2:if(r=e.type,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,a=fa(e,da.current),no(e,n),a=Xo(null,e,r,t,a,n),e.effectTag|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof){if(e.tag=1,e.memoizedState=null,e.updateQueue=null,ma(r)){var o=!0;va(e)}else o=!1;e.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,oo(e);var i=r.getDerivedStateFromProps;"function"===typeof i&&mo(e,r,i,t),a.updater=bo,e.stateNode=a,a._reactInternalFiber=e,Oo(e,r,t,n),e=zs(null,e,r,!0,o,n)}else e.tag=0,As(null,e,a,n),e=e.child;return e;case 16:t:{if(a=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,function(t){if(-1===t._status){t._status=0;var e=t._ctor;e=e(),t._result=e,e.then((function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)}),(function(e){0===t._status&&(t._status=2,t._result=e)}))}}(a),1!==a._status)throw a._result;switch(a=a._result,e.type=a,o=e.tag=function(t){if("function"===typeof t)return Nc(t)?1:0;if(void 0!==t&&null!==t){if((t=t.$$typeof)===ct)return 11;if(t===dt)return 14}return 2}(a),t=Xa(a,t),o){case 0:e=Ms(null,e,a,t,n);break t;case 1:e=Ls(null,e,a,t,n);break t;case 11:e=_s(null,e,a,t,n);break t;case 14:e=Rs(null,e,a,Xa(a.type,t),r,n);break t}throw Error(s(306,a,""))}return e;case 0:return r=e.type,a=e.pendingProps,Ms(t,e,r,a=e.elementType===r?a:Xa(r,a),n);case 1:return r=e.type,a=e.pendingProps,Ls(t,e,r,a=e.elementType===r?a:Xa(r,a),n);case 3:if(Ps(e),r=e.updateQueue,null===t||null===r)throw Error(s(282));if(r=e.pendingProps,a=null!==(a=e.memoizedState)?a.element:null,so(t,e),lo(e,r,null,n),(r=e.memoizedState.element)===a)Ts(),e=Xs(t,e,n);else{if((a=e.stateNode.hydrate)&&(xs=xn(e.stateNode.containerInfo.firstChild),Os=e,a=ws=!0),a)for(n=So(e,null,r,n),e.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else As(t,e,r,n),Ts();e=e.child}return e;case 5:return Do(e),null===t&&Ns(e),r=e.type,a=e.pendingProps,o=null!==t?t.memoizedProps:null,i=a.children,yn(r,a)?i=null:null!==o&&yn(r,o)&&(e.effectTag|=16),Fs(t,e),4&e.mode&&1!==n&&a.hidden?(e.expirationTime=e.childExpirationTime=1,e=null):(As(t,e,i,n),e=e.child),e;case 6:return null===t&&Ns(e),null;case 13:return Gs(t,e,n);case 4:return _o(e,e.stateNode.containerInfo),r=e.pendingProps,null===t?e.child=No(e,null,r,n):As(t,e,r,n),e.child;case 11:return r=e.type,a=e.pendingProps,_s(t,e,r,a=e.elementType===r?a:Xa(r,a),n);case 7:return As(t,e,e.pendingProps,n),e.child;case 8:case 12:return As(t,e,e.pendingProps.children,n),e.child;case 10:t:{r=e.type._context,a=e.pendingProps,i=e.memoizedProps,o=a.value;var c=e.type._context;if(ua(Ya,c._currentValue),c._currentValue=o,null!==i)if(c=i.value,0===(o=Lr(c,o)?0:0|("function"===typeof r._calculateChangedBits?r._calculateChangedBits(c,o):1073741823))){if(i.children===a.children&&!pa.current){e=Xs(t,e,n);break t}}else for(null!==(c=e.child)&&(c.return=e);null!==c;){var u=c.dependencies;if(null!==u){i=c.child;for(var l=u.firstContext;null!==l;){if(l.context===r&&0!==(l.observedBits&o)){1===c.tag&&((l=io(n,null)).tag=2,co(c,l)),c.expirationTime<n&&(c.expirationTime=n),null!==(l=c.alternate)&&l.expirationTime<n&&(l.expirationTime=n),eo(c.return,n),u.expirationTime<n&&(u.expirationTime=n);break}l=l.next}}else i=10===c.tag&&c.type===e.type?null:c.child;if(null!==i)i.return=c;else for(i=c;null!==i;){if(i===e){i=null;break}if(null!==(c=i.sibling)){c.return=i.return,i=c;break}i=i.return}c=i}As(t,e,a.children,n),e=e.child}return e;case 9:return a=e.type,r=(o=e.pendingProps).children,no(e,n),r=r(a=ro(a,o.unstable_observedBits)),e.effectTag|=1,As(t,e,r,n),e.child;case 14:return o=Xa(a=e.type,e.pendingProps),Rs(t,e,a,o=Xa(a.type,o),r,n);case 15:return Ds(t,e,e.type,e.pendingProps,r,n);case 17:return r=e.type,a=e.pendingProps,a=e.elementType===r?a:Xa(r,a),null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),e.tag=1,ma(r)?(t=!0,va(e)):t=!1,no(e,n),yo(e,r,a),Oo(e,r,a,n),zs(null,e,r,!0,t,n);case 19:return Ks(t,e,n)}throw Error(s(156,e.tag))};var xc=null,wc=null;function kc(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function jc(t,e,n,r){return new kc(t,e,n,r)}function Nc(t){return!(!(t=t.prototype)||!t.isReactComponent)}function Sc(t,e){var n=t.alternate;return null===n?((n=jc(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=t.childExpirationTime,n.expirationTime=t.expirationTime,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=null===e?null:{expirationTime:e.expirationTime,firstContext:e.firstContext,responders:e.responders},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function Ic(t,e,n,r,a,o){var i=2;if(r=t,"function"===typeof t)Nc(t)&&(i=1);else if("string"===typeof t)i=5;else t:switch(t){case nt:return Tc(n.children,a,o,e);case it:i=8,a|=7;break;case rt:i=8,a|=1;break;case at:return(t=jc(12,n,e,8|a)).elementType=at,t.type=at,t.expirationTime=o,t;case ut:return(t=jc(13,n,e,a)).type=ut,t.elementType=ut,t.expirationTime=o,t;case lt:return(t=jc(19,n,e,a)).elementType=lt,t.expirationTime=o,t;default:if("object"===typeof t&&null!==t)switch(t.$$typeof){case ot:i=10;break t;case st:i=9;break t;case ct:i=11;break t;case dt:i=14;break t;case pt:i=16,r=null;break t;case ht:i=22;break t}throw Error(s(130,null==t?t:typeof t,""))}return(e=jc(i,n,e,a)).elementType=t,e.type=r,e.expirationTime=o,e}function Tc(t,e,n,r){return(t=jc(7,t,r,e)).expirationTime=n,t}function Ec(t,e,n){return(t=jc(6,t,null,e)).expirationTime=n,t}function Cc(t,e,n){return(e=jc(4,null!==t.children?t.children:[],t.key,e)).expirationTime=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Ac(t,e,n){this.tag=e,this.current=null,this.containerInfo=t,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function _c(t,e){var n=t.firstSuspendedTime;return t=t.lastSuspendedTime,0!==n&&n>=e&&t<=e}function Rc(t,e){var n=t.firstSuspendedTime,r=t.lastSuspendedTime;n<e&&(t.firstSuspendedTime=e),(r>e||0===n)&&(t.lastSuspendedTime=e),e<=t.lastPingedTime&&(t.lastPingedTime=0),e<=t.lastExpiredTime&&(t.lastExpiredTime=0)}function Dc(t,e){e>t.firstPendingTime&&(t.firstPendingTime=e);var n=t.firstSuspendedTime;0!==n&&(e>=n?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:e>=t.lastSuspendedTime&&(t.lastSuspendedTime=e+1),e>t.nextKnownPendingLevel&&(t.nextKnownPendingLevel=e))}function Fc(t,e){var n=t.lastExpiredTime;(0===n||n>e)&&(t.lastExpiredTime=e)}function Mc(t,e,n,r){var a=e.current,o=qi(),i=ho.suspense;o=Ki(o,a,i);t:if(n){e:{if($t(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(s(170));var c=n;do{switch(c.tag){case 3:c=c.stateNode.context;break e;case 1:if(ma(c.type)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break e}}c=c.return}while(null!==c);throw Error(s(171))}if(1===n.tag){var u=n.type;if(ma(u)){n=ya(n,u,c);break t}}n=c}else n=la;return null===e.context?e.context=n:e.pendingContext=n,(e=io(o,i)).payload={element:t},null!==(r=void 0===r?null:r)&&(e.callback=r),co(a,e),Xi(a,o),o}function Lc(t){if(!(t=t.current).child)return null;switch(t.child.tag){case 5:default:return t.child.stateNode}}function zc(t,e){null!==(t=t.memoizedState)&&null!==t.dehydrated&&t.retryTime<e&&(t.retryTime=e)}function Pc(t,e){zc(t,e),(t=t.alternate)&&zc(t,e)}function Bc(t,e,n){var r=new Ac(t,e,n=null!=n&&!0===n.hydrate),a=jc(3,null,null,2===e?7:1===e?3:0);r.current=a,a.stateNode=r,oo(a),t[Sn]=r.current,n&&0!==e&&function(t,e){var n=Zt(e);Se.forEach((function(t){fe(t,e,n)})),Ie.forEach((function(t){fe(t,e,n)}))}(0,9===t.nodeType?t:t.ownerDocument),this._internalRoot=r}function Vc(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function Wc(t,e,n,r,a){var o=n._reactRootContainer;if(o){var s=o._internalRoot;if("function"===typeof a){var i=a;a=function(){var t=Lc(s);i.call(t)}}Mc(e,s,t,a)}else{if(o=n._reactRootContainer=function(t,e){if(e||(e=!(!(e=t?9===t.nodeType?t.documentElement:t.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var n;n=t.lastChild;)t.removeChild(n);return new Bc(t,0,e?{hydrate:!0}:void 0)}(n,r),s=o._internalRoot,"function"===typeof a){var c=a;a=function(){var t=Lc(s);c.call(t)}}ec((function(){Mc(e,s,t,a)}))}return Lc(s)}function Uc(t,e,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:et,key:null==r?null:""+r,children:t,containerInfo:e,implementation:n}}function Gc(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Vc(e))throw Error(s(200));return Uc(t,e,null,n)}Bc.prototype.render=function(t){Mc(t,this._internalRoot,null,null)},Bc.prototype.unmount=function(){var t=this._internalRoot,e=t.containerInfo;Mc(null,t,null,(function(){e[Sn]=null}))},me=function(t){if(13===t.tag){var e=Ka(qi(),150,100);Xi(t,e),Pc(t,e)}},be=function(t){13===t.tag&&(Xi(t,3),Pc(t,3))},ge=function(t){if(13===t.tag){var e=qi();Xi(t,e=Ki(e,t,null)),Pc(t,e)}},T=function(t,e,n){switch(e){case"input":if(Nt(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var a=Cn(r);if(!a)throw Error(s(90));xt(r),Nt(r,a)}}}break;case"textarea":_t(t,n);break;case"select":null!=(e=n.value)&&Et(t,!!n.multiple,e,!1)}},D=tc,F=function(t,e,n,r,a){var o=ki;ki|=4;try{return Wa(98,t.bind(null,e,n,r,a))}finally{0===(ki=o)&&Ha()}},M=function(){0===(49&ki)&&(function(){if(null!==Wi){var t=Wi;Wi=null,t.forEach((function(t,e){Fc(e,t),Ji(e)})),Ha()}}(),mc())},L=function(t,e){var n=ki;ki|=2;try{return t(e)}finally{0===(ki=n)&&Ha()}};var Hc={Events:[Tn,En,Cn,S,k,Ln,function(t){ae(t,Mn)},_,R,Je,ie,mc,{current:!1}]};!function(t){var e=t.findFiberByHostInstance;(function(t){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var e=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(e.isDisabled||!e.supportsFiber)return!0;try{var n=e.inject(t);xc=function(t){try{e.onCommitFiberRoot(n,t,void 0,64===(64&t.current.effectTag))}catch(r){}},wc=function(t){try{e.onCommitFiberUnmount(n,t)}catch(r){}}}catch(r){}})(a({},t,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Q.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return null===(t=ne(t))?null:t.stateNode},findFiberByHostInstance:function(t){return e?e(t):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:In,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Hc,e.createPortal=Gc,e.findDOMNode=function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternalFiber;if(void 0===e){if("function"===typeof t.render)throw Error(s(188));throw Error(s(268,Object.keys(t)))}return t=null===(t=ne(e))?null:t.stateNode},e.flushSync=function(t,e){if(0!==(48&ki))throw Error(s(187));var n=ki;ki|=1;try{return Wa(99,t.bind(null,e))}finally{ki=n,Ha()}},e.hydrate=function(t,e,n){if(!Vc(e))throw Error(s(200));return Wc(null,t,e,!0,n)},e.render=function(t,e,n){if(!Vc(e))throw Error(s(200));return Wc(null,t,e,!1,n)},e.unmountComponentAtNode=function(t){if(!Vc(t))throw Error(s(40));return!!t._reactRootContainer&&(ec((function(){Wc(null,null,t,!1,(function(){t._reactRootContainer=null,t[Sn]=null}))})),!0)},e.unstable_batchedUpdates=tc,e.unstable_createPortal=function(t,e){return Gc(t,e,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},e.unstable_renderSubtreeIntoContainer=function(t,e,n,r){if(!Vc(n))throw Error(s(200));if(null==t||void 0===t._reactInternalFiber)throw Error(s(38));return Wc(t,e,n,!1,r)},e.version="16.14.0"},function(t,e,n){"use strict";t.exports=n(351)},function(t,e,n){"use strict";var r,a,o,s,i;if("undefined"===typeof window||"function"!==typeof MessageChannel){var c=null,u=null,l=function(){if(null!==c)try{var t=e.unstable_now();c(!0,t),c=null}catch(n){throw setTimeout(l,0),n}},d=Date.now();e.unstable_now=function(){return Date.now()-d},r=function(t){null!==c?setTimeout(r,0,t):(c=t,setTimeout(l,0))},a=function(t,e){u=setTimeout(t,e)},o=function(){clearTimeout(u)},s=function(){return!1},i=e.unstable_forceFrameRate=function(){}}else{var p=window.performance,h=window.Date,f=window.setTimeout,m=window.clearTimeout;if("undefined"!==typeof console){var b=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!==typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===typeof p&&"function"===typeof p.now)e.unstable_now=function(){return p.now()};else{var g=h.now();e.unstable_now=function(){return h.now()-g}}var y=!1,v=null,O=-1,x=5,w=0;s=function(){return e.unstable_now()>=w},i=function(){},e.unstable_forceFrameRate=function(t){0>t||125<t?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):x=0<t?Math.floor(1e3/t):5};var k=new MessageChannel,j=k.port2;k.port1.onmessage=function(){if(null!==v){var t=e.unstable_now();w=t+x;try{v(!0,t)?j.postMessage(null):(y=!1,v=null)}catch(n){throw j.postMessage(null),n}}else y=!1},r=function(t){v=t,y||(y=!0,j.postMessage(null))},a=function(t,n){O=f((function(){t(e.unstable_now())}),n)},o=function(){m(O),O=-1}}function N(t,e){var n=t.length;t.push(e);t:for(;;){var r=n-1>>>1,a=t[r];if(!(void 0!==a&&0<T(a,e)))break t;t[r]=e,t[n]=a,n=r}}function S(t){return void 0===(t=t[0])?null:t}function I(t){var e=t[0];if(void 0!==e){var n=t.pop();if(n!==e){t[0]=n;t:for(var r=0,a=t.length;r<a;){var o=2*(r+1)-1,s=t[o],i=o+1,c=t[i];if(void 0!==s&&0>T(s,n))void 0!==c&&0>T(c,s)?(t[r]=c,t[i]=n,r=i):(t[r]=s,t[o]=n,r=o);else{if(!(void 0!==c&&0>T(c,n)))break t;t[r]=c,t[i]=n,r=i}}}return e}return null}function T(t,e){var n=t.sortIndex-e.sortIndex;return 0!==n?n:t.id-e.id}var E=[],C=[],A=1,_=null,R=3,D=!1,F=!1,M=!1;function L(t){for(var e=S(C);null!==e;){if(null===e.callback)I(C);else{if(!(e.startTime<=t))break;I(C),e.sortIndex=e.expirationTime,N(E,e)}e=S(C)}}function z(t){if(M=!1,L(t),!F)if(null!==S(E))F=!0,r(P);else{var e=S(C);null!==e&&a(z,e.startTime-t)}}function P(t,n){F=!1,M&&(M=!1,o()),D=!0;var r=R;try{for(L(n),_=S(E);null!==_&&(!(_.expirationTime>n)||t&&!s());){var i=_.callback;if(null!==i){_.callback=null,R=_.priorityLevel;var c=i(_.expirationTime<=n);n=e.unstable_now(),"function"===typeof c?_.callback=c:_===S(E)&&I(E),L(n)}else I(E);_=S(E)}if(null!==_)var u=!0;else{var l=S(C);null!==l&&a(z,l.startTime-n),u=!1}return u}finally{_=null,R=r,D=!1}}function B(t){switch(t){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var V=i;e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(t){t.callback=null},e.unstable_continueExecution=function(){F||D||(F=!0,r(P))},e.unstable_getCurrentPriorityLevel=function(){return R},e.unstable_getFirstCallbackNode=function(){return S(E)},e.unstable_next=function(t){switch(R){case 1:case 2:case 3:var e=3;break;default:e=R}var n=R;R=e;try{return t()}finally{R=n}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=V,e.unstable_runWithPriority=function(t,e){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var n=R;R=t;try{return e()}finally{R=n}},e.unstable_scheduleCallback=function(t,n,s){var i=e.unstable_now();if("object"===typeof s&&null!==s){var c=s.delay;c="number"===typeof c&&0<c?i+c:i,s="number"===typeof s.timeout?s.timeout:B(t)}else s=B(t),c=i;return t={id:A++,callback:n,priorityLevel:t,startTime:c,expirationTime:s=c+s,sortIndex:-1},c>i?(t.sortIndex=c,N(C,t),null===S(E)&&t===S(C)&&(M?o():M=!0,a(z,c-i))):(t.sortIndex=s,N(E,t),F||D||(F=!0,r(P))),t},e.unstable_shouldYield=function(){var t=e.unstable_now();L(t);var n=S(E);return n!==_&&null!==_&&null!==n&&null!==n.callback&&n.startTime<=t&&n.expirationTime<_.expirationTime||s()},e.unstable_wrapCallback=function(t){var e=R;return function(){var n=R;R=e;try{return t.apply(this,arguments)}finally{R=n}}}},,,function(t,e,n){"use strict";e.byteLength=function(t){var e=u(t),n=e[0],r=e[1];return 3*(n+r)/4-r},e.toByteArray=function(t){var e,n,r=u(t),s=r[0],i=r[1],c=new o(function(t,e,n){return 3*(e+n)/4-n}(0,s,i)),l=0,d=i>0?s-4:s;for(n=0;n<d;n+=4)e=a[t.charCodeAt(n)]<<18|a[t.charCodeAt(n+1)]<<12|a[t.charCodeAt(n+2)]<<6|a[t.charCodeAt(n+3)],c[l++]=e>>16&255,c[l++]=e>>8&255,c[l++]=255&e;2===i&&(e=a[t.charCodeAt(n)]<<2|a[t.charCodeAt(n+1)]>>4,c[l++]=255&e);1===i&&(e=a[t.charCodeAt(n)]<<10|a[t.charCodeAt(n+1)]<<4|a[t.charCodeAt(n+2)]>>2,c[l++]=e>>8&255,c[l++]=255&e);return c},e.fromByteArray=function(t){for(var e,n=t.length,a=n%3,o=[],s=0,i=n-a;s<i;s+=16383)o.push(l(t,s,s+16383>i?i:s+16383));1===a?(e=t[n-1],o.push(r[e>>2]+r[e<<4&63]+"==")):2===a&&(e=(t[n-2]<<8)+t[n-1],o.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"="));return o.join("")};for(var r=[],a=[],o="undefined"!==typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,c=s.length;i<c;++i)r[i]=s[i],a[s.charCodeAt(i)]=i;function u(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function l(t,e,n){for(var a,o,s=[],i=e;i<n;i+=3)a=(t[i]<<16&16711680)+(t[i+1]<<8&65280)+(255&t[i+2]),s.push(r[(o=a)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,n,r,a){var o,s,i=8*a-r-1,c=(1<<i)-1,u=c>>1,l=-7,d=n?a-1:0,p=n?-1:1,h=t[e+d];for(d+=p,o=h&(1<<-l)-1,h>>=-l,l+=i;l>0;o=256*o+t[e+d],d+=p,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=r;l>0;s=256*s+t[e+d],d+=p,l-=8);if(0===o)o=1-u;else{if(o===c)return s?NaN:1/0*(h?-1:1);s+=Math.pow(2,r),o-=u}return(h?-1:1)*s*Math.pow(2,o-r)},e.write=function(t,e,n,r,a,o){var s,i,c,u=8*o-a-1,l=(1<<u)-1,d=l>>1,p=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(i=isNaN(e)?1:0,s=l):(s=Math.floor(Math.log(e)/Math.LN2),e*(c=Math.pow(2,-s))<1&&(s--,c*=2),(e+=s+d>=1?p/c:p*Math.pow(2,1-d))*c>=2&&(s++,c/=2),s+d>=l?(i=0,s=l):s+d>=1?(i=(e*c-1)*Math.pow(2,a),s+=d):(i=e*Math.pow(2,d-1)*Math.pow(2,a),s=0));a>=8;t[n+h]=255&i,h+=f,i/=256,a-=8);for(s=s<<a|i,u+=a;u>0;t[n+h]=255&s,h+=f,s/=256,u-=8);t[n+h-f]|=128*m}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){"use strict";(function(t){var e=n(32);const r=()=>n(358);let a;class o{constructor(){this.util=n(359),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e.c)().global.fetch?Object(e.c)().global.fetch(t,n):(null==a&&(a=r()),a(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e.c)().get("IS_NODE")&&!Object(e.c)().get("IS_BROWSER")&&Object(e.c)().setPlatform("node",new o)}).call(this,n(137))},,,function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n=function(){var t=4022871197;return function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)}}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function c(t,e){var n=new s(t),r=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.alea=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function c(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xor128=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function c(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xorwow=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this;e.next=function(){var t,n,r=e.x,a=e.i;return t=r[a],n=(t^=t>>>7)^t<<24,n^=(t=r[a+1&7])^t>>>10,n^=(t=r[a+3&7])^t>>>3,n^=(t=r[a+4&7])^t<<7,t=r[a+7&7],n^=(t^=t<<13)^t<<9,r[a]=n,e.i=a+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function c(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xorshift7=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this;e.next=function(){var t,n,r=e.w,a=e.X,o=e.i;return e.w=r=r+1640531527|0,n=a[o+34&127],t=a[o=o+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=a[o]=n^t,e.i=o,n+(r^r>>>16)|0},function(t,e){var n,r,a,o,s,i=[],c=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,c=Math.max(c,e.length)),a=0,o=-32;o<c;++o)e&&(r^=e.charCodeAt((o+32)%e.length)),0===o&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(s=s+1640531527|0,a=0==(n=i[127&o]^=r+s)?a+1:0);for(a>=128&&(i[127&(e&&e.length||0)]=-1),a=127,o=512;o>0;--o)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;t.w=s,t.X=i,t.i=a}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function c(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xor4096=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,a=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^a,e.a=a-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function c(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.tychei=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){var r;!function(a,o,s){var i,c=s.pow(256,6),u=s.pow(2,52),l=2*u;function d(t,e,n){var r=[],d=f(function t(e,n){var r,a=[],o=typeof e;if(n&&"object"==o)for(r in e)try{a.push(t(e[r],n-1))}catch(s){}return a.length?a:"string"==o?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,m(o)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(256):(t=new Uint8Array(256),(a.crypto||a.msCrypto).getRandomValues(t)),m(t)}catch(r){var e=a.navigator,n=e&&e.plugins;return[+new Date,a,n,a.screen,m(o)]}}():t,3),r),b=new p(r),g=function(){for(var t=b.g(6),e=c,n=0;t<u;)t=256*(t+n),e*=256,n=b.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return g.int32=function(){return 0|b.g(4)},g.quick=function(){return b.g(4)/4294967296},g.double=g,f(m(b.S),o),(e.pass||n||function(t,e,n,r){return r&&(r.S&&h(r,b),t.state=function(){return h(b,{})}),n?(s.random=t,e):t})(g,d,"global"in e?e.global:this==s,e.state)}function p(t){var e,n=t.length,r=this,a=0,o=r.i=r.j=0,s=r.S=[];for(n||(t=[n++]);a<256;)s[a]=a++;for(a=0;a<256;a++)s[a]=s[o=255&o+t[a%n]+(e=s[a])],s[o]=e;(r.g=function(t){for(var e,n=0,a=r.i,o=r.j,s=r.S;t--;)e=s[a=255&a+1],n=256*n+s[255&(s[a]=s[o=255&o+e])+(s[o]=e)];return r.i=a,r.j=o,n})(256)}function h(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function f(t,e){for(var n,r=t+"",a=0;a<r.length;)e[255&a]=255&(n^=19*e[255&a])+r.charCodeAt(a++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(f(s.random(),o),t.exports){t.exports=d;try{i=n(367)}catch(b){}}else void 0===(r=function(){return d}.call(e,n,e,t))||(t.exports=r)}("undefined"!==typeof self?self:this,[],Math)},,function(t,e,n){(function(t,e){!function(t,n){"use strict";if(!t.setImmediate){var r,a=1,o={},s=!1,i=t.document,c=Object.getPrototypeOf&&Object.getPrototypeOf(t);c=c&&c.setTimeout?c:t,"[object process]"==={}.toString.call(t.process)?r=function(t){e.nextTick((function(){l(t)}))}:function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?function(){var e="setImmediate$"+Math.random()+"$",n=function(n){n.source===t&&"string"===typeof n.data&&0===n.data.indexOf(e)&&l(+n.data.slice(e.length))};t.addEventListener?t.addEventListener("message",n,!1):t.attachEvent("onmessage",n),r=function(n){t.postMessage(e+n,"*")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){l(t.data)},r=function(e){t.port2.postMessage(e)}}():i&&"onreadystatechange"in i.createElement("script")?function(){var t=i.documentElement;r=function(e){var n=i.createElement("script");n.onreadystatechange=function(){l(e),n.onreadystatechange=null,t.removeChild(n),n=null},t.appendChild(n)}}():r=function(t){setTimeout(l,0,t)},c.setImmediate=function(t){"function"!==typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var s={callback:t,args:e};return o[a]=s,r(a),a++},c.clearImmediate=u}function u(t){delete o[t]}function l(t){if(s)setTimeout(l,0,t);else{var e=o[t];if(e){s=!0;try{!function(t){var e=t.callback,n=t.args;switch(n.length){case 0:e();break;case 1:e(n[0]);break;case 2:e(n[0],n[1]);break;case 3:e(n[0],n[1],n[2]);break;default:e.apply(void 0,n)}}(e)}finally{u(t),s=!1}}}}}("undefined"===typeof self?"undefined"===typeof t?this:t:self)}).call(this,n(178),n(137))},function(t,e,n){"use strict";(function(t){var e=n(35);const r=()=>n(370);let a;class o{constructor(){this.util=n(371),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e.b)().global.fetch?Object(e.b)().global.fetch(t,n):(null==a&&(a=r()),a(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e.b)().get("IS_NODE")&&Object(e.b)().setPlatform("node",new o)}).call(this,n(137))},,,function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n=function(){var t=4022871197;return function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)}}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function c(t,e){var n=new s(t),r=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.alea=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function c(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xor128=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function c(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xorwow=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this;e.next=function(){var t,n,r=e.x,a=e.i;return t=r[a],n=(t^=t>>>7)^t<<24,n^=(t=r[a+1&7])^t>>>10,n^=(t=r[a+3&7])^t>>>3,n^=(t=r[a+4&7])^t<<7,t=r[a+7&7],n^=(t^=t<<13)^t<<9,r[a]=n,e.i=a+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function c(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xorshift7=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this;e.next=function(){var t,n,r=e.w,a=e.X,o=e.i;return e.w=r=r+1640531527|0,n=a[o+34&127],t=a[o=o+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=a[o]=n^t,e.i=o,n+(r^r>>>16)|0},function(t,e){var n,r,a,o,s,i=[],c=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,c=Math.max(c,e.length)),a=0,o=-32;o<c;++o)e&&(r^=e.charCodeAt((o+32)%e.length)),0===o&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(s=s+1640531527|0,a=0==(n=i[127&o]^=r+s)?a+1:0);for(a>=128&&(i[127&(e&&e.length||0)]=-1),a=127,o=512;o>0;--o)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;t.w=s,t.X=i,t.i=a}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function c(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xor4096=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,a=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^a,e.a=a-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function c(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(53)&&n(89)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.tychei=c}(0,t,n(53))}).call(this,n(88)(t))},function(t,e,n){var r;!function(a,o){var s,i=this,c=o.pow(256,6),u=o.pow(2,52),l=2*u;function d(t,e,n){var r=[],d=f(function t(e,n){var r,a=[],o=typeof e;if(n&&"object"==o)for(r in e)try{a.push(t(e[r],n-1))}catch(s){}return a.length?a:"string"==o?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,m(a)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(256):(t=new Uint8Array(256),(i.crypto||i.msCrypto).getRandomValues(t)),m(t)}catch(r){var e=i.navigator,n=e&&e.plugins;return[+new Date,i,n,i.screen,m(a)]}}():t,3),r),b=new p(r),g=function(){for(var t=b.g(6),e=c,n=0;t<u;)t=256*(t+n),e*=256,n=b.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return g.int32=function(){return 0|b.g(4)},g.quick=function(){return b.g(4)/4294967296},g.double=g,f(m(b.S),a),(e.pass||n||function(t,e,n,r){return r&&(r.S&&h(r,b),t.state=function(){return h(b,{})}),n?(o.random=t,e):t})(g,d,"global"in e?e.global:this==o,e.state)}function p(t){var e,n=t.length,r=this,a=0,o=r.i=r.j=0,s=r.S=[];for(n||(t=[n++]);a<256;)s[a]=a++;for(a=0;a<256;a++)s[a]=s[o=255&o+t[a%n]+(e=s[a])],s[o]=e;(r.g=function(t){for(var e,n=0,a=r.i,o=r.j,s=r.S;t--;)e=s[a=255&a+1],n=256*n+s[255&(s[a]=s[o=255&o+e])+(s[o]=e)];return r.i=a,r.j=o,n})(256)}function h(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function f(t,e){for(var n,r=t+"",a=0;a<r.length;)e[255&a]=255&(n^=19*e[255&a])+r.charCodeAt(a++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(o.seedrandom=d,f(o.random(),a),t.exports){t.exports=d;try{s=n(379)}catch(b){}}else void 0===(r=function(){return d}.call(e,n,e,t))||(t.exports=r)}([],Math)}]]);
//# sourceMappingURL=2.57c59af8.chunk.js.map